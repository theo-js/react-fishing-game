[{"C:\\www\\personal\\fishing-game\\src\\index.tsx":"1","C:\\www\\personal\\fishing-game\\src\\reportWebVitals.ts":"2","C:\\www\\personal\\fishing-game\\src\\App.tsx":"3","C:\\www\\personal\\fishing-game\\src\\store\\index.js":"4","C:\\www\\personal\\fishing-game\\src\\components\\Game\\index.tsx":"5","C:\\www\\personal\\fishing-game\\src\\store\\actions\\game.ts":"6","C:\\www\\personal\\fishing-game\\src\\utils\\position.ts":"7","C:\\www\\personal\\fishing-game\\src\\store\\actions\\position.ts":"8","C:\\www\\personal\\fishing-game\\src\\store\\selectors\\game.ts":"9","C:\\www\\personal\\fishing-game\\src\\store\\reducers\\index.ts":"10","C:\\www\\personal\\fishing-game\\src\\utils\\math.ts":"11","C:\\www\\personal\\fishing-game\\src\\store\\actions\\types.ts":"12","C:\\www\\personal\\fishing-game\\src\\components\\Game\\Barometer\\index.tsx":"13","C:\\www\\personal\\fishing-game\\src\\components\\Game\\MainMenu\\index.tsx":"14","C:\\www\\personal\\fishing-game\\src\\components\\Game\\processes\\Initial\\index.tsx":"15","C:\\www\\personal\\fishing-game\\src\\components\\Game\\processes\\ThrowLine\\index.tsx":"16","C:\\www\\personal\\fishing-game\\src\\components\\Game\\processes\\WaitFish\\index.tsx":"17","C:\\www\\personal\\fishing-game\\src\\components\\Game\\areas\\Beginner\\index.tsx":"18","C:\\www\\personal\\fishing-game\\src\\store\\reducers\\game.ts":"19","C:\\www\\personal\\fishing-game\\src\\store\\reducers\\inventory.ts":"20","C:\\www\\personal\\fishing-game\\src\\store\\reducers\\position.ts":"21","C:\\www\\personal\\fishing-game\\src\\store\\reducers\\fishing.ts":"22","C:\\www\\personal\\fishing-game\\src\\utils\\throttle.ts":"23","C:\\www\\personal\\fishing-game\\src\\store\\actions\\fishing.ts":"24","C:\\www\\personal\\fishing-game\\src\\components\\Game\\animations\\index.ts":"25","C:\\www\\personal\\fishing-game\\src\\components\\Game\\MainMenu\\Inventory\\index.tsx":"26","C:\\www\\personal\\fishing-game\\src\\components\\Game\\areas\\FishArea\\index.tsx":"27","C:\\www\\personal\\fishing-game\\src\\components\\Game\\MainMenu\\Shop\\index.tsx":"28","C:\\www\\personal\\fishing-game\\src\\components\\ProgressCircle\\index.tsx":"29","C:\\www\\personal\\fishing-game\\src\\components\\fishes\\Default\\index.tsx":"30","C:\\www\\personal\\fishing-game\\src\\components\\Game\\evolution\\index.ts":"31","C:\\www\\personal\\fishing-game\\src\\store\\actions\\inventory.ts":"32","C:\\www\\personal\\fishing-game\\src\\store\\selectors\\inventory.ts":"33","C:\\www\\personal\\fishing-game\\src\\store\\selectors\\position.ts":"34","C:\\www\\personal\\fishing-game\\src\\store\\selectors\\fishing.ts":"35","C:\\www\\personal\\fishing-game\\src\\components\\Game\\areas\\FishGroup\\index.tsx":"36","C:\\www\\personal\\fishing-game\\src\\components\\Game\\MainMenu\\Shop\\Sell\\index.tsx":"37","C:\\www\\personal\\fishing-game\\src\\components\\misc\\Modal\\index.tsx":"38","C:\\www\\personal\\fishing-game\\src\\components\\Game\\MainMenu\\Shop\\Buy\\index.tsx":"39","C:\\www\\personal\\fishing-game\\src\\interfaces\\position.ts":"40","C:\\www\\personal\\fishing-game\\src\\components\\Game\\MainMenu\\Credits\\index.tsx":"41","C:\\www\\personal\\fishing-game\\src\\components\\Game\\MainMenu\\Status\\index.tsx":"42","C:\\www\\personal\\fishing-game\\src\\components\\Game\\AudioPlayer\\index.tsx":"43","C:\\www\\personal\\fishing-game\\src\\utils\\time.ts":"44","C:\\www\\personal\\fishing-game\\src\\components\\Game\\Barometer\\ResistanceGauge\\index.tsx":"45","C:\\www\\personal\\fishing-game\\src\\components\\Game\\processes\\Battle\\index.tsx":"46"},{"size":500,"mtime":1608227343144,"results":"47","hashOfConfig":"48"},{"size":425,"mtime":1608227343144,"results":"49","hashOfConfig":"48"},{"size":287,"mtime":1609093450458,"results":"50","hashOfConfig":"48"},{"size":402,"mtime":1609447471652,"results":"51","hashOfConfig":"48"},{"size":20359,"mtime":1611435804858,"results":"52","hashOfConfig":"48"},{"size":885,"mtime":1610071894550,"results":"53","hashOfConfig":"48"},{"size":1506,"mtime":1609181776824,"results":"54","hashOfConfig":"48"},{"size":145,"mtime":1611428205464,"results":"55","hashOfConfig":"48"},{"size":1363,"mtime":1611413709841,"results":"56","hashOfConfig":"48"},{"size":350,"mtime":1609278467473,"results":"57","hashOfConfig":"48"},{"size":375,"mtime":1609159543027,"results":"58","hashOfConfig":"48"},{"size":944,"mtime":1611435425293,"results":"59","hashOfConfig":"48"},{"size":4051,"mtime":1611426043282,"results":"60","hashOfConfig":"48"},{"size":4342,"mtime":1610120918345,"results":"61","hashOfConfig":"48"},{"size":8307,"mtime":1611434872013,"results":"62","hashOfConfig":"48"},{"size":19532,"mtime":1609302888321,"results":"63","hashOfConfig":"48"},{"size":8159,"mtime":1609188871073,"results":"64","hashOfConfig":"48"},{"size":974,"mtime":1611352534820,"results":"65","hashOfConfig":"48"},{"size":3873,"mtime":1610101733206,"results":"66","hashOfConfig":"48"},{"size":4422,"mtime":1611419570665,"results":"67","hashOfConfig":"48"},{"size":813,"mtime":1611428450962,"results":"68","hashOfConfig":"48"},{"size":1364,"mtime":1611435393830,"results":"69","hashOfConfig":"48"},{"size":275,"mtime":1609123618760,"results":"70","hashOfConfig":"48"},{"size":2045,"mtime":1611435782459,"results":"71","hashOfConfig":"48"},{"size":1914,"mtime":1609212803604,"results":"72","hashOfConfig":"48"},{"size":13284,"mtime":1611425044266,"results":"73","hashOfConfig":"48"},{"size":1378,"mtime":1611450104708,"results":"74","hashOfConfig":"48"},{"size":5055,"mtime":1609787430917,"results":"75","hashOfConfig":"48"},{"size":1497,"mtime":1608823676820,"results":"76","hashOfConfig":"48"},{"size":16613,"mtime":1611438604282,"results":"77","hashOfConfig":"48"},{"size":1528,"mtime":1611422599926,"results":"78","hashOfConfig":"48"},{"size":1551,"mtime":1611415381809,"results":"79","hashOfConfig":"48"},{"size":785,"mtime":1609785853172,"results":"80","hashOfConfig":"48"},{"size":236,"mtime":1609106235663,"results":"81","hashOfConfig":"48"},{"size":722,"mtime":1611435668742,"results":"82","hashOfConfig":"48"},{"size":2159,"mtime":1611448115875,"results":"83","hashOfConfig":"48"},{"size":10939,"mtime":1609780251191,"results":"84","hashOfConfig":"48"},{"size":1653,"mtime":1609474919965,"results":"85","hashOfConfig":"48"},{"size":11496,"mtime":1609725628759,"results":"86","hashOfConfig":"48"},{"size":395,"mtime":1608539951678,"results":"87","hashOfConfig":"48"},{"size":2098,"mtime":1611233193855,"results":"88","hashOfConfig":"48"},{"size":6000,"mtime":1611249059501,"results":"89","hashOfConfig":"48"},{"size":2935,"mtime":1611150773413,"results":"90","hashOfConfig":"48"},{"size":236,"mtime":1609794867884,"results":"91","hashOfConfig":"48"},{"size":358,"mtime":1611411834229,"results":"92","hashOfConfig":"48"},{"size":176,"mtime":1611429267903,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"w9s9g4",{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"96"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"96"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"96"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"96"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"96"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"96"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"96"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"177","usedDeprecatedRules":"96"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"96"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":2,"source":"183","usedDeprecatedRules":"96"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"96"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"96"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"C:\\www\\personal\\fishing-game\\src\\index.tsx",[],["200","201"],"C:\\www\\personal\\fishing-game\\src\\reportWebVitals.ts",[],"C:\\www\\personal\\fishing-game\\src\\App.tsx",[],"C:\\www\\personal\\fishing-game\\src\\store\\index.js",[],["202","203"],"C:\\www\\personal\\fishing-game\\src\\components\\Game\\index.tsx",["204","205","206","207","208","209","210","211","212","213","214","215","216","217","218"],"C:\\www\\personal\\fishing-game\\src\\store\\actions\\game.ts",[],"C:\\www\\personal\\fishing-game\\src\\utils\\position.ts",[],"C:\\www\\personal\\fishing-game\\src\\store\\actions\\position.ts",[],"C:\\www\\personal\\fishing-game\\src\\store\\selectors\\game.ts",[],"C:\\www\\personal\\fishing-game\\src\\store\\reducers\\index.ts",[],"C:\\www\\personal\\fishing-game\\src\\utils\\math.ts",[],"C:\\www\\personal\\fishing-game\\src\\store\\actions\\types.ts",[],"C:\\www\\personal\\fishing-game\\src\\components\\Game\\Barometer\\index.tsx",["219"],"import React, { useMemo } from 'react'\r\nimport ResistanceGauge from './ResistanceGauge'\r\nimport { pxToM } from '../../../utils/position'\r\nimport { FishRodLevel } from '../../../interfaces/evolution'\r\nimport gameProcesses from '../processes/index.json'\r\nimport styles from './index.module.sass'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport { processSelector } from '../../../store/selectors/game'\r\n\r\ninterface Props {\r\n    rodLevel: FishRodLevel,\r\n    baitDistance: number,\r\n    // Redux\r\n    gameProcess?: string\r\n}\r\n\r\ninterface StepMatch {\r\n    steps: number[],\r\n    subSteps: number[]\r\n}\r\n\r\nexport const Barometer: React.FC<Props> = ({\r\n    rodLevel,\r\n    baitDistance,\r\n    // Redux\r\n    gameProcess\r\n}) => {\r\n    const maxLength = useMemo((): number => pxToM(rodLevel.maxLength), [rodLevel])\r\n    const lineStepLength = useMemo((): number => 10, [])\r\n    const lineSteps = useMemo((): number => Math.ceil(maxLength/lineStepLength), [maxLength, lineStepLength])\r\n    const lineStepMatches = useMemo((): StepMatch => {\r\n        let matches = { steps: [], subSteps: [] }\r\n        for(let i = 0; i < (lineSteps+1)*2 - 1; i++) {\r\n            if (i%2 === 0) {\r\n                matches.steps.push(i*lineStepLength/2)\r\n            } else {\r\n                matches.subSteps.push(i*lineStepLength/2)\r\n            }\r\n        }\r\n        return matches\r\n    }, [lineSteps, lineStepLength])\r\n    const nextStep = useMemo((): number => {\r\n        return lineSteps*lineStepLength\r\n    }, [lineSteps, lineStepLength])\r\n    const lineStepsJSX = useMemo(() => {\r\n        let JSX = []\r\n        // How much times step length in maxLength\r\n        for (let i = 0; i <= nextStep; i++) {\r\n            const isReached = baitDistance >= i ? styles.reached : ''\r\n            if (lineStepMatches.steps.includes(i)) {\r\n                // Step\r\n                JSX.push(<div key={i} className={`${styles.step} ${isReached} ${i === 0 ? styles.origin : ''}`}>\r\n                    <span><strong>{i}</strong></span>\r\n                </div>)\r\n            } else if (lineStepMatches.subSteps.includes(i)) {\r\n                // Substep\r\n                JSX.push(<div key={i} className={`${styles.subStep} ${isReached}`}></div>)\r\n            } else continue\r\n        }\r\n        return JSX\r\n    }, [lineSteps, lineStepLength, baitDistance])\r\n    const linePercentage = useMemo((): number => baitDistance/maxLength*100, [baitDistance, maxLength])\r\n\r\n    return <div className={`${styles.barometer} ${rodLevel.className}`}>\r\n        <nav>\r\n            <div className={styles.handle}></div>\r\n            <div className={styles.tip}>\r\n                <div className={styles.lineLengthScale}>\r\n                    <div\r\n                        className={styles.lengthLimit}\r\n                        style={{ width: `${maxLength/nextStep*100}%` }}\r\n                    >\r\n                        <meter\r\n                            className={styles.lineLength}\r\n                            min={0}\r\n                            max={maxLength}\r\n                            value={baitDistance}\r\n                            high={maxLength*3/4}\r\n                            low={maxLength/4}\r\n                            optimum={maxLength}\r\n                        >\r\n                        </meter>\r\n                        <label style={{ width: `${linePercentage}%` }}>\r\n                            <span className={styles.tooltip}>\r\n                                <span><strong>{baitDistance}</strong>m</span>\r\n                            </span>\r\n                        </label>\r\n                    </div>\r\n                    {lineStepsJSX}\r\n                </div>\r\n                {gameProcess === gameProcesses.BATTLE && (\r\n                    // Resistance gauge\r\n                    <ResistanceGauge />\r\n                )}\r\n            </div>\r\n        </nav>\r\n    </div>\r\n}\r\n\r\n// Redux connection\r\nconst mapStateToProps = state => ({\r\n    gameProcess: processSelector(state)\r\n})\r\nexport default connect(\r\n    mapStateToProps,\r\n    dispatch => ({})\r\n)(Barometer)","C:\\www\\personal\\fishing-game\\src\\components\\Game\\MainMenu\\index.tsx",["220","221","222"],"import React, { useEffect, useState, useMemo } from 'react'\r\nimport Inventory from './Inventory'\r\nimport Status from './Status'\r\nimport Shop from './Shop'\r\nimport Credits from './Credits'\r\nimport styles from './index.module.sass'\r\nimport { CgInbox, BiStats, AiTwotoneShop, FaHandsHelping } from 'react-icons/all'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport { closeMainMenuAction } from '../../../store/actions/game'\r\nimport { isMainMenuClosingSelector } from '../../../store/selectors/game'\r\n\r\ninterface Props {\r\n    closeMenu?: () => void,\r\n    isMenuClosing?: boolean\r\n}\r\n\r\nexport enum SectionID {\r\n    INVENTORY = 'INVENTORY',\r\n    STATS = 'STATS',\r\n    SHOPPING = 'SHOPPING',\r\n    CREDITS = 'CREDITS'\r\n}\r\n\r\nexport const MainMenu: React.FC<Props> = ({ closeMenu, isMenuClosing }) => {\r\n    const [currentSection, setCurrentSection] = useState<SectionID>(SectionID.INVENTORY)\r\n\r\n    // Keyboard events\r\n    useEffect(() => {\r\n        function handleKeyPress(e: KeyboardEvent): void {\r\n            switch(e.keyCode) {\r\n                case 8: // Backspace\r\n                case 46: // Delete\r\n                    closeMenu()\r\n                    break\r\n            }\r\n        }\r\n\r\n        document.addEventListener('keypress', handleKeyPress, false)\r\n        return () => document.removeEventListener('keypress', handleKeyPress, false)\r\n    }, [])\r\n\r\n    const currentSectionJSX = useMemo(() => {\r\n        switch(currentSection) {\r\n            case SectionID.INVENTORY:\r\n                return <Inventory setCurrentSection={setCurrentSection} />\r\n                break\r\n            case SectionID.STATS:\r\n                return <Status setCurrentSection={setCurrentSection} />\r\n                break\r\n            case SectionID.CREDITS:\r\n                return <Credits />\r\n            default: return <Shop />\r\n        }\r\n    }, [currentSection])\r\n\r\n    return (\r\n        <div\r\n            className={`${styles.mainMenu} ${isMenuClosing ? styles.closing : ''}`}\r\n            onClick={closeMenu}\r\n        >\r\n            <main className={styles.menuContent} onClick={e => e.stopPropagation()}>\r\n                {currentSectionJSX}\r\n            </main>\r\n            <nav className={styles.menuNavigation}>\r\n                <ul>\r\n                    <li\r\n                        title=\"Inventory\"\r\n                        onClick={e => {e.stopPropagation(); setCurrentSection(SectionID.INVENTORY)}}\r\n                        className={`${currentSection === SectionID.INVENTORY ? styles.active : ''} ${styles.inventory}`}\r\n                    >\r\n                        <span className={styles.infoFacultative}>Inventory </span><CgInbox />\r\n                    </li>\r\n                    <li\r\n                        title=\"Status\"\r\n                        onClick={e => {e.stopPropagation(); setCurrentSection(SectionID.STATS)}}\r\n                        className={`${currentSection === SectionID.STATS ? styles.active : ''} ${styles.stats}`}\r\n                    >\r\n                        <span className={styles.infoFacultative}>Status </span><BiStats />\r\n                    </li>\r\n                    <li\r\n                        title=\"Shopping\"\r\n                        onClick={e => {e.stopPropagation(); setCurrentSection(SectionID.SHOPPING)}}\r\n                        className={`${currentSection === SectionID.SHOPPING ? styles.active : ''} ${styles.shopping}`}\r\n                    >\r\n                        <span className={styles.infoFacultative}>Shopping </span><AiTwotoneShop />\r\n                    </li>\r\n                    <li\r\n                        title=\"Credits\"\r\n                        onClick={e => {e.stopPropagation(); setCurrentSection(SectionID.CREDITS)}}\r\n                        className={`${currentSection === SectionID.CREDITS ? styles.active : ''} ${styles.credits}`}\r\n                    >\r\n                        <span className={styles.infoFacultative}>Credits </span><FaHandsHelping />\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\n// Connect to Redux\r\nconst mapStateToProps = state => ({\r\n    isMenuClosing: isMainMenuClosingSelector(state)\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n    closeMenu: () => dispatch(closeMainMenuAction())\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(MainMenu)","C:\\www\\personal\\fishing-game\\src\\components\\Game\\processes\\Initial\\index.tsx",["223","224","225","226","227","228","229","230"],"C:\\www\\personal\\fishing-game\\src\\components\\Game\\processes\\ThrowLine\\index.tsx",["231","232","233","234","235","236","237","238","239","240"],"import React, { Dispatch, SetStateAction, ReactNode, useCallback, useRef, useEffect, useState, useMemo } from 'react'\r\nimport gameProcesses from '../index.json'\r\nimport ProgressCircle from '../../../ProgressCircle'\r\nimport { Coordinates, Path } from '../../../../interfaces/position'\r\nimport { FishRodLevel } from '../../../../interfaces/evolution'\r\nimport { getVectorLength, getNextCoordinatesOfPath } from '../../../../utils/position'\r\nimport throttle from '../../../../utils/throttle'\r\nimport { splashAnim } from '../../animations'\r\nimport styles from './index.module.sass'\r\n\r\ninterface Props {\r\n    setProcess: Dispatch<SetStateAction<string>>,\r\n    scrollToBait: (behavior?: 'smooth' | 'auto' | undefined) => void,\r\n    scrollToPlayer: (behavior?: 'smooth' | 'auto' | undefined) => void,\r\n    rodAngle: number,\r\n    setRodAngle: Dispatch<SetStateAction<number>>,\r\n    rodOffset: Coordinates,\r\n    setRodOffset: Dispatch<SetStateAction<Coordinates>>,\r\n    baitOffset: Coordinates,\r\n    setBaitOffset: Dispatch<SetStateAction<Coordinates>>,\r\n    baitDistance: number,\r\n    baitOffsetLimit: Path,\r\n    baitLakeCoords: Coordinates,\r\n    lakeRef: any,\r\n    baitRef: any,\r\n    setBaitType: Dispatch<SetStateAction<string>>,\r\n    playerCoordinates: Coordinates,\r\n    rodLevel: FishRodLevel,\r\n    setIsBarometerVisible: Dispatch<SetStateAction<boolean>>,\r\n    isBarometerVisible: boolean\r\n}\r\n\r\nconst maxAngle: number = 70\r\nconst minAngle: number = -70\r\n\r\nexport default (({\r\n    setProcess,\r\n    scrollToBait,\r\n    scrollToPlayer,\r\n    rodAngle,\r\n    setRodAngle,\r\n    rodOffset,\r\n    setRodOffset,\r\n    baitOffset,\r\n    setBaitOffset,\r\n    baitDistance,\r\n    baitOffsetLimit,\r\n    baitRef,\r\n    baitLakeCoords,\r\n    lakeRef,\r\n    setBaitType,\r\n    playerCoordinates,\r\n    rodLevel,\r\n    isBarometerVisible,\r\n    setIsBarometerVisible\r\n }) => {\r\n     // Audio\r\n    const baitDropSE = useMemo(() => require('../../../../assets/audio/se/bait-drop.mp3').default, [])\r\n    const badassSE = useMemo(() => require('../../../../assets/audio/se/badass.mp3').default, [])\r\n\r\n    // State\r\n    const [gaugeValue, setGaugeValue] = useState<number>(0)\r\n    const [spaceFired, setSpaceFired] = useState<boolean>(false)\r\n    const [isPushing, setIsPushing] = useState<boolean>(false)\r\n    const [isPreparingThrow, setIsPreparingThrow] = useState<boolean>(false)\r\n    const [isThrowing, setIsThrowing] = useState<boolean>(false)\r\n    const [hasThrown, setHasThrown] = useState<boolean>(false)\r\n\r\n    // Refs\r\n    const lastTouchX = useRef<number>(null)\r\n    const gaugeRef = useRef<any>(null)\r\n    const gaugeValueRef = useRef<number>(0)\r\n    const requestRef = useRef<any>(null)\r\n    const directionRef = useRef<number>(rodAngle)\r\n    const stepRef = useRef<number>(0)\r\n    const remainingDistanceRef = useRef<number>(0)\r\n    const baitDropSERef = useRef<HTMLAudioElement>(new Audio())\r\n    baitDropSERef.current.src = baitDropSE\r\n    const badassSERef = useRef<HTMLAudioElement>(new Audio())\r\n    badassSERef.current.src = badassSE\r\n\r\n    // Go back to initial process\r\n    const goBack = useCallback(\r\n        (): void => {\r\n            // Set fishing rod to initial position before\r\n            setRodAngle(0)\r\n            setRodOffset({ x: 0, y: -20 })\r\n            setBaitOffset({ x: 0, y: -20, transition: '.2s ease all' })\r\n            setBaitType('default')\r\n            setProcess(gameProcesses.INITIAL)\r\n        }, []\r\n    )\r\n\r\n    // Move fishing rod forward on process start\r\n    useEffect(() => {\r\n        setRodOffset({ x: 0, y: 0 })\r\n        setBaitOffset({ x: 0, y: 0 })\r\n        scrollToPlayer()\r\n    }, [])\r\n\r\n    // Hide barometer\r\n    useEffect(() => isBarometerVisible && setIsBarometerVisible(false), [])\r\n\r\n    // Move fishing rod direction\r\n    const changeRodDirection = useCallback(\r\n        (angle: number) => {\r\n            if (!isThrowing) {\r\n                setRodAngle(angle)\r\n                setRodOffset({ x: -angle/4, y: -Math.abs(angle)/2 })\r\n                setBaitOffset({x: -angle, y: -Math.abs(angle)/2 })\r\n            }\r\n        }, [isThrowing]\r\n    )\r\n\r\n    // Throw bait at the right distance and direction\r\n    useEffect(() => {\r\n        if (isThrowing) {\r\n            // Display barometer\r\n            setIsBarometerVisible(true)\r\n            // Initial throw speed\r\n            stepRef.current = remainingDistanceRef.current / 15 // stepRef.current is the distance travelled in px / frame\r\n\r\n            const move = (): void => {\r\n                if (remainingDistanceRef.current > 0) {\r\n                    // Bait is still moving\r\n                    // Get next coordinates\r\n                    let nextCoords: Coordinates = getNextCoordinatesOfPath(directionRef.current, stepRef.current)\r\n                    let nextOffset: Coordinates = { x: baitOffset.x - nextCoords.x, y: baitOffset.y + nextCoords.y }\r\n                    remainingDistanceRef.current = Math.floor(remainingDistanceRef.current - stepRef.current)\r\n                    /*\r\n                        Detect collision against lake borders before it happens\r\n                        and change direction in that case\r\n                    */\r\n                    if (nextOffset.x > baitOffsetLimit.to.x) {\r\n                        // Handle right limit collision\r\n                        // Deviate\r\n                        directionRef.current *= -1\r\n                        // Kinetic energy loss\r\n                        remainingDistanceRef.current = remainingDistanceRef.current - stepRef.current\r\n                    } else if (nextOffset.y > baitOffsetLimit.to.y) {\r\n                        // Handle bottom limit collision\r\n                        directionRef.current = directionRef.current - 270\r\n                        remainingDistanceRef.current = remainingDistanceRef.current - stepRef.current\r\n                    } else if (nextOffset.x < baitOffsetLimit.from.x) {\r\n                        // Handle left limit collision\r\n                        directionRef.current *= -1\r\n                        remainingDistanceRef.current = remainingDistanceRef.current - stepRef.current\r\n                    /*} else if (nextOffset.y < baitOffsetLimit.from.y) {\r\n                        // Handle top limit collision\r\n                        directionRef.current = directionRef.current - 270\r\n                        remainingDistanceRef.current = remainingDistanceRef.current - stepRef.current\r\n                    */\r\n                    }\r\n\r\n                    // Apply translation and scroll\r\n                    setBaitOffset(nextOffset)\r\n                    scrollToBait()\r\n\r\n                    // Ease-out\r\n                    stepRef.current *= .999 // Deceleration coeff\r\n                    throttle(move, 100)\r\n                } else {\r\n                    // Bait has reached the correct distance\r\n                    setIsThrowing(false)\r\n                    setBaitType('immersed')\r\n                    // Play bait drop sound effect\r\n                    const baitDropSEPromise = baitDropSERef.current.play()\r\n                    if (typeof baitDropSEPromise !== 'undefined') {\r\n                        baitDropSEPromise\r\n                        .then(() => null)\r\n                        .catch(err => console.log(err))\r\n                    }\r\n                    // Play \"badass\"\" sound effect if throw was particularly high\r\n                    if (gaugeValueRef.current >= 90) {\r\n                        window.setTimeout(() => {\r\n                            const badassSEPromise = badassSERef.current.play()\r\n                            if (typeof badassSEPromise !== 'undefined') {\r\n                                badassSEPromise\r\n                                .then(() => null)\r\n                                .catch(() => console.log('Failed to play \"badass\" sound effect'))\r\n                            }\r\n                        }, 1000)\r\n                    }\r\n                    // Play splash animation on bait\r\n                    baitRef.current && splashAnim(baitLakeCoords, lakeRef.current)\r\n                    // Wait for fish\r\n                    gaugeValueRef.current = 0\r\n                    setProcess(gameProcesses.WAIT_FISH)\r\n                    return\r\n                }\r\n            }\r\n            throttle(move, 100)()\r\n        }\r\n    }, [isThrowing, hasThrown, rodLevel, baitOffset, baitOffsetLimit, baitLakeCoords])\r\n\r\n    const confirmThrow = useCallback(\r\n        (): void => {\r\n            if (gaugeValueRef.current >= 5) {\r\n                const reach = Math.round(gaugeValueRef.current)/100 * rodLevel.maxLength\r\n                remainingDistanceRef.current = reach\r\n                setIsThrowing(true)\r\n                setBaitOffset({ x: 0, y: 0 })\r\n                // Initial direction\r\n                directionRef.current = rodAngle\r\n            }\r\n            setIsPreparingThrow(false)\r\n            setGaugeValue(0)\r\n        }, [rodLevel, rodAngle]\r\n    )\r\n\r\n    // Attach event listeners\r\n    useEffect(() => {\r\n        function handleKeyDown (e: KeyboardEvent): void {\r\n            const { keyCode } = e\r\n            switch (keyCode) {\r\n                case 8: // Backspace\r\n                case 46: // Delete\r\n                case 48: // 0\r\n                    e.preventDefault()\r\n                    if (!isThrowing) {\r\n                        goBack()\r\n                    }\r\n                    break\r\n                case 37: // Left\r\n                    e.preventDefault()\r\n                    if (!isThrowing) {\r\n                        // Increase fishrod angle\r\n                        const addOffset = 4\r\n                        if (rodAngle < maxAngle) {\r\n                            let newAngle = 0\r\n                            if (rodAngle + addOffset >= maxAngle) newAngle = maxAngle\r\n                            else newAngle = rodAngle + addOffset\r\n                            changeRodDirection(newAngle)\r\n                        }\r\n                    }\r\n                    break\r\n                case 38: // Top\r\n                    e.preventDefault()\r\n                    break\r\n                case 39: // Right\r\n                    e.preventDefault()\r\n                    if (!isThrowing) {\r\n                        // Decrease fishrod angle\r\n                        const subOffset = 4\r\n                        if (rodAngle > minAngle) {\r\n                            let newAngle = 0\r\n                            if (rodAngle - subOffset <= minAngle) newAngle = minAngle\r\n                            else newAngle = rodAngle - subOffset\r\n                            changeRodDirection(newAngle)\r\n                        }\r\n                    }\r\n                    break\r\n                case 40: // Bottom\r\n                    e.preventDefault()\r\n                    break\r\n                case 32: // Space\r\n                case 13: // Enter\r\n                    e.preventDefault()\r\n                    if (!isThrowing) {\r\n                        if (!spaceFired) { // Prevent mousedown event from firing multiple times\r\n                            setSpaceFired(true)\r\n                            if(!isPreparingThrow) {\r\n                                setIsPreparingThrow(true)\r\n                            }\r\n                        }\r\n                    }\r\n                    break\r\n            }\r\n        }\r\n        function handleKeyUp (e: KeyboardEvent): void {\r\n            if (!isThrowing) {\r\n                const { keyCode } = e\r\n                switch (keyCode) {\r\n                    case 32:\r\n                        setSpaceFired(false)\r\n                        if (isPreparingThrow) {\r\n                            confirmThrow()\r\n                        }\r\n                        break\r\n                }\r\n            }\r\n        }\r\n        function handleMouseDown (e: Event): void {\r\n            if (!isThrowing) {\r\n                setSpaceFired(true)\r\n                if(!isPreparingThrow) {\r\n                    setIsPreparingThrow(true)\r\n\r\n                }\r\n            }\r\n        }\r\n        function handleMouseUp (e: Event): void {\r\n            setSpaceFired(false)\r\n            if (isPreparingThrow) {\r\n                confirmThrow()\r\n            }\r\n        }\r\n        function handleTouchMove (e: TouchEvent) {\r\n            const currentTouchX = e.touches[0].clientX\r\n            if (lastTouchX.current !== null && !isThrowing) {\r\n                e.stopPropagation()\r\n                if (currentTouchX > lastTouchX.current) {\r\n                    // Swap right\r\n                    // Decrease fishrod angle\r\n                    const subOffset: number = 8\r\n                    if (rodAngle > minAngle) {\r\n                        let newAngle: number = 0\r\n                        if (rodAngle - subOffset <= minAngle) newAngle = minAngle\r\n                        else newAngle = rodAngle - subOffset\r\n                        changeRodDirection(newAngle)\r\n                    }\r\n                } else if (currentTouchX < lastTouchX.current) {\r\n                    // Swap left\r\n                    // Increase fishrod angle\r\n                    const addOffset: number = 6\r\n                    if (rodAngle < maxAngle) {\r\n                        let newAngle: number = 0\r\n                        if (rodAngle + addOffset >= maxAngle) newAngle = maxAngle\r\n                        else newAngle = rodAngle + addOffset\r\n                        changeRodDirection(newAngle)\r\n                    }\r\n                }\r\n            }\r\n            lastTouchX.current = currentTouchX\r\n        }\r\n        const handleTouchMoveThrottle = throttle(handleTouchMove, 50)\r\n    \r\n        document.addEventListener('keydown', handleKeyDown, false)\r\n        document.addEventListener('keyup', handleKeyUp, false)\r\n        document.addEventListener('mousedown', handleMouseDown, false)\r\n        document.addEventListener('mouseup', handleMouseUp, false)\r\n        // Touch events\r\n        document.addEventListener('touchmove', handleTouchMoveThrottle, false)\r\n        if (gaugeRef.current) {\r\n            gaugeRef.current.addEventListener('touchstart', (e: TouchEvent) => {setIsPushing(true); handleMouseDown(e)}, false)\r\n            gaugeRef.current.addEventListener('touchmove', (e: TouchEvent) => {e.stopPropagation(); e.preventDefault()}, false)\r\n            gaugeRef.current.addEventListener('touchend', (e: TouchEvent) => {setIsPushing(false); handleMouseUp(e)}, false)\r\n        }\r\n\r\n        return (): void => {\r\n            document.removeEventListener('keydown', handleKeyDown, false)\r\n            document.removeEventListener('keyup', handleKeyUp, false)\r\n            document.removeEventListener('mousedown', handleMouseDown, false)\r\n            document.removeEventListener('mouseup', handleMouseUp, false)\r\n            document.removeEventListener('touchmove', handleTouchMoveThrottle, false)\r\n            if (gaugeRef.current) {\r\n                gaugeRef.current.removeEventListener('touchstart', (e: TouchEvent) => {setIsPushing(true); handleMouseDown(e)}, false)\r\n                gaugeRef.current.removeEventListener('touchmove', (e: TouchEvent) => {e.stopPropagation(); e.preventDefault()}, false)\r\n                gaugeRef.current.removeEventListener('touchend', (e: TouchEvent) => {setIsPushing(false); handleMouseUp(e)}, false)\r\n            }\r\n        }\r\n    }, [\r\n        isPreparingThrow,\r\n        spaceFired,\r\n        rodAngle,\r\n        rodOffset,\r\n        confirmThrow,\r\n        isThrowing\r\n    ])\r\n\r\n    // Add mousemove event\r\n    useEffect(() => {\r\n        function handleMouseMove (e: MouseEvent): void {\r\n            // Follow mouse\r\n            const { offsetX, pageY } = e\r\n            const centerX: number = playerCoordinates.x + playerCoordinates.width/2\r\n            const centerY: number = playerCoordinates.y * 3/2\r\n            const adjacent: number = getVectorLength({ from: { x: centerX, y: centerY }, to: { x: centerX, y: pageY } })\r\n            const opposite: number = offsetX - centerX\r\n            // tan(rodAngle) = opposite/adjacent\r\n            const angleRadians: number = Math.atan(opposite/adjacent)\r\n            const angleDegrees: number = angleRadians*180/Math.PI\r\n            if (!Number.isNaN(angleDegrees) && angleDegrees >= minAngle && angleDegrees <= maxAngle) {\r\n                // Move rod as angle changes\r\n                changeRodDirection(-angleDegrees)\r\n            }\r\n        }\r\n        const handleMouseMoveThrottle = throttle(handleMouseMove, 50)\r\n\r\n        // Disable mousemove event once bait has been thrown\r\n        if (isThrowing) {\r\n            window.removeEventListener('mousemove', handleMouseMoveThrottle, false)\r\n        } else {\r\n            window.addEventListener('mousemove', handleMouseMoveThrottle, false)\r\n        }\r\n        \r\n        return () => window.removeEventListener('mousemove', handleMouseMoveThrottle, false)\r\n    }, [playerCoordinates, changeRodDirection, isThrowing])\r\n\r\n    // Prepare throw\r\n    useEffect(() => {\r\n        function prepare (timestamp: number): void {\r\n            if (isPreparingThrow) {\r\n                if (gaugeValueRef.current < 100) {\r\n                    let nextValue = gaugeValueRef.current + gaugeValueRef.current/20 + .5\r\n                    if (nextValue > 100) nextValue = 100\r\n                    gaugeValueRef.current = nextValue //= Math.min(timestamp, gaugeValueRef.current + 1)\r\n                    setGaugeValue(gaugeValueRef.current)\r\n                    requestRef.current = requestAnimationFrame(prepare)\r\n                } else {\r\n                    // Value has reached max: set down to zero and cancel throw\r\n                    gaugeValueRef.current = 0\r\n                    setGaugeValue(0)  \r\n                    setIsPreparingThrow(false)\r\n                }\r\n            }\r\n        }\r\n        if (isPreparingThrow) {\r\n            // Prepare throw\r\n            requestRef.current = requestAnimationFrame(prepare)\r\n        } else {\r\n            if (requestRef.current) {\r\n                cancelAnimationFrame(requestRef.current)\r\n                requestRef.current = null\r\n            }\r\n        }\r\n\r\n        return () => cancelAnimationFrame(requestRef.current)\r\n    }, [isPreparingThrow, confirmThrow])\r\n\r\n    const gaugeMessage = useMemo((): ReactNode => {\r\n        if (!gaugeValueRef) return null\r\n        if (gaugeValueRef.current === null || gaugeValueRef.current < 5) return <span className={`${styles.gaugeMSG} ${styles.pushHere}`}>Push</span>\r\n        if (gaugeValueRef.current >= 5 && gaugeValueRef.current < 50) return <span className={styles.gaugeMSG}>Hold</span>\r\n        if (gaugeValueRef.current >= 50 && gaugeValueRef.current < 80) return <span className={`${styles.gaugeMSG} ${styles.high}`}>Release</span>\r\n        if (gaugeValueRef.current >= 80) return <span className={`${styles.gaugeMSG} ${styles.optimal}`}>Now</span>\r\n    }, [gaugeValueRef.current])\r\n\r\n    // Hide menu when player is throwing fishing line\r\n    if (isThrowing) return null\r\n\r\n    return <nav className={`${styles.navigation} menu`}>\r\n        <button\r\n            className={`btn btn-cancel ${styles.cancelBTN}`}\r\n            onClick={goBack}\r\n        >\r\n            Cancel\r\n        </button>\r\n        <div className={`${styles.gauge} ${isPushing && isPreparingThrow ? styles.userPush : ''}`} ref={gaugeRef}>\r\n            <ProgressCircle\r\n                value={gaugeValue}\r\n                trackClass={styles.track}\r\n                centerClass={styles.center}\r\n            >\r\n                {gaugeMessage}\r\n            </ProgressCircle>\r\n        </div>\r\n    </nav>\r\n}) as React.FC<Props>","C:\\www\\personal\\fishing-game\\src\\components\\Game\\processes\\WaitFish\\index.tsx",["241","242","243"],"import React, { FC, useState, useEffect, useMemo, useCallback, Dispatch, SetStateAction } from 'react'\r\nimport gameProcesses from '../index.json'\r\nimport { Coordinates } from '../../../../interfaces/position'\r\nimport throttle from '../../../../utils/throttle'\r\nimport { BsArrowRepeat } from 'react-icons/bs'\r\nimport styles from './index.module.sass'\r\n\r\nimport { useDispatch } from 'react-redux'\r\nimport { makeBaitAvailableAction } from '../../../../store/actions/fishing'\r\n\r\ninterface Props {\r\n    baitOffset: Coordinates,\r\n    setBaitOffset: Dispatch<SetStateAction<Coordinates>>,\r\n    baitDistance: number,\r\n    lineLength: number,\r\n    setBaitType: Dispatch<SetStateAction<string>>,\r\n    setProcess: Dispatch<SetStateAction<string>>,\r\n    setRodAngle: Dispatch<SetStateAction<number>>,\r\n    baitRef: any,\r\n    scrollToPlayer: (behavior?: 'smooth' | 'auto' | undefined) => void,\r\n    scrollToBait: (behavior?: 'smooth' | 'auto' | undefined) => void,\r\n    setIsBarometerVisible: Dispatch<SetStateAction<boolean>>,\r\n    isBarometerVisible: boolean\r\n}\r\n\r\nconst WaitFish: FC<Props> = ({\r\n    baitOffset,\r\n    setBaitOffset,\r\n    baitDistance,\r\n    lineLength,\r\n    setBaitType,\r\n    baitRef,\r\n    setProcess,\r\n    setRodAngle,\r\n    scrollToPlayer,\r\n    scrollToBait,\r\n    isBarometerVisible,\r\n    setIsBarometerVisible\r\n}) => {\r\n    // Audio\r\n    const reelingSE = useMemo((): HTMLAudioElement => {\r\n        const se = new Audio(require('../../../../assets/audio/se/reeling.mp3').default)\r\n        se.loop = true\r\n        return se\r\n    }, [])\r\n\r\n    // Redux\r\n    const dispatch = useDispatch()\r\n    const makeBaitAvailable = useCallback(\r\n        (bool: boolean) => dispatch(makeBaitAvailableAction(bool)), [dispatch]\r\n    )\r\n    // Fishes can only detect/interact with the bait during this process\r\n    useEffect(() => {\r\n        makeBaitAvailable(true)\r\n        return () => makeBaitAvailable(false)\r\n    })\r\n\r\n    // State\r\n    const [isReeling, setIsReeling] = useState<boolean>(false)\r\n    const [isMouseDown, setIsMouseDown] = useState<boolean | null>(null)\r\n\r\n    // Go back to previous process (retry throwing line)\r\n    const goBack = useCallback(\r\n        (): void => {\r\n            setBaitType('default')\r\n            scrollToPlayer('smooth')\r\n            setProcess(gameProcesses.THROW_LINE)\r\n        }, [scrollToPlayer, setProcess, setBaitType]\r\n    )\r\n\r\n    const reelIn = useCallback(\r\n        ():void => {\r\n            if (baitDistance > 0) {\r\n                // REEL IN\r\n                !isReeling && setIsReeling(true)\r\n                // Line length that we need to reel in during this execution\r\n                const step: number = 4\r\n                // Find out angle\r\n                const angleRadians: number = Math.atan(baitOffset.x/baitOffset.y)\r\n                const angleDegrees: number = angleRadians*180/Math.PI\r\n                // Find out next offset coords from angle and hypotenuse\r\n                const hypotenuse: number = lineLength - step\r\n                const opposite: number = Math.sin(angleRadians) * hypotenuse\r\n                const adjacent: number = Math.cos(angleRadians) * hypotenuse\r\n                // Apply translation and lean fishrod towards target\r\n                setBaitOffset({ x: opposite, y: adjacent })\r\n                setRodAngle(-angleDegrees)\r\n                // Scroll to new position\r\n                scrollToBait()\r\n            } else {\r\n                // PLAYER HAS REELED ALL THE LINE IN\r\n                setIsReeling(false)\r\n                goBack()\r\n            }\r\n        }, [lineLength, isReeling, baitDistance, goBack]\r\n    )\r\n\r\n    // Show barometer if it's not visible\r\n    useEffect(() => {\r\n        if (!isBarometerVisible) {\r\n            setIsBarometerVisible(true)\r\n        }\r\n    }, [])\r\n\r\n    // Reeling effects\r\n    useEffect(() => {\r\n        if (isReeling) {\r\n            // Play sound effect\r\n            const reelingSEPromise = reelingSE.play()\r\n            if (typeof reelingSEPromise !== 'undefined') {\r\n                reelingSEPromise\r\n                .then(() => null)\r\n                .catch(() => console.log('Failed to play reeling SE'))\r\n            }\r\n        } else {\r\n            // Stop sound effect if it's playing\r\n            if (!reelingSE.paused) {\r\n                reelingSE.pause()\r\n                reelingSE.currentTime = 0\r\n            }\r\n        }\r\n\r\n        return () => {\r\n            if (!reelingSE.paused) reelingSE.pause()\r\n        }\r\n    }, [isReeling])\r\n\r\n    // Attach event listeners\r\n    // Cancel event\r\n    useEffect(() => {\r\n        function handleBackSpace (e: KeyboardEvent): void {\r\n            switch(e.keyCode) {\r\n                case 8: // Backspace\r\n                case 46: // Delete\r\n                case 48: // 0\r\n                    e.preventDefault()\r\n                    goBack()\r\n                    break\r\n            }\r\n        }\r\n        document.addEventListener('keydown', handleBackSpace, true)\r\n        return () => document.removeEventListener('keydown', handleBackSpace, true)\r\n    }, [goBack])\r\n    // Space/Enter keys\r\n    useEffect(() => {\r\n        function handleSpace (e: KeyboardEvent): void {\r\n            switch(e.keyCode) {\r\n                case 32: // Space\r\n                case 13: // Enter\r\n                    e.preventDefault()\r\n                    reelIn()\r\n                    break\r\n            }\r\n        }\r\n        const handleSpaceThrottle = throttle(handleSpace, 1000)\r\n        function handleSpaceUp (e: KeyboardEvent): void {\r\n            switch (e.keyCode) {\r\n                case 32: // Space\r\n                case 13: // Enter\r\n                    // Stop reeling\r\n                    setIsReeling(false)\r\n                    break\r\n            }\r\n        } \r\n        \r\n        document.addEventListener('keydown', handleSpaceThrottle, true)\r\n        document.addEventListener('keyup', handleSpaceUp, false)\r\n        return () => {\r\n            document.removeEventListener('keydown', handleSpaceThrottle, true)\r\n            document.removeEventListener('keyup', handleSpaceUp, false)\r\n        }\r\n    }, [reelIn])\r\n    // Mousedown/up\r\n    useEffect(() => {\r\n        function handleMouseDown (e: MouseEvent): void {\r\n            setIsMouseDown(true)\r\n        }\r\n        function handleMouseUp (e: MouseEvent) : void {\r\n            setIsMouseDown(false)\r\n        }\r\n        document.body.addEventListener('mousedown', handleMouseDown, false)\r\n        document.body.addEventListener('mouseup', handleMouseUp, false)\r\n        document.body.addEventListener('touchstart', handleMouseDown, false)\r\n        document.body.addEventListener('touchend', handleMouseUp, false)\r\n\r\n        return () => {\r\n            document.body.removeEventListener('mousedown', handleMouseDown, false)\r\n            document.body.removeEventListener('mouseup', handleMouseUp, false)\r\n            document.body.removeEventListener('touchstart', handleMouseDown, false)\r\n            document.body.removeEventListener('touchend', handleMouseUp, false)\r\n        }\r\n    }, [])\r\n    useEffect(() => {\r\n        if (isMouseDown) {\r\n            // Mouse down\r\n            throttle(reelIn, 1000)()\r\n        } else if (isMouseDown === false) {\r\n            // Mouse up\r\n            setIsReeling(false)\r\n            // Reinitialize isMouseDown state\r\n            setIsMouseDown(null)\r\n        }\r\n    }, [isMouseDown, reelIn])\r\n\r\n    // Disable other keys\r\n    useEffect(() => {\r\n        function disableKeys (e: KeyboardEvent): void {\r\n            switch(e.keyCode) {\r\n                case 37: // Left\r\n                case 38: // Top\r\n                case 39: // Right\r\n                case 40: // Bottom\r\n                    e.preventDefault()\r\n                    break\r\n            }\r\n        }\r\n        document.addEventListener('keydown', disableKeys, false)\r\n        return () => document.removeEventListener('keydown', disableKeys, false)\r\n    }, [])\r\n\r\n    return <nav className={styles.navigation}>\r\n        <button\r\n            className={`btn btn-cancel ${styles.repeatBTN}`}\r\n            onClick={goBack}\r\n        >\r\n            <BsArrowRepeat />\r\n        </button>\r\n    </nav>\r\n}\r\n\r\nexport default WaitFish","C:\\www\\personal\\fishing-game\\src\\components\\Game\\areas\\Beginner\\index.tsx",[],"C:\\www\\personal\\fishing-game\\src\\store\\reducers\\game.ts",["244","245","246","247","248","249","250","251"],"import {\r\n    SET_GAME_PROCESS,\r\n    SPEND_ONE_MINUTE,\r\n    ENABLE_BGM,\r\n    OPEN_MAIN_MENU,\r\n    SET_IS_MAIN_MENU_CLOSING,\r\n    SET_FISHROD_LEVEL,\r\n    EARN_MONEY,\r\n    SPEND_MONEY\r\n} from '../actions/types'\r\nimport gameProcesses from '../../components/Game/processes/index.json'\r\nimport { GameStats } from '../../interfaces/evolution'\r\nimport { rodLevels } from '../../components/Game/evolution'\r\n\r\nexport interface State {\r\n    process: string,\r\n    isMainMenuOpen: boolean,\r\n    isMainMenuClosing: boolean,\r\n    isBGMEnabled: boolean,\r\n    gameStats: GameStats\r\n}\r\n\r\nconst initialGameStats: GameStats = {\r\n    gameTimeSpent: 0,\r\n    doubloons: 50,\r\n    fishrodLevel: rodLevels.find(lvl => lvl._id === 'Starter')\r\n}\r\n\r\nconst initialState: State = {\r\n    process: gameProcesses.INITIAL,\r\n    isMainMenuOpen: false,\r\n    isMainMenuClosing: false,\r\n    isBGMEnabled: typeof localStorage['bgm_enabled'] !== 'undefined' ? JSON.parse(localStorage['bgm_enabled']) : true,\r\n    gameStats: localStorage['gameStats'] ? JSON.parse(localStorage['gameStats']) : initialGameStats\r\n}\r\n\r\nexport default function (state: State = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_GAME_PROCESS:\r\n            return { ...state, process: action.payload }\r\n            break\r\n        case SPEND_ONE_MINUTE: {\r\n            const newTime = state.gameStats.gameTimeSpent + 1\r\n            const newStats = { ...state.gameStats, gameTimeSpent: newTime }\r\n            \r\n            localStorage['gameStats'] = JSON.stringify(newStats)\r\n            return { ...state, gameStats: newStats }\r\n            break\r\n        } case OPEN_MAIN_MENU:\r\n            return { ...state, isMainMenuOpen: action.payload }\r\n            break\r\n        case SET_IS_MAIN_MENU_CLOSING:\r\n            return { ...state, isMainMenuClosing: action.payload }\r\n            break\r\n        case SET_FISHROD_LEVEL: {\r\n            const newGameStats = {\r\n                ...state.gameStats,\r\n                fishrodLevel: rodLevels.find(lvl => lvl._id === action.payload)\r\n            }\r\n            localStorage['gameStats'] = JSON.stringify(newGameStats)\r\n            return {\r\n                ...state,\r\n                gameStats: newGameStats\r\n            }\r\n        }\r\n        case EARN_MONEY: {\r\n            const maxDoubloons = 999999\r\n            const myDoubloons = state.gameStats.doubloons\r\n            const canEarnMore = myDoubloons + action.payload < maxDoubloons\r\n            let nextDoubloons = myDoubloons\r\n            if (!canEarnMore) nextDoubloons = maxDoubloons\r\n            else nextDoubloons = myDoubloons + action.payload\r\n\r\n            // Save game stats\r\n            const newStats = {\r\n                ...state.gameStats,\r\n                doubloons: nextDoubloons\r\n            }\r\n            localStorage['gameStats'] = JSON.stringify(newStats)\r\n\r\n            return { ...state, gameStats: newStats }\r\n            break\r\n        }\r\n        case SPEND_MONEY: {\r\n            const minDoubloons = 0\r\n            const myDoubloons = state.gameStats.doubloons\r\n            const canSpendMore = myDoubloons - action.payload > minDoubloons\r\n            let nextDoubloons = myDoubloons\r\n            if (!canSpendMore) nextDoubloons = minDoubloons\r\n            else nextDoubloons = myDoubloons - action.payload\r\n\r\n            // Save game stats\r\n            const newStats = {\r\n                ...state.gameStats,\r\n                doubloons: nextDoubloons\r\n            }\r\n            localStorage['gameStats'] = JSON.stringify(newStats)\r\n\r\n            return { ...state, gameStats: newStats }\r\n            break\r\n        }\r\n        case ENABLE_BGM:\r\n            localStorage['bgm_enabled'] = JSON.stringify(action.payload)\r\n            return {\r\n                ...state,\r\n                isBGMEnabled: action.payload\r\n            }\r\n            break\r\n        default: return state\r\n    }\r\n}","C:\\www\\personal\\fishing-game\\src\\store\\reducers\\inventory.ts",["252","253","254","255","256"],"C:\\www\\personal\\fishing-game\\src\\store\\reducers\\position.ts",["257","258"],"C:\\www\\personal\\fishing-game\\src\\store\\reducers\\fishing.ts",["259","260","261","262","263"],"C:\\www\\personal\\fishing-game\\src\\utils\\throttle.ts",[],"C:\\www\\personal\\fishing-game\\src\\store\\actions\\fishing.ts",[],"C:\\www\\personal\\fishing-game\\src\\components\\Game\\animations\\index.ts",[],"C:\\www\\personal\\fishing-game\\src\\components\\Game\\MainMenu\\Inventory\\index.tsx",["264","265","266","267","268","269","270","271","272","273","274","275","276"],"C:\\www\\personal\\fishing-game\\src\\components\\Game\\areas\\FishArea\\index.tsx",[],"C:\\www\\personal\\fishing-game\\src\\components\\Game\\MainMenu\\Shop\\index.tsx",["277","278","279","280","281"],"import React, { ReactNode, useState, useMemo, useEffect, useRef } from 'react'\r\nimport Buy from './Buy'\r\nimport Sell from './Sell'\r\nimport { randomIntFromInterval } from '../../../../utils/math'\r\nimport { GiPirateCaptain } from 'react-icons/all'\r\nimport styles from './index.module.sass'\r\n\r\n// Redux\r\nimport { useSelector } from 'react-redux'\r\nimport { inventoryLengthSelector } from '../../../../store/selectors/inventory'\r\n\r\nexport enum ContentID {\r\n    ROOT = 'ROOT',\r\n    BUY = 'BUY',\r\n    SELL = 'SELL'\r\n}\r\n\r\n// Seller comments\r\nexport const greetings: string[] = [\r\n    'Ahoy, Matey ! What brings you here ?',\r\n    'The better your fish rod, the bigger fishes you\\'ll catch ! How convenient that I\\'m selling some',\r\n    'Do you have some fish for me ?'\r\n]\r\nexport const thanks: string[] = [\r\n    'Thank ya !',\r\n    'It\\'s a pleasure doing business with ye',\r\n    'Don\\'t ya lose it, mate !'\r\n]\r\nexport const randomGreeting = (): string => greetings[randomIntFromInterval(0, greetings.length - 1)]\r\nexport const randomThanks = (): string => thanks[randomIntFromInterval(0, thanks.length - 1)]\r\n\r\n\r\nconst Shop: React.FC = () => {\r\n    // REDUX\r\n    const inventoryLength = useSelector(inventoryLengthSelector)\r\n\r\n    // STATE\r\n    const [currentContentID, setCurrentContentID] = useState<ContentID>(ContentID.ROOT)\r\n\r\n    // Seller comments\r\n    const [sellerPhrase, setSellerPhrase] = useState<string>(randomGreeting())\r\n    const [sellerPhraseSpelled, setSellerPhraseSpelled] = useState<string>('')\r\n    const sellerPhraseSpelledJSX = useMemo((): ReactNode[] => {\r\n        return sellerPhraseSpelled.split('').map((letter: string, index: number) => (\r\n            <span\r\n                key={index}\r\n                className={styles.letter}\r\n                style={{ filter: index >= sellerPhraseSpelled.length - 5 ? `hue-rotate(${index*360/sellerPhrase.length}deg)` : 'hue-rotate(0)' }}\r\n            >{letter}</span>\r\n        ))\r\n    }, [sellerPhraseSpelled])\r\n    // Spell seller's text letter by letter\r\n    const spellingIntervalID = useRef<number>(null)\r\n    const lastSellerPhraseRef = useRef<string>(null)\r\n    useEffect(() => {\r\n        // Restart process if seller's dialog changes\r\n        if (\r\n            lastSellerPhraseRef && lastSellerPhraseRef.current &&\r\n            spellingIntervalID && spellingIntervalID.current &&\r\n            sellerPhrase != lastSellerPhraseRef.current\r\n        ) {\r\n            setSellerPhraseSpelled('')\r\n            window.clearInterval(spellingIntervalID.current)\r\n        }\r\n\r\n        spellingIntervalID.current = window.setInterval(() => {            \r\n            if (sellerPhraseSpelled.length < sellerPhrase.length) {\r\n                setSellerPhraseSpelled(sellerPhraseSpelled + sellerPhrase[sellerPhraseSpelled.length])\r\n            } else {\r\n                window.clearInterval(spellingIntervalID.current)\r\n            }\r\n        }, 20)\r\n        lastSellerPhraseRef.current = sellerPhrase\r\n        \r\n        return () => {\r\n            window.clearInterval(spellingIntervalID.current)\r\n        }\r\n    }, [sellerPhrase, sellerPhraseSpelled])\r\n\r\n    const currentContentJSX = useMemo((): ReactNode => {\r\n        switch(currentContentID) {\r\n            case ContentID.ROOT:\r\n                return <div className={styles.root}>\r\n                    <ul>\r\n                        <li>\r\n                            <button onClick={() => setCurrentContentID(ContentID.BUY)} className={`btn btn-primary`}>\r\n                                I want to buy\r\n                            </button>\r\n                        </li>\r\n                        {inventoryLength > 0 && (\r\n                            <li>\r\n                                <button onClick={() => setCurrentContentID(ContentID.SELL)} className={`btn btn-primary`}>\r\n                                    I have stuff for you\r\n                                </button>\r\n                            </li>\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n                break\r\n            case ContentID.BUY:\r\n                return <Buy\r\n                    setSellerPhrase={setSellerPhrase}\r\n                    setCurrentContentID={setCurrentContentID}\r\n                 />\r\n                break\r\n            case ContentID.SELL:\r\n                return <Sell\r\n                    setSellerPhrase={setSellerPhrase}\r\n                    setCurrentContentID={setCurrentContentID}\r\n                 />\r\n                break\r\n            default: return null\r\n        }\r\n    }, [currentContentID, inventoryLength])\r\n \r\n    return <div className={styles.shop}>\r\n        <main className={styles.mainContent}>\r\n            {currentContentJSX}\r\n        </main>\r\n        <section className={styles.seller}>\r\n            <figure className={styles.sellerFigure}>\r\n                <GiPirateCaptain />\r\n                <figcaption>Captain Joe</figcaption>\r\n            </figure>\r\n            <p className={styles.sellerPhrase}>{sellerPhraseSpelledJSX}</p>\r\n        </section>\r\n    </div>\r\n}\r\n\r\nexport default Shop","C:\\www\\personal\\fishing-game\\src\\components\\ProgressCircle\\index.tsx",[],"C:\\www\\personal\\fishing-game\\src\\components\\fishes\\Default\\index.tsx",["282","283","284","285","286","287","288","289"],"C:\\www\\personal\\fishing-game\\src\\components\\Game\\evolution\\index.ts",[],"C:\\www\\personal\\fishing-game\\src\\store\\actions\\inventory.ts",[],"C:\\www\\personal\\fishing-game\\src\\store\\selectors\\inventory.ts",[],"C:\\www\\personal\\fishing-game\\src\\store\\selectors\\position.ts",[],"C:\\www\\personal\\fishing-game\\src\\store\\selectors\\fishing.ts",[],"C:\\www\\personal\\fishing-game\\src\\components\\Game\\areas\\FishGroup\\index.tsx",["290"],"import React, { ReactNode, Fragment, useEffect, useState, useRef, useMemo } from 'react'\r\nimport { Path } from '../../../../interfaces/position'\r\nimport styles from './index.module.sass'\r\n\r\n// Redux\r\nimport { useSelector } from 'react-redux'\r\nimport { hookedFishSelector } from '../../../../store/selectors/fishing'\r\n\r\ninterface Props {\r\n    groupID: string,\r\n    path: Path,\r\n    render?: (Path) => ReactNode\r\n}\r\n\r\nconst FishGroup = ({ groupID, path, render }) => {\r\n    const [isGroupVisible, setIsGroupVisible] = useState<boolean>(false)\r\n    const groupRef = useRef<HTMLDivElement>(null)\r\n\r\n    // Redux\r\n    const hookedFish = useSelector(hookedFishSelector)\r\n\r\n    // Use intersection observer API to render fishes only if their area is in viewport\r\n    useEffect(() => {\r\n        const options: any = {\r\n            root: null,\r\n            rootMargin: '0px',\r\n            threshold: 0.1\r\n        }\r\n        const observer: IntersectionObserver = new IntersectionObserver((entries, observer) => {\r\n            const group = entries[0]\r\n            group.isIntersecting ? setIsGroupVisible(true) : setIsGroupVisible(false)\r\n        }, options)\r\n\r\n        if (groupRef.current) observer.observe(groupRef.current)\r\n\r\n        return () => observer.disconnect()\r\n    }, [])\r\n\r\n    // Decide whether to render fishes\r\n    const mustRender = useMemo((): boolean => {\r\n        if (!hookedFish) return isGroupVisible\r\n\r\n        // If fish gets hooked, render it no matter if its area is outside of viewport\r\n        return hookedFish.groupID === groupID\r\n    }, [isGroupVisible, hookedFish, groupID])\r\n\r\n    // Use a ref to prevent rerendering of fishes, generating a new uuid for hooked fish\r\n    const renderRef = useRef<any>(render({ path }))\r\n\r\n    return <>\r\n        <div\r\n            ref={groupRef}\r\n            className={styles.fishGroup}\r\n            style={{\r\n                left: path.from.x,\r\n                top: path.from.y,\r\n                width: path.to.x - path.from.x,\r\n                height: path.to.y - path.from.y\r\n            }}\r\n        ></div>\r\n    {mustRender && renderRef.current}\r\n    </>\r\n}\r\n\r\nexport default React.memo(FishGroup)","C:\\www\\personal\\fishing-game\\src\\components\\Game\\MainMenu\\Shop\\Sell\\index.tsx",["291","292","293","294","295","296","297"],"import React, { ReactNode, Fragment, useState, useMemo, useCallback, useEffect } from 'react'\r\nimport styles from './index.module.sass'\r\nimport allCategories from '../../../../items/categories.json'\r\nimport { ContentID, randomGreeting, randomThanks } from \"../index\"\r\nimport { ItemCategory, InventoryEntry } from '../../../../../interfaces/items'\r\nimport { randomIntFromInterval } from '../../../../../utils/math'\r\nimport { BiCoin, GiMagnifyingGlass } from 'react-icons/all'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport { doubloonsSelector } from '../../../../../store/selectors/game'\r\nimport { sellableEntriesSelector } from '../../../../../store/selectors/inventory'\r\nimport { sellItemAction } from '../../../../../store/actions/inventory'\r\n\r\n// Seller dialogs\r\nexport const saleIntroPhrases: string[] = [\r\n    'What do you need to get rid of ?',\r\n    'How can I help you ?',\r\n    'Alright, what do ye have for me ?'\r\n]\r\nexport const randomSaleIntroPhrase = (): string => saleIntroPhrases[randomIntFromInterval(0, saleIntroPhrases.length - 1)]\r\n\r\n\r\ninterface Props {\r\n    setSellerPhrase: React.Dispatch<React.SetStateAction<string>>,\r\n    setCurrentContentID?: React.Dispatch<React.SetStateAction<ContentID>>,\r\n    myDoubloons?: number,\r\n    sellItem: any,\r\n    sellableEntries?: InventoryEntry[]\r\n}\r\n\r\nexport const Sell: React.FC<Props> = ({ setSellerPhrase, setCurrentContentID, myDoubloons, sellItem, sellableEntries }) => {\r\n    const saleSE = useMemo((): HTMLAudioElement => {\r\n        const src = require('../../../../../assets/audio/se/sale.mp3').default\r\n        const audio = new Audio\r\n        audio.src = src\r\n        return audio\r\n    }, [])\r\n    \r\n    const [focusedItem, setFocusedItem] = useState<string>(null)\r\n    const [searchFilter, setSearchFilter] = useState<string>('')\r\n\r\n    const forSaleItems = useMemo(() => {\r\n        // Figure out which entries to render\r\n        let entries = sellableEntries\r\n        if (searchFilter) {\r\n            entries = sellableEntries.filter((entry: InventoryEntry) => new RegExp(searchFilter, 'i').test(entry.item._id))\r\n        }\r\n\r\n        return entries.map((entry: InventoryEntry) => {\r\n            const { item } = entry\r\n            const isFocused = focusedItem === item._id\r\n            return <ForSaleItem\r\n                key={item._id}\r\n                isFocused={isFocused}\r\n                setFocusedItem={setFocusedItem}\r\n                entry={entry}\r\n                myDoubloons={myDoubloons}\r\n            />\r\n        })\r\n    }, [focusedItem, myDoubloons, sellableEntries, searchFilter])\r\n\r\n    useEffect(() => {\r\n        // Change seller's dialog\r\n        if (!focusedItem) setSellerPhrase(randomSaleIntroPhrase())\r\n    }, [focusedItem])\r\n\r\n    const detailsJSX = useMemo((): ReactNode => {\r\n        const fallback = <aside className={styles.details}>\r\n            <p className={styles.description}>Select an item from your inventory</p>\r\n            <p className={styles.myDoubloons}>\r\n                <span className={styles.label}>Wallet:&nbsp;&nbsp;</span>\r\n                {myDoubloons} <BiCoin />\r\n            </p>\r\n        </aside>\r\n\r\n        const entry: InventoryEntry = sellableEntries.find((entry: InventoryEntry) => entry.item._id === focusedItem)\r\n        if (!focusedItem || !entry) return fallback\r\n\r\n        return <SaleDetails\r\n            key={entry.item._id}\r\n            setSellerPhrase={setSellerPhrase}\r\n            entry={entry}\r\n            myDoubloons={myDoubloons}\r\n            sellItem={sellItem}\r\n            saleSE={saleSE}\r\n            setFocusedItem={setFocusedItem}\r\n         />\r\n    }, [focusedItem, sellableEntries, sellItem, myDoubloons])\r\n\r\n    return <div className={styles.sell}>\r\n        <main className={styles.forSaleItems}>\r\n            <ul className={styles.forSaleItemsList}>\r\n                <li className={`${styles.search} ${searchFilter ? styles.active : ''}`}>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={searchFilter}\r\n                        onChange={e => setSearchFilter(e.target.value)}\r\n                     />\r\n                    <GiMagnifyingGlass />\r\n                </li>\r\n                {forSaleItems}\r\n            </ul>\r\n            {detailsJSX}\r\n        </main>\r\n        <aside className={styles.footer}>\r\n            <nav className={styles.navigation}>\r\n                <button onClick={() => {\r\n                    setSellerPhrase(randomGreeting())\r\n                    setCurrentContentID(ContentID.ROOT)\r\n                }} className={`btn btn-cancel ${styles.previous}`}>\r\n                    &lt;\r\n                </button>\r\n            </nav>\r\n        </aside>\r\n    </div>\r\n}\r\n\r\ninterface DetailsProps {\r\n    setSellerPhrase: React.Dispatch<React.SetStateAction<string>>,\r\n    setFocusedItem: React.Dispatch<React.SetStateAction<string>>,\r\n    entry: InventoryEntry, \r\n    myDoubloons?: number,\r\n    sellItem?: any,\r\n    saleSE?: HTMLAudioElement\r\n}\r\n\r\nconst SaleDetails: React.FC<DetailsProps> = ({ setSellerPhrase, setFocusedItem, entry, myDoubloons, sellItem, saleSE }) => {\r\n    const { item, amount } = entry\r\n    const { _id, plural, description, salePrice, isSellable } = item\r\n    const [saleAmount, setSaleAmount] = useState<number>(1)\r\n    const [isConfirmingSale, setIsConfirmingSale] = useState<boolean>(false)\r\n    \r\n    const totalPrice = useMemo((): number => salePrice*saleAmount, [salePrice, saleAmount])\r\n\r\n    const canSell = useMemo((): boolean => {\r\n        return isSellable && amount > 0 && saleAmount > 0\r\n    }, [isSellable, amount, saleAmount])\r\n\r\n    const saleBTN = useMemo((): ReactNode => {\r\n        if (!canSell) {\r\n            return <button className={`${styles.disabled} btn btn-cancel ${styles.saleBTN}`}>\r\n                Cannot sell this\r\n            </button>\r\n        }\r\n        if (isConfirmingSale) {\r\n            return <>\r\n                <span\r\n                    className={`btn btn-cancel ${styles.cancelBTN}`}\r\n                    onClick={() => {\r\n                        setIsConfirmingSale(false)\r\n                        setSellerPhrase(randomSaleIntroPhrase())\r\n                    }}\r\n                >\r\n                    Cancel\r\n                </span>\r\n                <button className={`btn btn-primary ${styles.saleBTN}`}>\r\n                    Confirm\r\n                </button>\r\n            </>\r\n        }\r\n\r\n        return <button className={`btn btn-primary ${styles.saleBTN}`}>\r\n            Sell {saleAmount} {saleAmount <= 1 ? _id : plural}\r\n        </button>\r\n    }, [canSell, isConfirmingSale, saleAmount, _id, plural])\r\n\r\n    const confirmSale = useCallback(\r\n        (e: any): void => {\r\n            e.preventDefault()\r\n            if (canSell) {\r\n                if (!isConfirmingSale) {\r\n                    setIsConfirmingSale(true)\r\n                    setSellerPhrase(`Want to sell me ${saleAmount} ${saleAmount > 1 ? plural.toLowerCase() : _id.toLowerCase()} ?`)\r\n                } else {\r\n                    sellItem(_id, saleAmount, totalPrice)\r\n                    saleSE.play()\r\n                    setSellerPhrase(randomThanks())\r\n                    setIsConfirmingSale(false)\r\n\r\n                    // Remove focus if entry is removed from inventory (amount gets null)\r\n                    const isNextAmountNull = saleAmount >= amount\r\n                    if (isNextAmountNull) setFocusedItem(null)\r\n                }\r\n            } else {\r\n                setSellerPhrase('I\\'m not interested ...')\r\n            }\r\n        }, [\r\n            canSell,\r\n            isConfirmingSale,\r\n            _id,\r\n            plural,\r\n            amount,\r\n            saleAmount,\r\n            totalPrice,\r\n            sellItem,\r\n            saleSE\r\n        ]\r\n    )\r\n\r\n    // Component will unmount\r\n    useEffect(() => {\r\n        return () => {\r\n            setSellerPhrase(randomSaleIntroPhrase)\r\n        }\r\n    }, [])\r\n    \r\n    return <aside className={styles.details}>\r\n        <article className={styles.description}>{description}</article>\r\n        <form className={styles.saleActions} onSubmit={confirmSale}>\r\n            <fieldset className={styles.amount}>\r\n                <label htmlFor={`${_id}_amount`}>\r\n                    Amount:&nbsp;\r\n                </label>\r\n                <input\r\n                    type=\"number\"\r\n                    readOnly={isConfirmingSale}\r\n                    id={`${_id}_amount`}\r\n                    value={saleAmount}\r\n                    max={amount}\r\n                    min={1}\r\n                    step={1}\r\n                    onChange={e => {\r\n                        const newAmount = parseInt(e.target.value)\r\n                        if (newAmount <= 0) setSaleAmount(1)\r\n                        else if (newAmount > amount) setSaleAmount(amount)\r\n                        else setSaleAmount(newAmount)\r\n                    }}\r\n                />\r\n                <p className={styles.totalPrice}>\r\n                    <span className={styles.label}>Total: </span>\r\n                    {totalPrice} <BiCoin />\r\n                </p>\r\n            </fieldset>\r\n            <p className={styles.myDoubloons}>\r\n                <span className={styles.label}>Wallet:&nbsp;&nbsp;</span>\r\n                {myDoubloons} <BiCoin />\r\n            </p>\r\n            <fieldset className={styles.submit}>{saleBTN}</fieldset>\r\n        </form>\r\n    </aside>\r\n}\r\n\r\ninterface ForSaleItemProps {\r\n    entry: InventoryEntry,\r\n    isFocused: boolean,\r\n    setFocusedItem: React.Dispatch<React.SetStateAction<string>>,\r\n    myDoubloons?: number\r\n}\r\n\r\nfunction ForSaleItem ({ entry, setFocusedItem, isFocused, myDoubloons }) {\r\n    const { item, amount } = entry\r\n    const { _id, salePrice, image, category } = item\r\n    const itemCategory: ItemCategory = allCategories[category]\r\n    const textStyle = useMemo(() => ({ background: `linear-gradient(${itemCategory.colors.join(', ')}` }), [itemCategory])\r\n\r\n    return <li\r\n        className={`${styles.forSaleItem} ${isFocused ? styles.focused : ''}`}\r\n        onClick={() => isFocused ? setFocusedItem(null) : setFocusedItem(_id)}\r\n    >\r\n        <figure className={styles.itemImage} style={{ color: itemCategory.colors[1] }} dangerouslySetInnerHTML={{ __html: image }}></figure>\r\n        <span\r\n            className={styles.id}\r\n            style={textStyle}\r\n        >{_id}</span>\r\n        <span className={styles.amount}>&times;{amount}</span>\r\n        <span className={styles.price}><strong>{salePrice}</strong> <BiCoin /></span>\r\n    </li>\r\n}\r\n\r\n// Connect \"Sell\" component to Redux\r\nconst mapStateToProps = state => ({\r\n    myDoubloons: doubloonsSelector(state),\r\n    sellableEntries: sellableEntriesSelector(state)\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n    sellItem: (itemID: string, amount: number, price: number) => dispatch(sellItemAction(itemID, amount, price))\r\n})\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Sell)","C:\\www\\personal\\fishing-game\\src\\components\\misc\\Modal\\index.tsx",["298"],"import React, { ReactNode, useState, useCallback, useImperativeHandle, useRef, useEffect } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport styles from './index.module.sass'\r\n\r\ninterface Props {\r\n    onClose: any,\r\n    className?: string,\r\n    style?: any,\r\n    transition?: number,\r\n    children?: ReactNode\r\n}\r\n\r\nconst Modal = React.forwardRef<any, Props>(({\r\n    onClose,\r\n    transition = .3,\r\n    className = '',\r\n    style = {},\r\n    children\r\n}, ref) => {\r\n    const [isClosing, setIsClosing] = useState<boolean>(false)\r\n    const closeModal = useCallback(\r\n        (): void => {\r\n            setIsClosing(true)\r\n            timerID.current = window.setTimeout(() => {\r\n                onClose()\r\n            }, transition*1000)\r\n        }, [onClose]\r\n    )\r\n    const timerID = useRef<number>(null)\r\n    useEffect(() => () => window.clearTimeout(timerID.current), [])\r\n    useImperativeHandle(ref, () => ({ closeModal }), [closeModal])\r\n\r\n    return ReactDOM.createPortal(\r\n        (\r\n            <div\r\n                className={`${styles.modalWrapper} ${isClosing ? styles.closing : ''}`}\r\n                onClick={closeModal}\r\n                style={{ transition: `all ease ${transition}s`, animationDuration: `${transition}s` }}\r\n            >\r\n                <div className={`${styles.modalWindow} ${className}`} style={style} onClick={e => e.stopPropagation()}>\r\n                    {children}\r\n                </div>\r\n            </div>\r\n        ), document.getElementById('portal')\r\n    )\r\n})\r\n\r\nModal.defaultProps = {\r\n    children: null,\r\n    style: null,\r\n    className: '',\r\n    onClose: () => false\r\n}\r\n\r\nexport default Modal","C:\\www\\personal\\fishing-game\\src\\components\\Game\\MainMenu\\Shop\\Buy\\index.tsx",["299","300","301","302","303","304","305","306"],"import React, { ReactNode, Fragment, useState, useMemo, useCallback, useEffect } from 'react'\r\nimport styles from './index.module.sass'\r\nimport allItems from '../../../../items/items.json'\r\nimport allCategories from '../../../../items/categories.json'\r\nimport { ContentID, randomGreeting, randomThanks } from \"../index\"\r\nimport { Item, ItemCategory, InventoryEntry } from '../../../../../interfaces/items'\r\nimport { randomIntFromInterval } from '../../../../../utils/math'\r\nimport { BiCoin } from 'react-icons/all'\r\n\r\n// Redux\r\nimport { connect, useSelector } from 'react-redux'\r\nimport { doubloonsSelector } from '../../../../../store/selectors/game'\r\nimport { inventoryEntriesSelector } from '../../../../../store/selectors/inventory'\r\nimport { purchaseItemAction } from '../../../../../store/actions/inventory'\r\n\r\n// Seller dialogs\r\nexport const purchaseIntroPhrases: string[] = [\r\n    'Which item will you buy ?',\r\n    'How can I help you ?',\r\n    'Alright, what can I do for ye ?'\r\n]\r\nexport const randomPurchaseIntroPhrase = (): string => purchaseIntroPhrases[randomIntFromInterval(0, purchaseIntroPhrases.length - 1)]\r\n\r\nexport const tooExpensivePhrases: string[] = [\r\n    'Hey ! I want more doubloons for that !!',\r\n    'Come back with more cash, buddy !',\r\n    'Well tried, but that is worth WAY more doubloons !'\r\n]\r\nexport const randomTooExpensivePhrase = (): string => tooExpensivePhrases[randomIntFromInterval(0, tooExpensivePhrases.length - 1)]\r\n\r\ninterface Props {\r\n    setSellerPhrase: React.Dispatch<React.SetStateAction<string>>,\r\n    setCurrentContentID?: React.Dispatch<React.SetStateAction<ContentID>>,\r\n    myDoubloons?: number,\r\n    purchaseItem: any\r\n}\r\n\r\nexport const Buy: React.FC<Props> = ({ setSellerPhrase, setCurrentContentID, myDoubloons, purchaseItem }) => {\r\n    const purchaseSE = useMemo((): HTMLAudioElement => {\r\n        const src = require('../../../../../assets/audio/se/purchase.mp3').default\r\n        const audio = new Audio\r\n        audio.src = src\r\n        return audio\r\n    }, [])\r\n    const thankYouSE = useMemo((): HTMLAudioElement => {\r\n        const src = require('../../../../../assets/audio/se/thank-you-for-the-doubloons.mp3').default\r\n        const audio = new Audio\r\n        audio.src = src\r\n        return audio\r\n    }, [])\r\n    const [focusedItem, setFocusedItem] = useState<string>(null)\r\n    const forSaleItems = useMemo(() => {\r\n        const ids: string[] = [\r\n            'Mushroom',\r\n            'Fly',\r\n            'Butterfly',\r\n            'Dragonfly'\r\n        ]\r\n        return ids.map(id => {\r\n            const item: Item = allItems[id]\r\n            const isFocused = focusedItem === id\r\n            return <ForSaleItem\r\n                key={id}\r\n                isFocused={isFocused}\r\n                setFocusedItem={setFocusedItem}\r\n                item={item}\r\n                myDoubloons={myDoubloons}\r\n             />\r\n        })\r\n    }, [focusedItem, myDoubloons])\r\n\r\n    useEffect(() => {\r\n        // Change seller's dialog\r\n        if (!focusedItem) setSellerPhrase(randomPurchaseIntroPhrase())\r\n    }, [focusedItem])\r\n\r\n    const detailsJSX = useMemo((): ReactNode => {\r\n        if (!focusedItem) {\r\n            return <aside className={styles.details}>\r\n                <p className={styles.description}>Select an item to check its details</p>\r\n                <p className={styles.myDoubloons}>\r\n                    <span className={styles.label}>Wallet:&nbsp;&nbsp;</span>\r\n                    {myDoubloons} <BiCoin />\r\n                </p>\r\n            </aside>\r\n        }\r\n\r\n        const item: Item = allItems[focusedItem]\r\n        return <PurchaseDetails\r\n            key={item._id}\r\n            setSellerPhrase={setSellerPhrase}\r\n            item={item}\r\n            myDoubloons={myDoubloons}\r\n            purchaseItem={purchaseItem}\r\n            purchaseSE={purchaseSE}\r\n            thankYouSE={thankYouSE}\r\n         />\r\n    }, [focusedItem, purchaseItem, myDoubloons])\r\n\r\n    return <div className={styles.buy}>\r\n        <main className={styles.forSaleItems}>\r\n            <ul className={styles.forSaleItemsList}>\r\n                {forSaleItems}\r\n            </ul>\r\n            {detailsJSX}\r\n        </main>\r\n        <aside className={styles.footer}>\r\n            <nav className={styles.navigation}>\r\n                <button onClick={() => {\r\n                    setSellerPhrase(randomGreeting())\r\n                    setCurrentContentID(ContentID.ROOT)\r\n                }} className={`btn btn-cancel ${styles.previous}`}>\r\n                    &lt;\r\n                </button>\r\n            </nav>\r\n        </aside>\r\n    </div>\r\n}\r\n\r\ninterface DetailsProps {\r\n    setSellerPhrase: React.Dispatch<React.SetStateAction<string>>,\r\n    item: Item \r\n    myDoubloons?: number,\r\n    purchaseItem?: any,\r\n    purchaseSE?: HTMLAudioElement,\r\n    thankYouSE?: HTMLAudioElement\r\n}\r\n\r\nconst PurchaseDetails: React.FC<DetailsProps> = ({ setSellerPhrase, item, myDoubloons, purchaseItem, purchaseSE, thankYouSE }) => {\r\n    // Redux\r\n    const inventoryEntries = useSelector(inventoryEntriesSelector)\r\n\r\n    // State\r\n    const { _id, plural, description, purchasePrice, isSellable } = item\r\n    const [amount, setAmount] = useState<number>(1)\r\n    const [isConfirmingPurchase, setIsConfirmingPurchase] = useState<boolean>(false)\r\n    \r\n    const totalPrice = useMemo((): number => purchasePrice*amount, [purchasePrice, amount])\r\n\r\n    const canBuy = useMemo((): boolean => {\r\n        const hasPlayerEnoughMoney = myDoubloons >= totalPrice\r\n        return hasPlayerEnoughMoney && isSellable && amount > 0\r\n    }, [myDoubloons, totalPrice, isSellable, amount])\r\n\r\n    const amountInInventory = useMemo((): number => {\r\n        const inventoryEntry = inventoryEntries.find((entry: InventoryEntry) => entry.item._id === _id)\r\n        // Item is not in player's inventory\r\n        if (!inventoryEntry) return 0\r\n        // Item is already in inventory\r\n        else return inventoryEntry.amount\r\n    }, [inventoryEntries, _id])\r\n\r\n    const purchaseBTN = useMemo((): ReactNode => {\r\n        if (!canBuy) {\r\n            return <button className={`${styles.disabled} btn btn-cancel ${styles.purchaseBTN}`}>\r\n                Too expensive\r\n            </button>\r\n        }\r\n        if (isConfirmingPurchase) {\r\n            return <>\r\n                <span\r\n                    className={`btn btn-cancel ${styles.cancelBTN}`}\r\n                    onClick={() => {\r\n                        setIsConfirmingPurchase(false)\r\n                        setSellerPhrase(randomPurchaseIntroPhrase())\r\n                    }}\r\n                >\r\n                    Cancel\r\n                </span>\r\n                <button className={`btn btn-primary ${styles.purchaseBTN}`}>\r\n                    Confirm\r\n                </button>\r\n            </>\r\n        }\r\n\r\n        return <button className={`btn btn-primary ${styles.purchaseBTN}`}>\r\n            Buy {amount} {amount <= 1 ? _id : plural}\r\n        </button>\r\n    }, [canBuy, isConfirmingPurchase, amount, _id, plural])\r\n\r\n    const confirmPurchase = useCallback(\r\n        (e: any): void => {\r\n            e.preventDefault()\r\n            if (canBuy) {\r\n                if (!isConfirmingPurchase) {\r\n                    setIsConfirmingPurchase(true)\r\n                    setSellerPhrase(`Want to buy ${amount} ${amount > 1 ? plural.toLowerCase() : _id.toLowerCase()} ?`)\r\n                } else {\r\n                    purchaseItem(_id, amount, totalPrice)\r\n                    purchaseSE.play()\r\n                    setSellerPhrase(randomThanks())\r\n                    setIsConfirmingPurchase(false)\r\n                    setAmount(1)\r\n                    // \"Thank you !\"\r\n                    window.setTimeout(() => {\r\n                        if (thankYouSE) thankYouSE.play()\r\n                    }, 1500)\r\n                }\r\n            } else {\r\n                setSellerPhrase(randomTooExpensivePhrase())\r\n            }\r\n        }, [\r\n            canBuy,\r\n            isConfirmingPurchase,\r\n            _id,\r\n            plural,\r\n            amount,\r\n            totalPrice,\r\n            purchaseItem,\r\n            purchaseSE\r\n        ]\r\n    )\r\n\r\n    // Component will unmount\r\n    useEffect(() => {\r\n        return () => {\r\n            setSellerPhrase(randomPurchaseIntroPhrase)\r\n        }\r\n    }, [])\r\n    \r\n    return <aside className={styles.details}>\r\n        <article className={styles.description}>{description}</article>\r\n        <form className={styles.purchaseActions} onSubmit={confirmPurchase}>\r\n            <fieldset className={styles.amount}>\r\n                <label htmlFor={`${_id}_amount`}>\r\n                    Amount:&nbsp;\r\n                </label>\r\n                <input\r\n                    type=\"number\"\r\n                    readOnly={isConfirmingPurchase}\r\n                    id={`${_id}_amount`}\r\n                    value={amount}\r\n                    max={99}\r\n                    min={1}\r\n                    step={1}\r\n                    onChange={e => {\r\n                        const newAmount = parseInt(e.target.value)\r\n                        if (newAmount <= 0) setAmount(1)\r\n                        else if (newAmount > 99) setAmount(99)\r\n                        else setAmount(newAmount)\r\n                    }}\r\n                />\r\n                <p className={styles.totalPrice}>\r\n                    <span className={styles.label}>Total: </span>\r\n                    {totalPrice} <BiCoin />\r\n                </p>\r\n            </fieldset>\r\n            <p className={styles.myDoubloons}>\r\n                <span className={styles.label}>Inventory:&nbsp;&nbsp;</span>\r\n                {amountInInventory} \r\n                <span\r\n                    className={styles.label}\r\n                    style={{ marginLeft: '.5em' }}\r\n                >Wallet:&nbsp;&nbsp;</span>\r\n                {myDoubloons} <BiCoin />\r\n            </p>\r\n            <fieldset className={styles.submit}>{purchaseBTN}</fieldset>\r\n        </form>\r\n    </aside>\r\n}\r\n\r\ninterface ForSaleItemProps {\r\n    item: Item,\r\n    isFocused: boolean,\r\n    setFocusedItem: React.Dispatch<React.SetStateAction<string>>,\r\n    myDoubloons?: number\r\n}\r\n\r\nfunction ForSaleItem ({ item, setFocusedItem, isFocused, myDoubloons }) {\r\n    const { _id, purchasePrice, image, category } = item\r\n    const itemCategory: ItemCategory = allCategories[category]\r\n    const textStyle = useMemo(() => ({ background: `linear-gradient(${itemCategory.colors.join(', ')}` }), [itemCategory])\r\n\r\n    return <li\r\n        className={`\r\n            ${styles.forSaleItem}\r\n             ${isFocused ? styles.focused : ''}\r\n             ${purchasePrice > myDoubloons ? styles.tooExpensive : ''}\r\n        `}\r\n        onClick={() => isFocused ? setFocusedItem(null) : setFocusedItem(_id)}\r\n    >\r\n        <figure className={styles.itemImage} style={{ color: itemCategory.colors[1] }} dangerouslySetInnerHTML={{ __html: image }}></figure>\r\n        <span\r\n            className={styles.id}\r\n            style={textStyle}\r\n        >{_id}</span>\r\n        <span className={styles.price}><strong>{purchasePrice}</strong> <BiCoin /></span>\r\n    </li>\r\n}\r\n\r\n// Connect \"Buy\" component to Redux\r\nconst mapStateToProps = state => ({\r\n    myDoubloons: doubloonsSelector(state)\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n    purchaseItem: (itemID: string, amount: number, price: number) => dispatch(purchaseItemAction(itemID, amount, price))\r\n})\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Buy)","C:\\www\\personal\\fishing-game\\src\\interfaces\\position.ts",[],"C:\\www\\personal\\fishing-game\\src\\components\\Game\\MainMenu\\Credits\\index.tsx",["307","308","309"],"import React from 'react'\r\nimport styles from './index.module.sass'\r\n\r\nconst Credits = () => <div className={styles.credits}>\r\n    <main>\r\n        <h3>Credits</h3>\r\n        <div style={{ fontSize: '.75em', textAlign: 'center', margin: '2em', lineHeight: '200%' }}>\r\n            <em>\"Go fishing\"</em>,&nbsp;\r\n            fishing simulator game developed and maintained by&nbsp;\r\n            <address>\r\n                <a\r\n                    href=\"https://www.linkedin.com/in/b748b01b7/\"\r\n                    target=\"_blank\"\r\n                    title=\"See developer's profile on linkedin\"\r\n                    rel=\"author\"\r\n                >dev.js.theo@gmail.com</a>\r\n            </address>\r\n        </div>\r\n        <section className={styles.audioSection}>\r\n            <h4>Audio</h4>\r\n            <ul className={styles.creditList}>\r\n                <li>\r\n                    <h5>\r\n                        Music theme composed by &nbsp;\r\n                        <address>\r\n                            <a\r\n                                href=\"https://soundcloud.com/coma8\"\r\n                                target=\"_blank\"\r\n                                title=\"See profile on soundcloud\"\r\n                                rel=\"author\"\r\n                            >dev.js.theo@gmail.com</a>\r\n                        </address>\r\n                    </h5>\r\n                </li>\r\n                <li>\r\n                    <h5>\r\n                        \"Coins Purchase 01\"&nbsp;\r\n                        <address>\r\n                            by&nbsp;\r\n                            <a\r\n                                href=\"https://freesound.org/people/rhodesmas/sounds/321263/\"\r\n                                title=\"Rhodesmas' work\"\r\n                                target=\"_blank\"\r\n                                rel=\"author\"\r\n                            >rhodesmas</a>\r\n                        </address>\r\n                    </h5>\r\n                    <p>Modified from .wav to .mp3</p>\r\n                </li>\r\n            </ul>\r\n        </section>\r\n    </main>\r\n</div>\r\n\r\nexport default Credits","C:\\www\\personal\\fishing-game\\src\\components\\Game\\MainMenu\\Status\\index.tsx",["310","311","312","313"],"import React, { ReactElement, Dispatch, SetStateAction, useMemo, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { minsToHrsMins } from '../../../../utils/time'\r\nimport allCategories from '../../../items/categories.json'\r\nimport { SectionID } from '../index'\r\nimport { GameStats } from '../../../../interfaces/evolution'\r\nimport { Item, ItemCategory } from '../../../../interfaces/items'\r\nimport styles from './index.module.sass'\r\nimport { BiStats, BiCoin, GiFishingPole } from 'react-icons/all'\r\n// Redux\r\nimport { gameStatsSelector } from '../../../../store/selectors/game'\r\nimport { baitFoodSelector } from '../../../../store/selectors/fishing'\r\nimport { removeBaitItemAction } from '../../../../store/actions/fishing'\r\n\r\ninterface Props {\r\n    setCurrentSection: Dispatch<SetStateAction<SectionID>>,\r\n    // Redux\r\n    gameStats?: GameStats,\r\n    baitFood?: Item,\r\n    removeBait: any\r\n}\r\n\r\nenum StatusSectionID {\r\n    GENERAL = 'GENERAL',\r\n    GEAR = 'GEAR'\r\n}\r\n\r\nconst Status: React.FC<Props> = ({\r\n    setCurrentSection,\r\n    gameStats,\r\n    baitFood,\r\n    removeBait\r\n}) => {\r\n    const { gameTimeSpent, fishrodLevel, doubloons } = gameStats\r\n    const gameTimeSpentFormatted = useMemo((): string => minsToHrsMins(gameTimeSpent), [gameTimeSpent])\r\n    const [currentStatusSectionID, setCurrentStatusSectionID] = useState<StatusSectionID>(StatusSectionID.GENERAL)\r\n\r\n    // The category of item which current bait belongs to\r\n    const baitCategory = useMemo((): ItemCategory => {\r\n        if (baitFood) return allCategories[baitFood['category']]\r\n        else return null\r\n    }, [baitFood, allCategories])\r\n\r\n    // The color used on the bait icon which depends on its item category\r\n    const baitColor = useMemo((): string => {\r\n        if (!baitCategory) return ''\r\n\r\n        return baitCategory.colors[0]\r\n    }, [baitCategory])\r\n\r\n    const currentStatusSection = useMemo((): ReactElement => {\r\n        switch (currentStatusSectionID) {\r\n            case StatusSectionID.GENERAL:\r\n                return <section className={styles.general}>\r\n                    <h3>General</h3>\r\n                    <ul className={styles.gameStats}>\r\n                        <li>\r\n                            Doubloons:&nbsp;\r\n                            <span className={styles.data}>\r\n                                <strong>{doubloons}</strong>&nbsp;\r\n                                <BiCoin color=\"var(--yellow)\" style={{ verticalAlign: 'middle' }} />\r\n                            </span>\r\n                        </li>\r\n                        <li>Game time:&nbsp;\r\n                            <span className={styles.data}>\r\n                                <strong className={styles.time}>{gameTimeSpentFormatted}</strong>\r\n                            </span>\r\n                        </li>\r\n                    </ul>\r\n                </section>\r\n                break\r\n            case StatusSectionID.GEAR:\r\n                return <section className={styles.general}>\r\n                    <h3>Gear</h3>\r\n                    <ul className={styles.gear}>\r\n                        <li>Fishrod:&nbsp;\r\n                            <span className={styles.data}>\r\n                                <strong>{fishrodLevel._id}</strong>\r\n                            </span>\r\n                        </li>\r\n                        <li>Bait:&nbsp;\r\n                            {baitFood ? (\r\n                                <span className={styles.data}>\r\n                                    <span style={{ color: baitColor }} dangerouslySetInnerHTML={{ __html: baitFood.image }}></span>&nbsp;\r\n                                    <strong>{baitFood._id}</strong>&nbsp;\r\n                                    <button\r\n                                        className={`btn btn-cancel ${styles.btn}`}\r\n                                        onClick={removeBait}\r\n                                    >Remove</button>\r\n                                </span>\r\n                            ) : (\r\n                                <span className={styles.data}>\r\n                                    <strong>None</strong>&nbsp;\r\n                                    <button\r\n                                        className={`btn btn-primary ${styles.btn}`}\r\n                                        onClick={() => setCurrentSection(SectionID.INVENTORY)}\r\n                                    >\r\n                                        Add from inventory\r\n                                    </button>\r\n                                </span>\r\n                            )}\r\n                        </li>\r\n                    </ul>\r\n                </section>\r\n                break\r\n        }\r\n    }, [\r\n        currentStatusSectionID,\r\n        fishrodLevel,\r\n        baitFood,\r\n        baitColor,\r\n        removeBait,\r\n        doubloons,\r\n        gameTimeSpentFormatted\r\n    ])\r\n\r\n    return <article className={styles.status}>\r\n        <nav className={styles.statusSectionNav}>\r\n            <ul>\r\n                <li\r\n                    className={currentStatusSectionID === StatusSectionID.GENERAL ? styles.active : ''}\r\n                    onClick={() => setCurrentStatusSectionID(StatusSectionID.GENERAL)}\r\n                >\r\n                    <BiStats />\r\n                </li>\r\n                <li\r\n                    className={currentStatusSectionID === StatusSectionID.GEAR ? styles.active : ''}\r\n                    onClick={() => setCurrentStatusSectionID(StatusSectionID.GEAR)}\r\n                >\r\n                    <GiFishingPole />\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n        {currentStatusSection}\r\n    </article>\r\n}\r\n\r\n// Connect to Redux\r\nconst mapStateToProps = state => ({\r\n    gameStats: gameStatsSelector(state),\r\n    baitFood: baitFoodSelector(state)\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n    removeBait: () => dispatch(removeBaitItemAction())\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Status)","C:\\www\\personal\\fishing-game\\src\\components\\Game\\AudioPlayer\\index.tsx",[],"C:\\www\\personal\\fishing-game\\src\\utils\\time.ts",[],"C:\\www\\personal\\fishing-game\\src\\components\\Game\\Barometer\\ResistanceGauge\\index.tsx",[],"C:\\www\\personal\\fishing-game\\src\\components\\Game\\processes\\Battle\\index.tsx",[],{"ruleId":"314","replacedBy":"315"},{"ruleId":"316","replacedBy":"317"},{"ruleId":"314","replacedBy":"315"},{"ruleId":"316","replacedBy":"317"},{"ruleId":"318","severity":1,"message":"319","line":1,"column":60,"nodeType":"320","messageId":"321","endLine":1,"endColumn":75},{"ruleId":"322","severity":1,"message":"323","line":79,"column":8,"nodeType":"324","endLine":79,"endColumn":22,"suggestions":"325"},{"ruleId":"322","severity":1,"message":"326","line":127,"column":8,"nodeType":"324","endLine":127,"endColumn":36,"suggestions":"327"},{"ruleId":"322","severity":1,"message":"328","line":140,"column":8,"nodeType":"324","endLine":140,"endColumn":10,"suggestions":"329"},{"ruleId":"318","severity":1,"message":"330","line":151,"column":17,"nodeType":"320","messageId":"321","endLine":151,"endColumn":23},{"ruleId":"322","severity":1,"message":"331","line":173,"column":9,"nodeType":"324","endLine":173,"endColumn":28,"suggestions":"332"},{"ruleId":"322","severity":1,"message":"333","line":195,"column":8,"nodeType":"324","endLine":195,"endColumn":64,"suggestions":"334"},{"ruleId":"322","severity":1,"message":"335","line":204,"column":12,"nodeType":"324","endLine":204,"endColumn":41,"suggestions":"336"},{"ruleId":"322","severity":1,"message":"337","line":215,"column":9,"nodeType":"324","endLine":215,"endColumn":44,"suggestions":"338"},{"ruleId":"322","severity":1,"message":"339","line":283,"column":8,"nodeType":"324","endLine":283,"endColumn":24,"suggestions":"340"},{"ruleId":"341","severity":1,"message":"342","line":302,"column":17,"nodeType":"343","messageId":"344","endLine":302,"endColumn":22},{"ruleId":"341","severity":1,"message":"342","line":325,"column":17,"nodeType":"343","messageId":"344","endLine":325,"endColumn":22},{"ruleId":"341","severity":1,"message":"342","line":341,"column":17,"nodeType":"343","messageId":"344","endLine":341,"endColumn":22},{"ruleId":"322","severity":1,"message":"345","line":359,"column":8,"nodeType":"324","endLine":373,"endColumn":6,"suggestions":"346"},{"ruleId":"322","severity":1,"message":"347","line":396,"column":8,"nodeType":"324","endLine":396,"endColumn":25,"suggestions":"348"},{"ruleId":"322","severity":1,"message":"349","line":63,"column":8,"nodeType":"324","endLine":63,"endColumn":49,"suggestions":"350"},{"ruleId":"322","severity":1,"message":"351","line":42,"column":8,"nodeType":"324","endLine":42,"endColumn":10,"suggestions":"352"},{"ruleId":"341","severity":1,"message":"342","line":48,"column":17,"nodeType":"343","messageId":"344","endLine":48,"endColumn":22},{"ruleId":"341","severity":1,"message":"342","line":51,"column":17,"nodeType":"343","messageId":"344","endLine":51,"endColumn":22},{"ruleId":"322","severity":1,"message":"353","line":49,"column":53,"nodeType":"324","endLine":49,"endColumn":55,"suggestions":"354"},{"ruleId":"322","severity":1,"message":"353","line":52,"column":54,"nodeType":"324","endLine":52,"endColumn":56,"suggestions":"355"},{"ruleId":"322","severity":1,"message":"356","line":81,"column":12,"nodeType":"324","endLine":81,"endColumn":31,"suggestions":"357"},{"ruleId":"322","severity":1,"message":"358","line":90,"column":8,"nodeType":"324","endLine":90,"endColumn":10,"suggestions":"359"},{"ruleId":"322","severity":1,"message":"360","line":97,"column":8,"nodeType":"324","endLine":97,"endColumn":10,"suggestions":"361"},{"ruleId":"322","severity":1,"message":"362","line":104,"column":12,"nodeType":"324","endLine":104,"endColumn":54,"suggestions":"363"},{"ruleId":"322","severity":1,"message":"364","line":188,"column":26,"nodeType":"320","endLine":188,"endColumn":33},{"ruleId":"322","severity":1,"message":"365","line":193,"column":8,"nodeType":"324","endLine":193,"endColumn":43,"suggestions":"366"},{"ruleId":"318","severity":1,"message":"367","line":67,"column":23,"nodeType":"320","messageId":"321","endLine":67,"endColumn":35},{"ruleId":"322","severity":1,"message":"368","line":91,"column":12,"nodeType":"324","endLine":91,"endColumn":14,"suggestions":"369"},{"ruleId":"322","severity":1,"message":"370","line":99,"column":8,"nodeType":"324","endLine":99,"endColumn":10,"suggestions":"371"},{"ruleId":"322","severity":1,"message":"360","line":102,"column":73,"nodeType":"324","endLine":102,"endColumn":75,"suggestions":"372"},{"ruleId":"322","severity":1,"message":"373","line":112,"column":12,"nodeType":"324","endLine":112,"endColumn":24,"suggestions":"374"},{"ruleId":"322","severity":1,"message":"375","line":194,"column":8,"nodeType":"324","endLine":194,"endColumn":86,"suggestions":"376"},{"ruleId":"322","severity":1,"message":"377","line":208,"column":12,"nodeType":"324","endLine":208,"endColumn":32,"suggestions":"378"},{"ruleId":"322","severity":1,"message":"379","line":349,"column":26,"nodeType":"320","endLine":349,"endColumn":33},{"ruleId":"322","severity":1,"message":"380","line":352,"column":8,"nodeType":"324","endLine":359,"endColumn":6,"suggestions":"381"},{"ruleId":"322","severity":1,"message":"382","line":427,"column":8,"nodeType":"324","endLine":427,"endColumn":31,"suggestions":"383"},{"ruleId":"322","severity":1,"message":"384","line":95,"column":12,"nodeType":"324","endLine":95,"endColumn":57,"suggestions":"385"},{"ruleId":"322","severity":1,"message":"360","line":103,"column":8,"nodeType":"324","endLine":103,"endColumn":10,"suggestions":"386"},{"ruleId":"322","severity":1,"message":"387","line":126,"column":8,"nodeType":"324","endLine":126,"endColumn":19,"suggestions":"388"},{"ruleId":"389","severity":1,"message":"390","line":37,"column":1,"nodeType":"391","endLine":111,"endColumn":2},{"ruleId":"341","severity":1,"message":"342","line":41,"column":13,"nodeType":"343","messageId":"344","endLine":41,"endColumn":18},{"ruleId":"341","severity":1,"message":"342","line":48,"column":13,"nodeType":"343","messageId":"344","endLine":48,"endColumn":18},{"ruleId":"341","severity":1,"message":"342","line":51,"column":13,"nodeType":"343","messageId":"344","endLine":51,"endColumn":18},{"ruleId":"341","severity":1,"message":"342","line":54,"column":13,"nodeType":"343","messageId":"344","endLine":54,"endColumn":18},{"ruleId":"341","severity":1,"message":"342","line":82,"column":13,"nodeType":"343","messageId":"344","endLine":82,"endColumn":18},{"ruleId":"341","severity":1,"message":"342","line":100,"column":13,"nodeType":"343","messageId":"344","endLine":100,"endColumn":18},{"ruleId":"341","severity":1,"message":"342","line":108,"column":13,"nodeType":"343","messageId":"344","endLine":108,"endColumn":18},{"ruleId":"318","severity":1,"message":"392","line":5,"column":10,"nodeType":"320","messageId":"321","endLine":5,"endColumn":14},{"ruleId":"389","severity":1,"message":"390","line":67,"column":1,"nodeType":"391","endLine":145,"endColumn":2},{"ruleId":"393","severity":1,"message":"394","line":82,"column":41,"nodeType":"395","messageId":"396","endLine":82,"endColumn":42,"fix":"397"},{"ruleId":"341","severity":1,"message":"342","line":109,"column":13,"nodeType":"343","messageId":"344","endLine":109,"endColumn":18},{"ruleId":"341","severity":1,"message":"342","line":141,"column":13,"nodeType":"343","messageId":"344","endLine":141,"endColumn":18},{"ruleId":"389","severity":1,"message":"390","line":22,"column":1,"nodeType":"391","endLine":32,"endColumn":2},{"ruleId":"341","severity":1,"message":"342","line":29,"column":13,"nodeType":"343","messageId":"344","endLine":29,"endColumn":18},{"ruleId":"389","severity":1,"message":"390","line":25,"column":1,"nodeType":"391","endLine":42,"endColumn":2},{"ruleId":"341","severity":1,"message":"342","line":29,"column":13,"nodeType":"343","messageId":"344","endLine":29,"endColumn":18},{"ruleId":"341","severity":1,"message":"342","line":33,"column":13,"nodeType":"343","messageId":"344","endLine":33,"endColumn":18},{"ruleId":"341","severity":1,"message":"342","line":36,"column":13,"nodeType":"343","messageId":"344","endLine":36,"endColumn":18},{"ruleId":"341","severity":1,"message":"342","line":39,"column":13,"nodeType":"343","messageId":"344","endLine":39,"endColumn":18},{"ruleId":"318","severity":1,"message":"398","line":1,"column":54,"nodeType":"320","messageId":"321","endLine":1,"endColumn":62},{"ruleId":"341","severity":1,"message":"342","line":51,"column":17,"nodeType":"343","messageId":"344","endLine":51,"endColumn":22},{"ruleId":"322","severity":1,"message":"399","line":54,"column":8,"nodeType":"324","endLine":54,"endColumn":33,"suggestions":"400"},{"ruleId":"322","severity":1,"message":"353","line":82,"column":132,"nodeType":"324","endLine":82,"endColumn":134,"suggestions":"401"},{"ruleId":"322","severity":1,"message":"353","line":83,"column":99,"nodeType":"324","endLine":83,"endColumn":101,"suggestions":"402"},{"ruleId":"322","severity":1,"message":"353","line":84,"column":94,"nodeType":"324","endLine":84,"endColumn":96,"suggestions":"403"},{"ruleId":"322","severity":1,"message":"353","line":85,"column":82,"nodeType":"324","endLine":85,"endColumn":84,"suggestions":"404"},{"ruleId":"322","severity":1,"message":"353","line":86,"column":88,"nodeType":"324","endLine":86,"endColumn":90,"suggestions":"405"},{"ruleId":"341","severity":1,"message":"342","line":96,"column":17,"nodeType":"343","messageId":"344","endLine":96,"endColumn":22},{"ruleId":"322","severity":1,"message":"399","line":99,"column":8,"nodeType":"324","endLine":99,"endColumn":33,"suggestions":"406"},{"ruleId":"322","severity":1,"message":"407","line":177,"column":8,"nodeType":"324","endLine":177,"endColumn":70,"suggestions":"408"},{"ruleId":"322","severity":1,"message":"409","line":192,"column":8,"nodeType":"324","endLine":192,"endColumn":24,"suggestions":"410"},{"ruleId":"322","severity":1,"message":"411","line":312,"column":8,"nodeType":"324","endLine":312,"endColumn":34,"suggestions":"412"},{"ruleId":"322","severity":1,"message":"413","line":51,"column":8,"nodeType":"324","endLine":51,"endColumn":29,"suggestions":"414"},{"ruleId":"415","severity":1,"message":"416","line":60,"column":26,"nodeType":"417","messageId":"418","endLine":60,"endColumn":28},{"ruleId":"341","severity":1,"message":"342","line":99,"column":17,"nodeType":"343","messageId":"344","endLine":99,"endColumn":22},{"ruleId":"341","severity":1,"message":"342","line":105,"column":17,"nodeType":"343","messageId":"344","endLine":105,"endColumn":22},{"ruleId":"341","severity":1,"message":"342","line":111,"column":17,"nodeType":"343","messageId":"344","endLine":111,"endColumn":22},{"ruleId":"318","severity":1,"message":"419","line":57,"column":11,"nodeType":"320","messageId":"321","endLine":57,"endColumn":19},{"ruleId":"322","severity":1,"message":"353","line":61,"column":109,"nodeType":"324","endLine":61,"endColumn":111,"suggestions":"420"},{"ruleId":"322","severity":1,"message":"353","line":62,"column":102,"nodeType":"324","endLine":62,"endColumn":104,"suggestions":"421"},{"ruleId":"322","severity":1,"message":"353","line":63,"column":114,"nodeType":"324","endLine":63,"endColumn":116,"suggestions":"422"},{"ruleId":"322","severity":1,"message":"423","line":150,"column":12,"nodeType":"324","endLine":150,"endColumn":47,"suggestions":"424"},{"ruleId":"322","severity":1,"message":"425","line":170,"column":12,"nodeType":"324","endLine":170,"endColumn":95,"suggestions":"426"},{"ruleId":"322","severity":1,"message":"427","line":238,"column":12,"nodeType":"324","endLine":243,"endColumn":10,"suggestions":"428"},{"ruleId":"322","severity":1,"message":"429","line":303,"column":8,"nodeType":"324","endLine":303,"endColumn":77,"suggestions":"430"},{"ruleId":"318","severity":1,"message":"431","line":9,"column":11,"nodeType":"320","messageId":"321","endLine":9,"endColumn":16},{"ruleId":"432","severity":1,"message":"433","line":35,"column":23,"nodeType":"434","messageId":"435","endLine":35,"endColumn":32,"fix":"436"},{"ruleId":"322","severity":1,"message":"437","line":66,"column":8,"nodeType":"324","endLine":66,"endColumn":21,"suggestions":"438"},{"ruleId":"322","severity":1,"message":"439","line":89,"column":8,"nodeType":"324","endLine":89,"endColumn":61,"suggestions":"440"},{"ruleId":"322","severity":1,"message":"441","line":166,"column":8,"nodeType":"324","endLine":166,"endColumn":60,"suggestions":"442"},{"ruleId":"322","severity":1,"message":"443","line":188,"column":12,"nodeType":"324","endLine":198,"endColumn":10,"suggestions":"444"},{"ruleId":"322","severity":1,"message":"437","line":206,"column":8,"nodeType":"324","endLine":206,"endColumn":10,"suggestions":"445"},{"ruleId":"318","severity":1,"message":"446","line":244,"column":11,"nodeType":"320","messageId":"321","endLine":244,"endColumn":27},{"ruleId":"322","severity":1,"message":"447","line":27,"column":12,"nodeType":"324","endLine":27,"endColumn":21,"suggestions":"448"},{"ruleId":"432","severity":1,"message":"433","line":41,"column":23,"nodeType":"434","messageId":"435","endLine":41,"endColumn":32,"fix":"449"},{"ruleId":"432","severity":1,"message":"433","line":47,"column":23,"nodeType":"434","messageId":"435","endLine":47,"endColumn":32,"fix":"450"},{"ruleId":"322","severity":1,"message":"437","line":75,"column":8,"nodeType":"324","endLine":75,"endColumn":21,"suggestions":"451"},{"ruleId":"322","severity":1,"message":"452","line":98,"column":8,"nodeType":"324","endLine":98,"endColumn":48,"suggestions":"453"},{"ruleId":"322","severity":1,"message":"441","line":179,"column":8,"nodeType":"324","endLine":179,"endColumn":59,"suggestions":"454"},{"ruleId":"322","severity":1,"message":"455","line":202,"column":12,"nodeType":"324","endLine":211,"endColumn":10,"suggestions":"456"},{"ruleId":"322","severity":1,"message":"437","line":219,"column":8,"nodeType":"324","endLine":219,"endColumn":10,"suggestions":"457"},{"ruleId":"318","severity":1,"message":"446","line":262,"column":11,"nodeType":"320","messageId":"321","endLine":262,"endColumn":27},{"ruleId":"458","severity":1,"message":"459","line":13,"column":21,"nodeType":"460","endLine":13,"endColumn":36},{"ruleId":"458","severity":1,"message":"459","line":28,"column":33,"nodeType":"460","endLine":28,"endColumn":48},{"ruleId":"458","severity":1,"message":"459","line":43,"column":33,"nodeType":"460","endLine":43,"endColumn":48},{"ruleId":"322","severity":1,"message":"461","line":42,"column":8,"nodeType":"324","endLine":42,"endColumn":33,"suggestions":"462"},{"ruleId":"341","severity":1,"message":"342","line":71,"column":17,"nodeType":"343","messageId":"344","endLine":71,"endColumn":22},{"ruleId":"341","severity":1,"message":"342","line":105,"column":17,"nodeType":"343","messageId":"344","endLine":105,"endColumn":22},{"ruleId":"322","severity":1,"message":"411","line":107,"column":8,"nodeType":"324","endLine":115,"endColumn":6,"suggestions":"463"},"no-native-reassign",["464"],"no-negated-in-lhs",["465"],"@typescript-eslint/no-unused-vars","'useLayoutEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'creekBE'. Either include it or remove the dependency array.","ArrayExpression",["466"],"React Hook useEffect has a missing dependency: 'backgroundMusic'. Either include it or remove the dependency array.",["467"],"React Hook useEffect has a missing dependency: 'spendOneMinute'. Either include it or remove the dependency array.",["468"],"'setMap' is assigned a value but never used.","React Hook useMemo has a missing dependency: 'rodDimensions.height'. Either include it or remove the dependency array.",["469"],"React Hook useMemo has an unnecessary dependency: 'playerCoordinates'. Either exclude it or remove the dependency array.",["470"],"React Hook useMemo has a missing dependency: 'map.shorePath.to.y'. Either include it or remove the dependency array.",["471"],"React Hook useMemo has missing dependencies: 'rodAngle' and 'rodDimensions.height'. Either include them or remove the dependency array.",["472"],"React Hook useEffect has a missing dependency: 'updateGlobalPositionState'. Either include it or remove the dependency array. If 'updateGlobalPositionState' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["473"],"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","React Hook useMemo has missing dependencies: 'isBarometerVisible', 'scrollToBait', and 'scrollToPlayer'. Either include them or remove the dependency array.",["474"],"React Hook useEffect has missing dependencies: 'map.shorePath.from.x', 'map.shorePath.from.y', 'map.shorePath.to.x', and 'map.shorePath.to.y'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setMushroom' needs the current value of 'map.shorePath.from.x'.",["475"],"React Hook useMemo has missing dependencies: 'lineStepMatches.steps', 'lineStepMatches.subSteps', and 'nextStep'. Either include them or remove the dependency array.",["476"],"React Hook useEffect has a missing dependency: 'closeMenu'. Either include it or remove the dependency array. If 'closeMenu' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["477"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["478"],["479"],"React Hook useCallback has missing dependencies: 'isPlayerMoving', 'map.width', 'scrollToPlayer', and 'setPlayerCoordinates'. Either include them or remove the dependency array. If 'scrollToPlayer' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["480"],"React Hook useLayoutEffect has missing dependencies: 'scrollToPlayer', 'setBaitOffset', 'setBaitType', and 'setRodAngle'. Either include them or remove the dependency array. If 'scrollToPlayer' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["481"],"React Hook useEffect has missing dependencies: 'isBarometerVisible' and 'setIsBarometerVisible'. Either include them or remove the dependency array. If 'setIsBarometerVisible' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["482"],"React Hook useCallback has a missing dependency: 'setProcess'. Either include it or remove the dependency array. If 'setProcess' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["483"],"The ref value 'shoreRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'shoreRef.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has missing dependencies: 'movePlayer', 'shoreRef', and 'throwLine'. Either include them or remove the dependency array.",["484"],"'setHasThrown' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'setBaitOffset', 'setBaitType', 'setProcess', 'setRodAngle', and 'setRodOffset'. Either include them or remove the dependency array. If 'setRodAngle' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["485"],"React Hook useEffect has missing dependencies: 'scrollToPlayer', 'setBaitOffset', and 'setRodOffset'. Either include them or remove the dependency array. If 'setRodOffset' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["486"],["487"],"React Hook useCallback has missing dependencies: 'setBaitOffset', 'setRodAngle', and 'setRodOffset'. Either include them or remove the dependency array. If 'setRodAngle' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["488"],"React Hook useEffect has missing dependencies: 'baitRef', 'lakeRef', 'scrollToBait', 'setBaitOffset', 'setBaitType', 'setIsBarometerVisible', and 'setProcess'. Either include them or remove the dependency array. If 'setIsBarometerVisible' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["489"],"React Hook useCallback has a missing dependency: 'setBaitOffset'. Either include it or remove the dependency array. If 'setBaitOffset' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["490"],"The ref value 'gaugeRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'gaugeRef.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has missing dependencies: 'changeRodDirection' and 'goBack'. Either include them or remove the dependency array.",["491"],"React Hook useMemo has an unnecessary dependency: 'gaugeValueRef.current'. Either exclude it or remove the dependency array. Mutable values like 'gaugeValueRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["492"],"React Hook useCallback has missing dependencies: 'baitOffset.x', 'baitOffset.y', 'scrollToBait', 'setBaitOffset', and 'setRodAngle'. Either include them or remove the dependency array. If 'setBaitOffset' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["493"],["494"],"React Hook useEffect has a missing dependency: 'reelingSE'. Either include it or remove the dependency array.",["495"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'Item' is defined but never used.","rest-spread-spacing","Unexpected whitespace after spread property operator.","SpreadElement","unexpectedWhitespace",{"range":"496","text":"497"},"'Fragment' is defined but never used.","React Hook useMemo has a missing dependency: 'isEquipment'. Either include it or remove the dependency array.",["498"],["499"],["500"],["501"],["502"],["503"],["504"],"React Hook useMemo has missing dependencies: 'equipItem', 'isEquipment', and 'isEquipped'. Either include them or remove the dependency array.",["505"],"React Hook useMemo has a missing dependency: 'category'. Either include it or remove the dependency array. Outer scope values like 'rodLevels' aren't valid dependencies because mutating them doesn't re-render the component.",["506"],"React Hook useMemo has a missing dependency: 'setCurrentSection'. Either include it or remove the dependency array. If 'setCurrentSection' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["507"],"React Hook useMemo has a missing dependency: 'sellerPhrase.length'. Either include it or remove the dependency array.",["508"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'map' is assigned a value but never used.",["509"],["510"],["511"],"React Hook useCallback has a missing dependency: 'setGameProcess'. Either include it or remove the dependency array.",["512"],"React Hook useCallback has unnecessary dependencies: 'fishDirection', 'isInScope', and 'likesBait'. Either exclude them or remove the dependency array.",["513"],"React Hook useCallback has a missing dependency: 'makeBaitAvailable'. Either include it or remove the dependency array.",["514"],"React Hook useEffect has missing dependencies: 'fish', 'makeBaitAvailable', and 'setHookedFish'. Either include them or remove the dependency array.",["515"],"'Props' is defined but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"516","text":"517"},"React Hook useEffect has a missing dependency: 'setSellerPhrase'. Either include it or remove the dependency array. If 'setSellerPhrase' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["518"],"React Hook useMemo has missing dependencies: 'saleSE' and 'setSellerPhrase'. Either include them or remove the dependency array.",["519"],"React Hook useMemo has a missing dependency: 'setSellerPhrase'. Either include it or remove the dependency array. If 'setSellerPhrase' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["520"],"React Hook useCallback has missing dependencies: 'setFocusedItem' and 'setSellerPhrase'. Either include them or remove the dependency array. If 'setSellerPhrase' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["521"],["522"],"'ForSaleItemProps' is defined but never used.","React Hook useCallback has a missing dependency: 'transition'. Either include it or remove the dependency array.",["523"],{"range":"524","text":"517"},{"range":"525","text":"517"},["526"],"React Hook useMemo has missing dependencies: 'purchaseSE', 'setSellerPhrase', and 'thankYouSE'. Either include them or remove the dependency array.",["527"],["528"],"React Hook useCallback has missing dependencies: 'setSellerPhrase' and 'thankYouSE'. Either include them or remove the dependency array. If 'setSellerPhrase' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["529"],["530"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","React Hook useMemo has an unnecessary dependency: 'allCategories'. Either exclude it or remove the dependency array. Outer scope values like 'allCategories' aren't valid dependencies because mutating them doesn't re-render the component.",["531"],["532"],"no-global-assign","no-unsafe-negation",{"desc":"533","fix":"534"},{"desc":"535","fix":"536"},{"desc":"537","fix":"538"},{"desc":"539","fix":"540"},{"desc":"541","fix":"542"},{"desc":"543","fix":"544"},{"desc":"545","fix":"546"},{"desc":"547","fix":"548"},{"desc":"549","fix":"550"},{"desc":"551","fix":"552"},{"desc":"553","fix":"554"},{"desc":"555","fix":"556"},{"desc":"557","fix":"558"},{"desc":"557","fix":"559"},{"desc":"560","fix":"561"},{"desc":"562","fix":"563"},{"desc":"564","fix":"565"},{"desc":"566","fix":"567"},{"desc":"568","fix":"569"},{"desc":"570","fix":"571"},{"desc":"572","fix":"573"},{"desc":"564","fix":"574"},{"desc":"575","fix":"576"},{"desc":"577","fix":"578"},{"desc":"579","fix":"580"},{"desc":"581","fix":"582"},{"desc":"583","fix":"584"},{"desc":"585","fix":"586"},{"desc":"564","fix":"587"},{"desc":"588","fix":"589"},[2082,2083],"",{"desc":"590","fix":"591"},{"desc":"557","fix":"592"},{"desc":"557","fix":"593"},{"desc":"557","fix":"594"},{"desc":"557","fix":"595"},{"desc":"557","fix":"596"},{"desc":"590","fix":"597"},{"desc":"598","fix":"599"},{"desc":"600","fix":"601"},{"desc":"602","fix":"603"},{"desc":"604","fix":"605"},{"desc":"557","fix":"606"},{"desc":"557","fix":"607"},{"desc":"557","fix":"608"},{"desc":"609","fix":"610"},{"desc":"611","fix":"612"},{"desc":"613","fix":"614"},{"desc":"615","fix":"616"},[1611,1611],"()",{"desc":"617","fix":"618"},{"desc":"619","fix":"620"},{"desc":"621","fix":"622"},{"desc":"623","fix":"624"},{"desc":"625","fix":"626"},{"desc":"627","fix":"628"},[1965,1965],[2218,2218],{"desc":"617","fix":"629"},{"desc":"630","fix":"631"},{"desc":"632","fix":"633"},{"desc":"634","fix":"635"},{"desc":"625","fix":"636"},{"desc":"637","fix":"638"},{"desc":"639","fix":"640"},"Update the dependencies array to be: [audioEnabled, creekBE]",{"range":"641","text":"642"},"Update the dependencies array to be: [audioEnabled, backgroundMusic, isBGMEnabled]",{"range":"643","text":"644"},"Update the dependencies array to be: [spendOneMinute]",{"range":"645","text":"646"},"Update the dependencies array to be: [playerCoordinates.width, playerCoordinates.x, playerCoordinates.y, rodDimensions.height]",{"range":"647","text":"648"},"Update the dependencies array to be: [map, baitCoordinates, rodDimensions]",{"range":"649","text":"650"},"Update the dependencies array to be: [baitCoordinates.x, baitCoordinates.y, baitOffset.x, baitOffset.y, map.shorePath.to.y]",{"range":"651","text":"652"},"Update the dependencies array to be: [lineOrigin.x, lineOrigin.y, baitOffset.x, baitOffset.y, rodOffset.x, rodOffset.y, rodAngle, rodDimensions.height]",{"range":"653","text":"654"},"Update the dependencies array to be: [baitLakeCoords, updateGlobalPositionState]",{"range":"655","text":"656"},"Update the dependencies array to be: [process, setProcess, playerCoordinates, scrollToPlayer, map, isBarometerVisible, scrollToBait, rodAngle, rodOffset, baitOffset, baitOffsetLimit, baitLakeCoords, baitDistance, rodLevel, lineLength]",{"range":"657","text":"658"},"Update the dependencies array to be: [inventoryLength, map.shorePath.from.x, map.shorePath.from.y, map.shorePath.to.x, map.shorePath.to.y]",{"range":"659","text":"660"},"Update the dependencies array to be: [nextStep, baitDistance, lineStepMatches.steps, lineStepMatches.subSteps]",{"range":"661","text":"662"},"Update the dependencies array to be: [closeMenu]",{"range":"663","text":"664"},"Update the dependencies array to be: [dispatch]",{"range":"665","text":"666"},{"range":"667","text":"666"},"Update the dependencies array to be: [isPlayerMoving, map.width, playerCoordinates, scrollToPlayer, setPlayerCoordinates]",{"range":"668","text":"669"},"Update the dependencies array to be: [scrollToPlayer, setBaitOffset, setBaitType, setRodAngle]",{"range":"670","text":"671"},"Update the dependencies array to be: [isBarometerVisible, setIsBarometerVisible]",{"range":"672","text":"673"},"Update the dependencies array to be: [isPlayerMoving, isMainMenuOpen, baitFood, setProcess]",{"range":"674","text":"675"},"Update the dependencies array to be: [playerCoordinates, isMainMenuOpen, movePlayer, throwLine, shoreRef]",{"range":"676","text":"677"},"Update the dependencies array to be: [setBaitOffset, setBaitType, setProcess, setRodAngle, setRodOffset]",{"range":"678","text":"679"},"Update the dependencies array to be: [scrollToPlayer, setBaitOffset, setRodOffset]",{"range":"680","text":"681"},{"range":"682","text":"673"},"Update the dependencies array to be: [isThrowing, setBaitOffset, setRodAngle, setRodOffset]",{"range":"683","text":"684"},"Update the dependencies array to be: [isThrowing, hasThrown, rodLevel, baitOffset, baitOffsetLimit, baitLakeCoords, setIsBarometerVisible, setBaitOffset, scrollToBait, setBaitType, baitRef, lakeRef, setProcess]",{"range":"685","text":"686"},"Update the dependencies array to be: [rodLevel.maxLength, setBaitOffset, rodAngle]",{"range":"687","text":"688"},"Update the dependencies array to be: [isPreparingThrow, spaceFired, rodAngle, rodOffset, confirmThrow, isThrowing, goBack, changeRodDirection]",{"range":"689","text":"690"},"Update the dependencies array to be: []",{"range":"691","text":"692"},"Update the dependencies array to be: [baitDistance, isReeling, baitOffset.x, baitOffset.y, lineLength, setBaitOffset, setRodAngle, scrollToBait, goBack]",{"range":"693","text":"694"},{"range":"695","text":"673"},"Update the dependencies array to be: [isReeling, reelingSE]",{"range":"696","text":"697"},"Update the dependencies array to be: [isEquipment, category, rodLevel._id, _id]",{"range":"698","text":"699"},{"range":"700","text":"666"},{"range":"701","text":"666"},{"range":"702","text":"666"},{"range":"703","text":"666"},{"range":"704","text":"666"},{"range":"705","text":"699"},"Update the dependencies array to be: [isEquipment, isEquipped, _id, category, baitFood, removeBait, handleUseBait, equipItem]",{"range":"706","text":"707"},"Update the dependencies array to be: [_id, category]",{"range":"708","text":"709"},"Update the dependencies array to be: [entries, currentEntryNum, setCurrentSection]",{"range":"710","text":"711"},"Update the dependencies array to be: [sellerPhrase.length, sellerPhraseSpelled]",{"range":"712","text":"713"},{"range":"714","text":"666"},{"range":"715","text":"666"},{"range":"716","text":"666"},"Update the dependencies array to be: [isInScope, hookedFish, giveUpBait, setGameProcess]",{"range":"717","text":"718"},"Update the dependencies array to be: [fishCoords, roamingDistance, fishWidth, area]",{"range":"719","text":"720"},"Update the dependencies array to be: [catchTimeLapse, approachBait, handleHookFail, giveUpBait, makeBaitAvailable]",{"range":"721","text":"722"},"Update the dependencies array to be: [wouldHookSuccessfully, canTryToCatch, isBaitAvailable, _id, groupID, setHookedFish, fish, makeBaitAvailable]",{"range":"723","text":"724"},"Update the dependencies array to be: [focusedItem, setSellerPhrase]",{"range":"725","text":"726"},"Update the dependencies array to be: [myDoubloons, sellableEntries, focusedItem, setSellerPhrase, sellItem, saleSE]",{"range":"727","text":"728"},"Update the dependencies array to be: [canSell, isConfirmingSale, saleAmount, _id, plural, setSellerPhrase]",{"range":"729","text":"730"},"Update the dependencies array to be: [canSell, isConfirmingSale, setSellerPhrase, saleAmount, plural, _id, sellItem, totalPrice, saleSE, amount, setFocusedItem]",{"range":"731","text":"732"},"Update the dependencies array to be: [setSellerPhrase]",{"range":"733","text":"734"},"Update the dependencies array to be: [onClose, transition]",{"range":"735","text":"736"},{"range":"737","text":"726"},"Update the dependencies array to be: [focusedItem, setSellerPhrase, myDoubloons, purchaseItem, purchaseSE, thankYouSE]",{"range":"738","text":"739"},"Update the dependencies array to be: [canBuy, isConfirmingPurchase, amount, _id, plural, setSellerPhrase]",{"range":"740","text":"741"},"Update the dependencies array to be: [canBuy, isConfirmingPurchase, setSellerPhrase, amount, plural, _id, purchaseItem, totalPrice, purchaseSE, thankYouSE]",{"range":"742","text":"743"},{"range":"744","text":"734"},"Update the dependencies array to be: [baitFood]",{"range":"745","text":"746"},"Update the dependencies array to be: [currentStatusSectionID, doubloons, gameTimeSpentFormatted, fishrodLevel._id, baitFood, baitColor, removeBait, setCurrentSection]",{"range":"747","text":"748"},[2822,2836],"[audioEnabled, creekBE]",[4633,4661],"[audioEnabled, backgroundMusic, isBGMEnabled]",[5057,5059],"[spendOneMinute]",[6354,6373],"[playerCoordinates.width, playerCoordinates.x, playerCoordinates.y, rodDimensions.height]",[7301,7357],"[map, baitCoordinates, rodDimensions]",[7652,7681],"[baitCoordinates.x, baitCoordinates.y, baitOffset.x, baitOffset.y, map.shorePath.to.y]",[8406,8441],"[lineOrigin.x, lineOrigin.y, baitOffset.x, baitOffset.y, rodOffset.x, rodOffset.y, rodAngle, rodDimensions.height]",[10898,10914],"[baitLakeCoords, updateGlobalPositionState]",[14239,14533],"[process, setProcess, playerCoordinates, scrollToPlayer, map, isBarometerVisible, scrollToBait, rodAngle, rodOffset, baitOffset, baitOffsetLimit, baitLakeCoords, baitDistance, rodLevel, lineLength]",[15405,15422],"[inventoryLength, map.shorePath.from.x, map.shorePath.from.y, map.shorePath.to.x, map.shorePath.to.y]",[2279,2320],"[nextStep, baitDistance, lineStepMatches.steps, lineStepMatches.subSteps]",[1360,1362],"[closeMenu]",[1723,1725],"[dispatch]",[1827,1829],[3237,3256],"[isPlayerMoving, map.width, playerCoordinates, scrollToPlayer, setPlayerCoordinates]",[3502,3504],"[scrollToPlayer, setBaitOffset, setBaitType, setRodAngle]",[3650,3652],"[isBarometerVisible, setIsBarometerVisible]",[3863,3905],"[isPlayerMoving, isMainMenuOpen, baitFood, setProcess]",[7522,7557],"[playerCoordinates, isMainMenuOpen, movePlayer, throwLine, shoreRef]",[3408,3410],"[setBaitOffset, setBaitType, setProcess, setRodAngle, setRodOffset]",[3604,3606],"[scrollToPlayer, setBaitOffset, setRodOffset]",[3706,3708],[4055,4067],"[isThrowing, setBaitOffset, setRodAngle, setRodOffset]",[8291,8369],"[isThrowing, hasThrown, rodLevel, baitOffset, baitOffsetLimit, baitLakeCoords, setIsBarometerVisible, setBaitOffset, scrollToBait, setBaitType, baitRef, lakeRef, setProcess]",[8894,8914],"[rodLevel.maxLength, setBaitOffset, rodAngle]",[15289,15427],"[isPreparingThrow, spaceFired, rodAngle, rodOffset, confirmThrow, isThrowing, goBack, changeRodDirection]",[18801,18824],"[]",[3552,3597],"[baitDistance, isReeling, baitOffset.x, baitOffset.y, lineLength, setBaitOffset, setRodAngle, scrollToBait, goBack]",[3769,3771],[4462,4473],"[isReeling, reelingSE]",[2171,2196],"[isEquipment, category, rodLevel._id, _id]",[3344,3346],[3447,3449],[3545,3547],[3631,3633],[3723,3725],[4201,4226],[7049,7111],"[isEquipment, isEquipped, _id, category, baitFood, removeBait, handleUseBait, equipItem]",[7696,7712],"[_id, category]",[12690,12716],"[entries, currentEntryNum, setCurrentSection]",[1946,1967],"[sellerPhrase.length, sellerPhraseSpelled]",[2955,2957],[3061,3063],[3179,3181],[6898,6933],"[isInScope, hookedFish, giveUpBait, setGameProcess]",[7788,7871],"[fishCoords, roamingDistance, fishWidth, area]",[10768,10889],"[catchTimeLapse, approachBait, handleHookFail, giveUpBait, makeBaitAvailable]",[13225,13294],"[wouldHookSuccessfully, canTryToCatch, isBaitAvailable, _id, groupID, setHookedFish, fish, makeBaitAvailable]",[2713,2726],"[focusedItem, setSellerPhrase]",[3609,3662],"[myDoubloons, sellableEntries, focusedItem, setSellerPhrase, sellItem, saleSE]",[6548,6600],"[canSell, isConfirmingSale, saleAmount, _id, plural, setSellerPhrase]",[7526,7744],"[canSell, isConfirmingSale, setSellerPhrase, saleAmount, plural, _id, sellItem, totalPrice, saleSE, amount, setFocusedItem]",[7903,7905],"[setSellerPhrase]",[754,763],"[onClose, transition]",[3077,3090],[3912,3952],"[focusedItem, setSellerPhrase, myDoubloons, purchaseItem, purchaseSE, thankYouSE]",[6971,7022],"[canBuy, isConfirmingPurchase, amount, _id, plural, setSellerPhrase]",[7940,8144],"[canBuy, isConfirmingPurchase, setSellerPhrase, amount, plural, _id, purchaseItem, totalPrice, purchaseSE, thankYouSE]",[8307,8309],[1611,1636],"[baitFood]",[4708,4884],"[currentStatusSectionID, doubloons, gameTimeSpentFormatted, fishrodLevel._id, baitFood, baitColor, removeBait, setCurrentSection]"]