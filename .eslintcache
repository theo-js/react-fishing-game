[{"C:\\www\\react-fishing-game\\src\\index.tsx":"1","C:\\www\\react-fishing-game\\src\\reportWebVitals.ts":"2","C:\\www\\react-fishing-game\\src\\App.tsx":"3","C:\\www\\react-fishing-game\\src\\store\\index.js":"4","C:\\www\\react-fishing-game\\src\\components\\Game\\index.tsx":"5","C:\\www\\react-fishing-game\\src\\interfaces\\game.ts":"6","C:\\www\\react-fishing-game\\src\\store\\actions\\types.ts":"7","C:\\www\\react-fishing-game\\src\\store\\actions\\inventory.ts":"8","C:\\www\\react-fishing-game\\src\\store\\actions\\game.ts":"9","C:\\www\\react-fishing-game\\src\\store\\actions\\position.ts":"10","C:\\www\\react-fishing-game\\src\\store\\selectors\\fishing.ts":"11","C:\\www\\react-fishing-game\\src\\store\\selectors\\game.ts":"12","C:\\www\\react-fishing-game\\src\\store\\selectors\\inventory.ts":"13","C:\\www\\react-fishing-game\\src\\utils\\math.ts":"14","C:\\www\\react-fishing-game\\src\\utils\\position.ts":"15","C:\\www\\react-fishing-game\\src\\store\\reducers\\index.ts":"16","C:\\www\\react-fishing-game\\src\\components\\Game\\MainMenu\\index.tsx":"17","C:\\www\\react-fishing-game\\src\\components\\Game\\Barometer\\index.tsx":"18","C:\\www\\react-fishing-game\\src\\components\\Game\\AudioPlayer\\index.tsx":"19","C:\\www\\react-fishing-game\\src\\components\\Game\\processes\\Initial\\index.tsx":"20","C:\\www\\react-fishing-game\\src\\components\\Game\\areas\\index.tsx":"21","C:\\www\\react-fishing-game\\src\\components\\Game\\processes\\ThrowLine\\index.tsx":"22","C:\\www\\react-fishing-game\\src\\components\\Game\\processes\\Battle\\index.tsx":"23","C:\\www\\react-fishing-game\\src\\components\\Game\\GameNotification\\index.tsx":"24","C:\\www\\react-fishing-game\\src\\components\\Game\\processes\\WaitFish\\index.tsx":"25","C:\\www\\react-fishing-game\\src\\store\\reducers\\position.ts":"26","C:\\www\\react-fishing-game\\src\\store\\reducers\\game.ts":"27","C:\\www\\react-fishing-game\\src\\store\\reducers\\inventory.ts":"28","C:\\www\\react-fishing-game\\src\\store\\reducers\\fishing.ts":"29","C:\\www\\react-fishing-game\\src\\utils\\throttle.ts":"30","C:\\www\\react-fishing-game\\src\\store\\actions\\fishing.ts":"31","C:\\www\\react-fishing-game\\src\\store\\selectors\\position.ts":"32","C:\\www\\react-fishing-game\\src\\components\\Game\\evolution\\index.ts":"33","C:\\www\\react-fishing-game\\src\\components\\Game\\animations\\index.ts":"34","C:\\www\\react-fishing-game\\src\\components\\Game\\MainMenu\\Shop\\index.tsx":"35","C:\\www\\react-fishing-game\\src\\components\\Game\\MainMenu\\Status\\index.tsx":"36","C:\\www\\react-fishing-game\\src\\components\\Game\\MainMenu\\Credits\\index.tsx":"37","C:\\www\\react-fishing-game\\src\\components\\Game\\Barometer\\TensionGauge\\index.tsx":"38","C:\\www\\react-fishing-game\\src\\components\\Game\\areas\\Beginner\\index.tsx":"39","C:\\www\\react-fishing-game\\src\\components\\Game\\areas\\Advanced\\index.tsx":"40","C:\\www\\react-fishing-game\\src\\components\\Game\\areas\\Expert\\index.tsx":"41","C:\\www\\react-fishing-game\\src\\components\\ProgressCircle\\index.tsx":"42","C:\\www\\react-fishing-game\\src\\components\\Game\\areas\\Starter\\index.tsx":"43","C:\\www\\react-fishing-game\\src\\components\\Game\\areas\\King\\index.tsx":"44","C:\\www\\react-fishing-game\\src\\components\\Game\\areas\\Intermediate\\index.tsx":"45","C:\\www\\react-fishing-game\\src\\components\\Game\\areas\\Abyss\\index.tsx":"46","C:\\www\\react-fishing-game\\src\\components\\Game\\MainMenu\\Inventory\\index.tsx":"47","C:\\www\\react-fishing-game\\src\\utils\\time.ts":"48","C:\\www\\react-fishing-game\\src\\components\\Game\\MainMenu\\Shop\\Sell\\index.tsx":"49","C:\\www\\react-fishing-game\\src\\components\\Game\\MainMenu\\Shop\\Buy\\index.tsx":"50","C:\\www\\react-fishing-game\\src\\components\\fishes\\Default\\index.tsx":"51","C:\\www\\react-fishing-game\\src\\components\\misc\\Modal\\index.tsx":"52","C:\\www\\react-fishing-game\\src\\components\\Game\\areas\\FishArea\\index.tsx":"53","C:\\www\\react-fishing-game\\src\\components\\Game\\areas\\FishGroup\\index.tsx":"54","C:\\www\\react-fishing-game\\src\\interfaces\\position.ts":"55","C:\\www\\react-fishing-game\\src\\hooks\\useLazyAudio\\index.ts":"56","C:\\www\\react-fishing-game\\src\\utils\\tests\\time.test.ts":"57","C:\\www\\react-fishing-game\\src\\utils\\tests\\position.test.ts":"58","C:\\www\\react-fishing-game\\src\\utils\\tests\\math.test.ts":"59","C:\\www\\react-fishing-game\\src\\setupTests.ts":"60","C:\\www\\react-fishing-game\\src\\react-app-env.d.ts":"61","C:\\www\\react-fishing-game\\src\\interfaces\\items.ts":"62","C:\\www\\react-fishing-game\\src\\interfaces\\fishes.ts":"63","C:\\www\\react-fishing-game\\src\\interfaces\\evolution.ts":"64"},{"size":517,"mtime":1627509175440,"results":"65","hashOfConfig":"66"},{"size":440,"mtime":1627509175451,"results":"67","hashOfConfig":"66"},{"size":302,"mtime":1627509174917,"results":"68","hashOfConfig":"66"},{"size":402,"mtime":1627509175464,"results":"69","hashOfConfig":"66"},{"size":22248,"mtime":1627835675350,"results":"70","hashOfConfig":"66"},{"size":511,"mtime":1627509175445,"results":"71","hashOfConfig":"66"},{"size":1278,"mtime":1627509175463,"results":"72","hashOfConfig":"66"},{"size":1551,"mtime":1627509175460,"results":"73","hashOfConfig":"66"},{"size":1078,"mtime":1627509175458,"results":"74","hashOfConfig":"66"},{"size":145,"mtime":1627509175461,"results":"75","hashOfConfig":"66"},{"size":1038,"mtime":1627509175473,"results":"76","hashOfConfig":"66"},{"size":1643,"mtime":1627509175474,"results":"77","hashOfConfig":"66"},{"size":1027,"mtime":1627509175475,"results":"78","hashOfConfig":"66"},{"size":532,"mtime":1627509175478,"results":"79","hashOfConfig":"66"},{"size":1677,"mtime":1627509175479,"results":"80","hashOfConfig":"66"},{"size":350,"mtime":1627509175468,"results":"81","hashOfConfig":"66"},{"size":4342,"mtime":1627509175345,"results":"82","hashOfConfig":"66"},{"size":4044,"mtime":1627509175215,"results":"83","hashOfConfig":"66"},{"size":2936,"mtime":1627734877707,"results":"84","hashOfConfig":"66"},{"size":8336,"mtime":1627509175407,"results":"85","hashOfConfig":"66"},{"size":2299,"mtime":1627509175386,"results":"86","hashOfConfig":"66"},{"size":19381,"mtime":1627834517157,"results":"87","hashOfConfig":"66"},{"size":14979,"mtime":1627843830428,"results":"88","hashOfConfig":"66"},{"size":6228,"mtime":1627837467505,"results":"89","hashOfConfig":"66"},{"size":8062,"mtime":1627836369511,"results":"90","hashOfConfig":"66"},{"size":820,"mtime":1627509175471,"results":"91","hashOfConfig":"66"},{"size":4135,"mtime":1627509175467,"results":"92","hashOfConfig":"66"},{"size":4422,"mtime":1627509175470,"results":"93","hashOfConfig":"66"},{"size":2235,"mtime":1627509175466,"results":"94","hashOfConfig":"66"},{"size":275,"mtime":1627509175485,"results":"95","hashOfConfig":"66"},{"size":3909,"mtime":1627509175457,"results":"96","hashOfConfig":"66"},{"size":558,"mtime":1627509175476,"results":"97","hashOfConfig":"66"},{"size":1507,"mtime":1627509175392,"results":"98","hashOfConfig":"66"},{"size":1914,"mtime":1627509175352,"results":"99","hashOfConfig":"66"},{"size":5055,"mtime":1627509175328,"results":"100","hashOfConfig":"66"},{"size":6011,"mtime":1627509175339,"results":"101","hashOfConfig":"66"},{"size":2098,"mtime":1627509175228,"results":"102","hashOfConfig":"66"},{"size":1958,"mtime":1627509175210,"results":"103","hashOfConfig":"66"},{"size":1317,"mtime":1627509175363,"results":"104","hashOfConfig":"66"},{"size":1319,"mtime":1627509175360,"results":"105","hashOfConfig":"66"},{"size":1315,"mtime":1627509175366,"results":"106","hashOfConfig":"66"},{"size":1497,"mtime":1627509175421,"results":"107","hashOfConfig":"66"},{"size":1303,"mtime":1627509175384,"results":"108","hashOfConfig":"66"},{"size":1317,"mtime":1627509175382,"results":"109","hashOfConfig":"66"},{"size":1327,"mtime":1627509175379,"results":"110","hashOfConfig":"66"},{"size":1318,"mtime":1627509175357,"results":"111","hashOfConfig":"66"},{"size":14308,"mtime":1627509175235,"results":"112","hashOfConfig":"66"},{"size":330,"mtime":1627509175487,"results":"113","hashOfConfig":"66"},{"size":10886,"mtime":1627839353390,"results":"114","hashOfConfig":"66"},{"size":12739,"mtime":1627837873134,"results":"115","hashOfConfig":"66"},{"size":20965,"mtime":1627509175427,"results":"116","hashOfConfig":"66"},{"size":1653,"mtime":1627509175438,"results":"117","hashOfConfig":"66"},{"size":1926,"mtime":1627509175370,"results":"118","hashOfConfig":"66"},{"size":2159,"mtime":1627509175377,"results":"119","hashOfConfig":"66"},{"size":395,"mtime":1627509175448,"results":"120","hashOfConfig":"66"},{"size":711,"mtime":1627839630541,"results":"121","hashOfConfig":"66"},{"size":603,"mtime":1627509175484,"results":"122","hashOfConfig":"66"},{"size":3873,"mtime":1627509175483,"results":"123","hashOfConfig":"66"},{"size":1138,"mtime":1627509175481,"results":"124","hashOfConfig":"66"},{"size":246,"mtime":1627509175453,"results":"125","hashOfConfig":"66"},{"size":39,"mtime":1627509175450,"results":"126","hashOfConfig":"66"},{"size":428,"mtime":1627509175447,"results":"127","hashOfConfig":"66"},{"size":910,"mtime":1627509175444,"results":"128","hashOfConfig":"66"},{"size":360,"mtime":1627509175443,"results":"129","hashOfConfig":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"j4rwdu",{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"142"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"142"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"142"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"142"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"142"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"142"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"142"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"142"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"238","messages":"239","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"240","messages":"241","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"142"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"142"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"142"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"142"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"258"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\www\\react-fishing-game\\src\\index.tsx",[],"C:\\www\\react-fishing-game\\src\\reportWebVitals.ts",[],"C:\\www\\react-fishing-game\\src\\App.tsx",[],"C:\\www\\react-fishing-game\\src\\store\\index.js",[],"C:\\www\\react-fishing-game\\src\\components\\Game\\index.tsx",["274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289"],"C:\\www\\react-fishing-game\\src\\interfaces\\game.ts",[],["290","291"],"C:\\www\\react-fishing-game\\src\\store\\actions\\types.ts",[],"C:\\www\\react-fishing-game\\src\\store\\actions\\inventory.ts",[],"C:\\www\\react-fishing-game\\src\\store\\actions\\game.ts",[],"C:\\www\\react-fishing-game\\src\\store\\actions\\position.ts",[],"C:\\www\\react-fishing-game\\src\\store\\selectors\\fishing.ts",[],"C:\\www\\react-fishing-game\\src\\store\\selectors\\game.ts",[],"C:\\www\\react-fishing-game\\src\\store\\selectors\\inventory.ts",[],"C:\\www\\react-fishing-game\\src\\utils\\math.ts",[],"C:\\www\\react-fishing-game\\src\\utils\\position.ts",[],"C:\\www\\react-fishing-game\\src\\store\\reducers\\index.ts",[],"C:\\www\\react-fishing-game\\src\\components\\Game\\MainMenu\\index.tsx",["292","293","294"],"import React, { useEffect, useState, useMemo } from 'react'\r\nimport Inventory from './Inventory'\r\nimport Status from './Status'\r\nimport Shop from './Shop'\r\nimport Credits from './Credits'\r\nimport styles from './index.module.sass'\r\nimport { CgInbox, BiStats, AiTwotoneShop, FaHandsHelping } from 'react-icons/all'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport { closeMainMenuAction } from '../../../store/actions/game'\r\nimport { isMainMenuClosingSelector } from '../../../store/selectors/game'\r\n\r\ninterface Props {\r\n    closeMenu?: () => void,\r\n    isMenuClosing?: boolean\r\n}\r\n\r\nexport enum SectionID {\r\n    INVENTORY = 'INVENTORY',\r\n    STATS = 'STATS',\r\n    SHOPPING = 'SHOPPING',\r\n    CREDITS = 'CREDITS'\r\n}\r\n\r\nexport const MainMenu: React.FC<Props> = ({ closeMenu, isMenuClosing }) => {\r\n    const [currentSection, setCurrentSection] = useState<SectionID>(SectionID.INVENTORY)\r\n\r\n    // Keyboard events\r\n    useEffect(() => {\r\n        function handleKeyPress(e: KeyboardEvent): void {\r\n            switch(e.keyCode) {\r\n                case 8: // Backspace\r\n                case 46: // Delete\r\n                    closeMenu()\r\n                    break\r\n            }\r\n        }\r\n\r\n        document.addEventListener('keypress', handleKeyPress, false)\r\n        return () => document.removeEventListener('keypress', handleKeyPress, false)\r\n    }, [])\r\n\r\n    const currentSectionJSX = useMemo(() => {\r\n        switch(currentSection) {\r\n            case SectionID.INVENTORY:\r\n                return <Inventory setCurrentSection={setCurrentSection} />\r\n                break\r\n            case SectionID.STATS:\r\n                return <Status setCurrentSection={setCurrentSection} />\r\n                break\r\n            case SectionID.CREDITS:\r\n                return <Credits />\r\n            default: return <Shop />\r\n        }\r\n    }, [currentSection])\r\n\r\n    return (\r\n        <div\r\n            className={`${styles.mainMenu} ${isMenuClosing ? styles.closing : ''}`}\r\n            onClick={closeMenu}\r\n        >\r\n            <main className={styles.menuContent} onClick={e => e.stopPropagation()}>\r\n                {currentSectionJSX}\r\n            </main>\r\n            <nav className={styles.menuNavigation}>\r\n                <ul>\r\n                    <li\r\n                        title=\"Inventory\"\r\n                        onClick={e => {e.stopPropagation(); setCurrentSection(SectionID.INVENTORY)}}\r\n                        className={`${currentSection === SectionID.INVENTORY ? styles.active : ''} ${styles.inventory}`}\r\n                    >\r\n                        <span className={styles.infoFacultative}>Inventory </span><CgInbox />\r\n                    </li>\r\n                    <li\r\n                        title=\"Status\"\r\n                        onClick={e => {e.stopPropagation(); setCurrentSection(SectionID.STATS)}}\r\n                        className={`${currentSection === SectionID.STATS ? styles.active : ''} ${styles.stats}`}\r\n                    >\r\n                        <span className={styles.infoFacultative}>Status </span><BiStats />\r\n                    </li>\r\n                    <li\r\n                        title=\"Shopping\"\r\n                        onClick={e => {e.stopPropagation(); setCurrentSection(SectionID.SHOPPING)}}\r\n                        className={`${currentSection === SectionID.SHOPPING ? styles.active : ''} ${styles.shopping}`}\r\n                    >\r\n                        <span className={styles.infoFacultative}>Shopping </span><AiTwotoneShop />\r\n                    </li>\r\n                    <li\r\n                        title=\"Credits\"\r\n                        onClick={e => {e.stopPropagation(); setCurrentSection(SectionID.CREDITS)}}\r\n                        className={`${currentSection === SectionID.CREDITS ? styles.active : ''} ${styles.credits}`}\r\n                    >\r\n                        <span className={styles.infoFacultative}>Credits </span><FaHandsHelping />\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\n// Connect to Redux\r\nconst mapStateToProps = state => ({\r\n    isMenuClosing: isMainMenuClosingSelector(state)\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n    closeMenu: () => dispatch(closeMainMenuAction())\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(MainMenu)","C:\\www\\react-fishing-game\\src\\components\\Game\\Barometer\\index.tsx",["295"],"import React, { useMemo } from 'react'\r\nimport TensionGauge from './TensionGauge'\r\nimport { pxToM } from '../../../utils/position'\r\nimport { FishRodLevel } from '../../../interfaces/evolution'\r\nimport gameProcesses from '../processes/index.json'\r\nimport styles from './index.module.sass'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport { processSelector } from '../../../store/selectors/game'\r\n\r\ninterface Props {\r\n    rodLevel: FishRodLevel,\r\n    baitDistance: number,\r\n    // Redux\r\n    gameProcess?: string\r\n}\r\n\r\ninterface StepMatch {\r\n    steps: number[],\r\n    subSteps: number[]\r\n}\r\n\r\nexport const Barometer: React.FC<Props> = ({\r\n    rodLevel,\r\n    baitDistance,\r\n    // Redux\r\n    gameProcess\r\n}) => {\r\n    const maxLength = useMemo((): number => pxToM(rodLevel.maxLength), [rodLevel])\r\n    const lineStepLength = useMemo((): number => 10, [])\r\n    const lineSteps = useMemo((): number => Math.ceil(maxLength/lineStepLength), [maxLength, lineStepLength])\r\n    const lineStepMatches = useMemo((): StepMatch => {\r\n        let matches = { steps: [], subSteps: [] }\r\n        for(let i = 0; i < (lineSteps+1)*2 - 1; i++) {\r\n            if (i%2 === 0) {\r\n                matches.steps.push(i*lineStepLength/2)\r\n            } else {\r\n                matches.subSteps.push(i*lineStepLength/2)\r\n            }\r\n        }\r\n        return matches\r\n    }, [lineSteps, lineStepLength])\r\n    const nextStep = useMemo((): number => {\r\n        return lineSteps*lineStepLength\r\n    }, [lineSteps, lineStepLength])\r\n    const lineStepsJSX = useMemo(() => {\r\n        let JSX = []\r\n        // How much times step length in maxLength\r\n        for (let i = 0; i <= nextStep; i++) {\r\n            const isReached = baitDistance >= i ? styles.reached : ''\r\n            if (lineStepMatches.steps.includes(i)) {\r\n                // Step\r\n                JSX.push(<div key={i} className={`${styles.step} ${isReached} ${i === 0 ? styles.origin : ''}`}>\r\n                    <span><strong>{i}</strong></span>\r\n                </div>)\r\n            } else if (lineStepMatches.subSteps.includes(i)) {\r\n                // Substep\r\n                JSX.push(<div key={i} className={`${styles.subStep} ${isReached}`}></div>)\r\n            } else continue\r\n        }\r\n        return JSX\r\n    }, [lineSteps, lineStepLength, baitDistance])\r\n    const linePercentage = useMemo((): number => baitDistance/maxLength*100, [baitDistance, maxLength])\r\n\r\n    return <div className={`${styles.barometer} ${rodLevel.className}`}>\r\n        <nav>\r\n            <div className={styles.handle}></div>\r\n            <div className={styles.tip}>\r\n                <div className={styles.lineLengthScale}>\r\n                    <div\r\n                        className={styles.lengthLimit}\r\n                        style={{ width: `${maxLength/nextStep*100}%` }}\r\n                    >\r\n                        <meter\r\n                            className={styles.lineLength}\r\n                            min={0}\r\n                            max={maxLength}\r\n                            value={baitDistance}\r\n                            high={maxLength*3/4}\r\n                            low={maxLength/4}\r\n                            optimum={maxLength}\r\n                        >\r\n                        </meter>\r\n                        <label style={{ width: `${linePercentage}%` }}>\r\n                            <span className={styles.tooltip}>\r\n                                <span><strong>{baitDistance}</strong>m</span>\r\n                            </span>\r\n                        </label>\r\n                    </div>\r\n                    {lineStepsJSX}\r\n                </div>\r\n                {gameProcess === gameProcesses.BATTLE && (\r\n                    // Line tension gauge\r\n                    <TensionGauge />\r\n                )}\r\n            </div>\r\n        </nav>\r\n    </div>\r\n}\r\n\r\n// Redux connection\r\nconst mapStateToProps = state => ({\r\n    gameProcess: processSelector(state)\r\n})\r\nexport default connect(\r\n    mapStateToProps,\r\n    dispatch => ({})\r\n)(Barometer)","C:\\www\\react-fishing-game\\src\\components\\Game\\AudioPlayer\\index.tsx",[],"C:\\www\\react-fishing-game\\src\\components\\Game\\processes\\Initial\\index.tsx",["296","297","298","299","300","301","302","303"],"import React, { Dispatch, SetStateAction, useCallback, useRef, useEffect, useLayoutEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport gameProcesses from '../index.json'\r\nimport { Coordinates, Map } from '../../../../interfaces/position'\r\nimport throttle from '../../../../utils/throttle'\r\nimport { FaFish, IoClose, GiLightBackpack } from 'react-icons/all'\r\nimport styles from './index.module.sass'\r\n\r\n// Redux\r\nimport { isMainMenuOpenSelector, isMainMenuClosingSelector } from '../../../../store/selectors/game'\r\nimport { baitFoodSelector } from '../../../../store/selectors/fishing'\r\nimport { openMainMenuAction, closeMainMenuAction } from '../../../../store/actions/game'\r\n\r\ninterface Props {\r\n    setProcess: Dispatch<SetStateAction<string>>,\r\n    playerCoordinates: Coordinates,\r\n    setPlayerCoordinates: Dispatch<SetStateAction<Coordinates>>,\r\n    scrollToPlayer: (behavior?: 'smooth' | 'auto' | undefined) => void,\r\n    shoreRef: any,\r\n    map: Map,\r\n    setIsBarometerVisible: Dispatch<SetStateAction<boolean>>,\r\n    isBarometerVisible: boolean,\r\n    setBaitOffset: Dispatch<SetStateAction<Coordinates>>,\r\n    setRodAngle: Dispatch<SetStateAction<number>>,\r\n    setBaitType: Dispatch<SetStateAction<string>>\r\n}\r\n\r\nenum Direction {\r\n    LEFT = 'LEFT',\r\n    RIGHT = \"RIGHT\"\r\n}\r\n\r\nexport default (({\r\n    setProcess,\r\n    playerCoordinates,\r\n    setPlayerCoordinates,\r\n    scrollToPlayer,\r\n    shoreRef,\r\n    map,\r\n    isBarometerVisible,\r\n    setIsBarometerVisible,\r\n    setBaitOffset,\r\n    setRodAngle,\r\n    setBaitType\r\n}) => {\r\n    // REDUX\r\n    const dispatch = useDispatch()\r\n    const openMainMenu = useCallback(\r\n        (): void => dispatch(openMainMenuAction()), []\r\n    )\r\n    const closeMainMenu = useCallback(\r\n        (): void => dispatch(closeMainMenuAction()), []\r\n    )\r\n    const isMainMenuOpen = useSelector(isMainMenuOpenSelector)\r\n    const isMainMenuClosing = useSelector(isMainMenuClosingSelector)\r\n    const baitFood = useSelector(baitFoodSelector)\r\n\r\n    // STATE\r\n    const [isPlayerMoving, setIsPlayerMoving] = useState<boolean>(false)\r\n    const lastTouchX = useRef<number>(null)\r\n\r\n    const movePlayer = useCallback(\r\n        (direction: Direction, value: number): void => {\r\n            // Set isPlayerMoving if it's not already\r\n            if (!isPlayerMoving)setIsPlayerMoving(true)\r\n\r\n            if (direction === Direction.LEFT) {\r\n                // Prevent player from leaving map, left side\r\n                if (playerCoordinates.x - value < 0) {\r\n                    return setPlayerCoordinates({ ...playerCoordinates, x: 0 })\r\n                }\r\n                setPlayerCoordinates({ ...playerCoordinates, x: playerCoordinates.x - value })\r\n            } else if (direction === Direction.RIGHT) {\r\n                // Prevent player from leaving map, right side\r\n                if (map.width - playerCoordinates.x < value + playerCoordinates.width) {\r\n                    return setPlayerCoordinates({ ...playerCoordinates, x: map.width - playerCoordinates.width })\r\n                }\r\n                setPlayerCoordinates({ ...playerCoordinates, x: playerCoordinates.x + value })\r\n            }\r\n            scrollToPlayer('auto')\r\n        }, [playerCoordinates]\r\n    )\r\n\r\n    // Initialize scroll position at player's position and bait at 0,0\r\n    useLayoutEffect(() => {\r\n        scrollToPlayer('auto')\r\n        setBaitOffset({ x: 0, y: -20, transition: '.2 all ease' })\r\n        setRodAngle(0)\r\n        setBaitType('default')\r\n    }, [])\r\n\r\n    // Hide barometer\r\n    useEffect(() => {\r\n        if (isBarometerVisible) {\r\n            setIsBarometerVisible(false)\r\n        }\r\n    }, [])\r\n\r\n    const throwLine = useCallback(\r\n        (): void => {\r\n            if (!isPlayerMoving && !isMainMenuOpen && baitFood) {\r\n                setProcess(gameProcesses.THROW_LINE)\r\n            }\r\n        }, [isPlayerMoving, isMainMenuOpen, baitFood]\r\n    )\r\n\r\n    // Attach event listeners\r\n    useEffect(() => {\r\n        function handleKeyDown (e: KeyboardEvent): void {\r\n            const { keyCode } = e\r\n            switch (keyCode) {\r\n                case 37: // Left\r\n                    e.preventDefault()\r\n                    movePlayer(Direction.LEFT, 40)\r\n                    break\r\n                case 38: // Top\r\n                    e.preventDefault()\r\n                    break\r\n                case 39: // Right\r\n                    e.preventDefault()\r\n                    movePlayer(Direction.RIGHT, 40)\r\n                    break\r\n                case 40: // Bottom\r\n                    e.preventDefault()\r\n                    break\r\n                case 32: // Space\r\n                case 13: // Enter\r\n                    e.preventDefault()\r\n                    throwLine()\r\n                    break\r\n            }\r\n        }\r\n        const handleKeyDownThrottle = throttle(handleKeyDown, 100)\r\n        function preventVerticalScroll (e: KeyboardEvent): void {\r\n            const { keyCode } = e\r\n            switch (keyCode) {\r\n                case 38: // Top\r\n                    e.preventDefault()\r\n                    break\r\n                case 40: // Bottom\r\n                    e.preventDefault()\r\n                    break\r\n            }\r\n        }\r\n        function handleKeyUp (e: KeyboardEvent): void {\r\n            setIsPlayerMoving(false)\r\n        }\r\n        function handleClick (e: any): void {\r\n            const { layerX } = e\r\n            const difference = layerX - playerCoordinates.x\r\n            movePlayer(difference >= 0 ? Direction.RIGHT : Direction.LEFT, Math.abs(difference))\r\n            setIsPlayerMoving(false)\r\n        }\r\n        function handleTouchMove (e: TouchEvent) {\r\n            const currentTouchX = e.touches[0].clientX\r\n            if (lastTouchX.current !== null) {\r\n                if (currentTouchX < lastTouchX.current) {\r\n                    // Swipe left\r\n                    movePlayer(Direction.RIGHT, 20)\r\n                } else if (currentTouchX > lastTouchX.current) {\r\n                    // Swipe right\r\n                    movePlayer(Direction.LEFT, 20)\r\n                }\r\n            }\r\n            lastTouchX.current = currentTouchX\r\n        }\r\n        const handleTouchMoveThrottle = throttle(handleTouchMove, 100)\r\n        function handleTouchEnd (e: TouchEvent) {\r\n            setIsPlayerMoving(false)\r\n        }\r\n\r\n        if (!isMainMenuOpen) {\r\n            document.addEventListener('keydown', handleKeyDownThrottle, false)\r\n            document.addEventListener('keydown', preventVerticalScroll, true)\r\n            document.addEventListener('keyup', handleKeyUp, false)\r\n            if (shoreRef && shoreRef.current) {\r\n                shoreRef.current.addEventListener('click', handleClick, false)\r\n            }\r\n            document.addEventListener('touchmove', handleTouchMoveThrottle, false)\r\n            document.addEventListener('touchend', handleTouchEnd, false)\r\n        }\r\n\r\n        return (): void => {\r\n            document.removeEventListener('keydown', handleKeyDownThrottle, false)\r\n            document.removeEventListener('keydown', preventVerticalScroll, true)\r\n            document.removeEventListener('keyup', handleKeyUp, false)\r\n            if (shoreRef && shoreRef.current) {\r\n                shoreRef.current.removeEventListener('click', handleClick, false)\r\n            }\r\n            document.removeEventListener('touchmove', handleTouchMoveThrottle, false)\r\n            document.removeEventListener('touchend', handleTouchEnd, false)\r\n        }\r\n    }, [playerCoordinates, isMainMenuOpen])\r\n\r\n    if (!isPlayerMoving) {\r\n        return <nav className={`menu ${styles.navigation} ${isMainMenuOpen && !isMainMenuClosing ? styles.open : ''}`}>\r\n            <button\r\n                className={`btn ${styles.openMainMenuBTN}`}\r\n                onClick={isMainMenuOpen ? closeMainMenu : openMainMenu}\r\n            >\r\n                {isMainMenuOpen ? <IoClose /> : <GiLightBackpack />}\r\n            </button>\r\n            {baitFood && (\r\n                <button \r\n                    className={`btn btn-primary ${styles.fishBTN}`}\r\n                    onClick={throwLine}\r\n                >\r\n                    Fish here ? <FaFish />\r\n                </button>\r\n            )}\r\n        </nav>\r\n    }\r\n\r\n    return null\r\n}) as React.FC<Props>","C:\\www\\react-fishing-game\\src\\components\\Game\\areas\\index.tsx",[],"C:\\www\\react-fishing-game\\src\\components\\Game\\processes\\ThrowLine\\index.tsx",["304","305","306","307","308","309","310","311","312","313","314"],"C:\\www\\react-fishing-game\\src\\components\\Game\\processes\\Battle\\index.tsx",["315","316","317","318","319","320","321"],"import React, { Dispatch, SetStateAction, useRef, useEffect, useState, useCallback, useMemo } from 'react'\r\nimport gameProcesses from '../index.json'\r\nimport { FishData, UniqueFish } from '../../../../interfaces/fishes'\r\nimport { FishRodLevel } from '../../../../interfaces/evolution'\r\nimport { Coordinates } from '../../../../interfaces/position'\r\nimport { probability } from '../../../../utils/math'\r\nimport useLazyAudio from '../../../../hooks/useLazyAudio'\r\nimport { BsArrowRepeat } from 'react-icons/bs'\r\nimport styles from './index.module.sass'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport {\r\n    hookedFishSelector,\r\n    lineTensionSelector,\r\n    isPullingSelector\r\n} from '../../../../store/selectors/fishing'\r\nimport { rodLevelSelector } from '../../../../store/selectors/game'\r\nimport {\r\n    setHookedFishAction,\r\n    setLineTensionAction,\r\n    incrementLineTensionAction,\r\n    decrementLineTensionAction,\r\n    setIsPullingAction,\r\n    catchNewFishAction\r\n} from '../../../../store/actions/fishing'\r\nimport { setGameProcessAction } from '../../../../store/actions/game'\r\n\r\ninterface Props {\r\n    baitDistance: number,\r\n    baitOffset: Coordinates,\r\n    setBaitOffset: Dispatch<SetStateAction<Coordinates>>,\r\n    lineLength: number,\r\n    scrollToBait: () => void,\r\n    setRodAngle: Dispatch<SetStateAction<number>>,\r\n    // Redux\r\n    hookedFish?: FishData,\r\n    setHookedFish?: Dispatch<SetStateAction<FishData>>,\r\n    lineTension?: number,\r\n    isFishPulling?: boolean,\r\n    setLineTension?: Dispatch<SetStateAction<number>>,\r\n    incrementLineTension?: Dispatch<SetStateAction<number>>,\r\n    decrementLineTension?: Dispatch<SetStateAction<number>>,\r\n    setIsFishPulling?: Dispatch<SetStateAction<boolean>>,\r\n    fishRodLevel?: FishRodLevel,\r\n    setGameProcess?: Dispatch<SetStateAction<string>>,\r\n    catchNewFish?: Dispatch<SetStateAction<UniqueFish>>\r\n}\r\n\r\n\r\nconst BattleProcess: React.FC<Props> = ({\r\n    baitDistance,\r\n    baitOffset,\r\n    setBaitOffset,\r\n    lineLength,\r\n    scrollToBait,\r\n    setRodAngle,\r\n    // Redux\r\n    hookedFish,\r\n    setHookedFish,\r\n    lineTension,\r\n    isFishPulling,\r\n    setLineTension,\r\n    incrementLineTension,\r\n    decrementLineTension,\r\n    setIsFishPulling,\r\n    fishRodLevel,\r\n    setGameProcess,\r\n    catchNewFish\r\n}) => {\r\n    // Audio\r\n    const reelingSE = useLazyAudio({ src: 'se/reeling.mp3'})\r\n\r\n    // State\r\n    const [isPlayerReeling, setIsPlayerReeling] = useState<boolean>(false)\r\n\r\n    /*\r\n        Map state to refs to be able to access current values\r\n        from asynchronous functions\r\n    */\r\n    const lineTensionRef = useRef<number>(lineTension)\r\n    useEffect(() => {\r\n        lineTensionRef.current = lineTension\r\n    }, [lineTension])\r\n    const isFishPullingRef = useRef<boolean>(isFishPulling)\r\n    useEffect(() => {\r\n        isFishPullingRef.current = isFishPulling\r\n    }, [isFishPulling])\r\n    const isPlayerReelingRef = useRef<boolean>(isPlayerReeling)\r\n    useEffect(() => {\r\n        isPlayerReelingRef.current = isPlayerReeling\r\n    }, [isPlayerReeling])\r\n\r\n    // COMPUTED\r\n    // The stronger the fish, the smaller the ratio\r\n    const strengthRatio = useMemo((): number => fishRodLevel.strength / hookedFish.fish.strength, [fishRodLevel, hookedFish])\r\n\r\n    // Slowly recover line tension when player is not reeling in\r\n    const recoverTensionIntervalRef = useRef<number|null>(null)\r\n    let recoverTensionValue = useMemo((): number => {\r\n        // Recover slower when tension is negative\r\n        if (lineTension <= 0) {\r\n            if (strengthRatio >= 1) {\r\n                // Player is stronger than fish\r\n                return strengthRatio  * 3/4\r\n            } else {\r\n                // Fish is stronger than player\r\n                return strengthRatio\r\n            }\r\n        }\r\n        else {\r\n            if (strengthRatio >= 1) {\r\n                // Player is stronger than fish\r\n                return strengthRatio**2\r\n            } else {\r\n                // Fish is stronger than player\r\n                return strengthRatio*2\r\n            }\r\n        }\r\n    }, [lineTension, strengthRatio])\r\n    useEffect(() => {\r\n        const willRecover = () => {\r\n            // Only set interval once\r\n            if (recoverTensionIntervalRef.current !== null) return false\r\n            // Don't get looser than -100\r\n            else if (lineTension <= -100) {\r\n                setLineTension(-100)\r\n                return false\r\n            }\r\n            // Don't recover when player is reeling\r\n            else if (isPlayerReelingRef.current) return false\r\n\r\n            // When fish is pulling\r\n            else if (isFishPullingRef.current) {\r\n                // If fish is stronger\r\n                if (strengthRatio < 1) {\r\n                    // Slow down recovery (will slow down more if fish is a lot stronger)\r\n                    recoverTensionValue *= strengthRatio\r\n                // If fish is weaker or as strong as player\r\n                } else {\r\n                    // Slow down recovery (will slow down more if player is not so much stronger)\r\n                    recoverTensionValue *= (1 - (1/strengthRatio))\r\n                }\r\n                // Tension cannot go straight from positive to negative, has to be 0 first\r\n                if (lineTensionRef.current > 0 && lineTensionRef.current - recoverTensionValue < 0) {\r\n                    recoverTensionValue = lineTensionRef.current\r\n                }\r\n\r\n                return true\r\n            }\r\n            \r\n            else return true \r\n        }\r\n        if (willRecover()) {\r\n            recoverTensionIntervalRef.current = window.setInterval(() => {\r\n                decrementLineTension(recoverTensionValue)\r\n            }, 100)\r\n        } else {\r\n            window.clearInterval(recoverTensionIntervalRef.current)\r\n            recoverTensionIntervalRef.current = null\r\n        }\r\n\r\n        return () => {\r\n            window.clearInterval(recoverTensionIntervalRef.current)\r\n            recoverTensionIntervalRef.current = null\r\n        }\r\n    }, [\r\n        lineTension,\r\n        isPlayerReeling,\r\n        isFishPulling,\r\n        recoverTensionValue,\r\n        strengthRatio\r\n    ])\r\n\r\n    // Reel in line with fish\r\n    const move = useCallback(\r\n        (moveDistance: number) => {\r\n            if (moveDistance > 0) {\r\n                // Get closer to the shore\r\n                // Find out angle\r\n                const angleRadians: number = Math.atan(baitOffset.x/baitOffset.y)\r\n                const angleDegrees: number = angleRadians*180/Math.PI\r\n                // Find out next offset coords from angle and hypotenuse\r\n                const hypotenuse: number = lineLength - moveDistance\r\n                const opposite: number = Math.sin(angleRadians) * hypotenuse\r\n                const adjacent: number = Math.cos(angleRadians) * hypotenuse\r\n                // Apply translation and lean fishrod towards target\r\n                setBaitOffset({ x: opposite, y: adjacent })\r\n                setRodAngle(-angleDegrees)\r\n                // Scroll to new position\r\n                scrollToBait()\r\n            } else {\r\n                // Go away from the shore\r\n            }\r\n        }, [baitOffset, setBaitOffset, lineLength]\r\n    )\r\n\r\n    // Handle reeling and fish pulling interactions\r\n    useEffect(() => {\r\n        console.log('inside useffect')\r\n        // Find out where the bait will move and how it affects line tension\r\n        let intervalID = null\r\n        const step = 10 // move length const in pixels\r\n        const intervalDuration = 100 // move duration const in mls\r\n        let inertia = strengthRatio\r\n        let moveDistance = 0 // Actual distance that the bait will travel; if negative, bait moves away\r\n        let addedTension = 0 // Line tension that will be added during this interval\r\n\r\n        if (isPlayerReelingRef.current) {\r\n            // Player is reeling in\r\n            if (isFishPullingRef.current) {\r\n                // Fish is pulling on line\r\n                moveDistance = step * inertia * (3/4 + (1/4* fishRodLevel.resistance/100))\r\n                addedTension = (1/inertia)**2\r\n            } else {\r\n                // Fish is not pulling on line\r\n                moveDistance = step * inertia \r\n                addedTension = (1/inertia)*2\r\n            }\r\n        } else {\r\n            // Player is not reeling in\r\n            addedTension = 0 // Tension won't increase\r\n            if (isFishPullingRef.current) {\r\n                // Fish is pulling on line\r\n                moveDistance = - Math.abs(\r\n                    step * 1/inertia\r\n                )\r\n            } else {\r\n                // Fish is not pulling\r\n                moveDistance = 0\r\n            }\r\n        }\r\n\r\n        if (!isPlayerReelingRef.current && !isFishPullingRef.current) {\r\n            // Player is not reeling in and fish not pulling on line\r\n            if (intervalID !== null) {\r\n                window.clearInterval(intervalID)\r\n                intervalID = null\r\n            }\r\n        }  else {\r\n            // Apply new distance and tension periodically\r\n            intervalID = window.setInterval(() => {\r\n                console.log(addedTension)\r\n                if (addedTension > 0) incrementLineTension(addedTension)\r\n                if (moveDistance > 0 || moveDistance < 0) move(moveDistance)\r\n            }, intervalDuration)\r\n        }\r\n\r\n        return () => {\r\n            window.clearInterval(intervalID)\r\n            intervalID = null\r\n        }\r\n    }, [isFishPulling, isPlayerReeling, strengthRatio, fishRodLevel, move])\r\n    // Handle reeling alone\r\n    useEffect(() => {\r\n        // Play reeling sound effect\r\n        if (isPlayerReeling) {\r\n            reelingSE.play()\r\n        } else {\r\n            reelingSE.pause()\r\n        }\r\n    }, [isPlayerReeling])\r\n\r\n    // Success if player managed to reel in the fish to the shore\r\n    useEffect(() => {\r\n        if (baitDistance <= 0) {\r\n            catchNewFish(hookedFish.fish)\r\n            goBack()\r\n            setGameProcess(gameProcesses.INITIAL)            \r\n        }\r\n    }, [baitDistance])\r\n\r\n    // Cancel catching fish and keep bait\r\n    const goBack = useCallback(\r\n        (): void => {\r\n            setLineTension(0)\r\n            setGameProcess(gameProcesses.THROW_LINE)\r\n            setHookedFish(null)\r\n            reelingSE.pause()\r\n        }, []\r\n    )\r\n\r\n    // Decide whether fish is pulling\r\n    useEffect(() => {\r\n        const pullIntervalID = window.setInterval(() => {\r\n            const willPull = probability(hookedFish.fish.pullChance)\r\n            if (willPull) setIsFishPulling(true)\r\n            else setIsFishPulling(false)\r\n        }, hookedFish.fish.roamingInterval)\r\n\r\n        return () => window.clearInterval(pullIntervalID)\r\n    }, [])\r\n\r\n    // Player controls\r\n    // Cancel event\r\n    useEffect(() => {\r\n        function handleBackSpace (e: KeyboardEvent): void {\r\n            switch(e.keyCode) {\r\n                case 8: // Backspace\r\n                case 46: // Delete\r\n                case 48: // 0\r\n                    e.preventDefault()\r\n                    goBack()\r\n                    break\r\n            }\r\n        }\r\n        document.addEventListener('keydown', handleBackSpace, true)\r\n        return () => document.removeEventListener('keydown', handleBackSpace, true)\r\n    }, [goBack])\r\n    // Space/Enter keys\r\n    useEffect(() => {\r\n        function handleSpaceDown (e: KeyboardEvent): void {\r\n            switch(e.keyCode) {\r\n                case 32: // Space\r\n                case 13: // Enter\r\n                    e.preventDefault()\r\n                    if (!isPlayerReelingRef.current) {\r\n                        setIsPlayerReeling(true)\r\n                    }\r\n                    break\r\n            }\r\n        }\r\n        function handleSpaceUp (e: KeyboardEvent): void {\r\n            switch (e.keyCode) {\r\n                case 32: // Space\r\n                case 13: // Enter\r\n                    // Stop reeling\r\n                    if (isPlayerReelingRef.current) {\r\n                        setIsPlayerReeling(false)\r\n                    }\r\n                    break\r\n            }\r\n        } \r\n        \r\n        document.addEventListener('keydown', handleSpaceDown, true)\r\n        document.addEventListener('keyup', handleSpaceUp, false)\r\n        return () => {\r\n            document.removeEventListener('keydown', handleSpaceDown, true)\r\n            document.removeEventListener('keyup', handleSpaceUp, false)\r\n        }\r\n    }, [])\r\n    // Mousedown/up\r\n    useEffect(() => {\r\n        function handleMouseDown (e: MouseEvent): void {\r\n            setIsPlayerReeling(true)\r\n        }\r\n        function handleMouseUp (e: MouseEvent) : void {\r\n            setIsPlayerReeling(false)\r\n        }\r\n        document.body.addEventListener('mousedown', handleMouseDown, false)\r\n        document.body.addEventListener('mouseup', handleMouseUp, false)\r\n        document.body.addEventListener('touchstart', handleMouseDown, false)\r\n        document.body.addEventListener('touchend', handleMouseUp, false)\r\n\r\n        return () => {\r\n            document.body.removeEventListener('mousedown', handleMouseDown, false)\r\n            document.body.removeEventListener('mouseup', handleMouseUp, false)\r\n            document.body.removeEventListener('touchstart', handleMouseDown, false)\r\n            document.body.removeEventListener('touchend', handleMouseUp, false)\r\n        }\r\n    }, [])\r\n\r\n    return <div>\r\n        <button onClick={() => setLineTension(lineTension - 10)} style={{position: 'fixed', top: '3rem', left: '1rem' }}>-</button>\r\n        <button onClick={() => setLineTension(lineTension + 10)} style={{position: 'fixed', top: '3rem', left: '2rem' }}>+</button>\r\n        <nav className={styles.navigation}>\r\n        <button\r\n            className={`btn btn-cancel ${styles.repeatBTN}`}\r\n            onClick={goBack}\r\n        >\r\n            <BsArrowRepeat />\r\n        </button>\r\n    </nav>\r\n    </div>\r\n}\r\n\r\n\r\n// Connect to Redux\r\nconst mapStateToProps = state => ({\r\n    hookedFish: hookedFishSelector(state),\r\n    lineTension: lineTensionSelector(state),\r\n    isFishPulling: isPullingSelector(state),\r\n    fishRodLevel: rodLevelSelector(state)\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n    setHookedFish: (hookedFish: FishData) => dispatch(setHookedFishAction(hookedFish)),\r\n    setLineTension: (newTension: number) => dispatch(setLineTensionAction(newTension)),\r\n    incrementLineTension: (step: number) => dispatch(incrementLineTensionAction(step)),\r\n    decrementLineTension: (step: number) => dispatch(decrementLineTensionAction(step)),\r\n    setIsFishPulling: (isPulling: boolean) => dispatch(setIsPullingAction(isPulling)),\r\n    setGameProcess: (nextProcess: string) => dispatch(setGameProcessAction(nextProcess)),\r\n    catchNewFish: (fish: UniqueFish) => dispatch(catchNewFishAction(fish))\r\n})\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(BattleProcess)","C:\\www\\react-fishing-game\\src\\components\\Game\\GameNotification\\index.tsx",["322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338"],"C:\\www\\react-fishing-game\\src\\components\\Game\\processes\\WaitFish\\index.tsx",["339","340","341","342","343"],"C:\\www\\react-fishing-game\\src\\store\\reducers\\position.ts",["344","345"],"C:\\www\\react-fishing-game\\src\\store\\reducers\\game.ts",["346","347","348","349","350","351","352","353","354"],"C:\\www\\react-fishing-game\\src\\store\\reducers\\inventory.ts",["355","356","357","358","359"],"C:\\www\\react-fishing-game\\src\\store\\reducers\\fishing.ts",["360","361","362","363","364","365","366","367"],"C:\\www\\react-fishing-game\\src\\utils\\throttle.ts",[],"C:\\www\\react-fishing-game\\src\\store\\actions\\fishing.ts",[],"C:\\www\\react-fishing-game\\src\\store\\selectors\\position.ts",[],"C:\\www\\react-fishing-game\\src\\components\\Game\\evolution\\index.ts",[],"C:\\www\\react-fishing-game\\src\\components\\Game\\animations\\index.ts",[],"C:\\www\\react-fishing-game\\src\\components\\Game\\MainMenu\\Shop\\index.tsx",["368","369","370","371","372"],"import React, { ReactNode, useState, useMemo, useEffect, useRef } from 'react'\r\nimport Buy from './Buy'\r\nimport Sell from './Sell'\r\nimport { randomIntFromInterval } from '../../../../utils/math'\r\nimport { GiPirateCaptain } from 'react-icons/all'\r\nimport styles from './index.module.sass'\r\n\r\n// Redux\r\nimport { useSelector } from 'react-redux'\r\nimport { inventoryLengthSelector } from '../../../../store/selectors/inventory'\r\n\r\nexport enum ContentID {\r\n    ROOT = 'ROOT',\r\n    BUY = 'BUY',\r\n    SELL = 'SELL'\r\n}\r\n\r\n// Seller comments\r\nexport const greetings: string[] = [\r\n    'Ahoy, Matey ! What brings you here ?',\r\n    'The better your fish rod, the bigger fishes you\\'ll catch ! How convenient that I\\'m selling some',\r\n    'Do you have some fish for me ?'\r\n]\r\nexport const thanks: string[] = [\r\n    'Thank ya !',\r\n    'It\\'s a pleasure doing business with ye',\r\n    'Don\\'t ya lose it, mate !'\r\n]\r\nexport const randomGreeting = (): string => greetings[randomIntFromInterval(0, greetings.length - 1)]\r\nexport const randomThanks = (): string => thanks[randomIntFromInterval(0, thanks.length - 1)]\r\n\r\n\r\nconst Shop: React.FC = () => {\r\n    // REDUX\r\n    const inventoryLength = useSelector(inventoryLengthSelector)\r\n\r\n    // STATE\r\n    const [currentContentID, setCurrentContentID] = useState<ContentID>(ContentID.ROOT)\r\n\r\n    // Seller comments\r\n    const [sellerPhrase, setSellerPhrase] = useState<string>(randomGreeting())\r\n    const [sellerPhraseSpelled, setSellerPhraseSpelled] = useState<string>('')\r\n    const sellerPhraseSpelledJSX = useMemo((): ReactNode[] => {\r\n        return sellerPhraseSpelled.split('').map((letter: string, index: number) => (\r\n            <span\r\n                key={index}\r\n                className={styles.letter}\r\n                style={{ filter: index >= sellerPhraseSpelled.length - 5 ? `hue-rotate(${index*360/sellerPhrase.length}deg)` : 'hue-rotate(0)' }}\r\n            >{letter}</span>\r\n        ))\r\n    }, [sellerPhraseSpelled])\r\n    // Spell seller's text letter by letter\r\n    const spellingIntervalID = useRef<number>(null)\r\n    const lastSellerPhraseRef = useRef<string>(null)\r\n    useEffect(() => {\r\n        // Restart process if seller's dialog changes\r\n        if (\r\n            lastSellerPhraseRef && lastSellerPhraseRef.current &&\r\n            spellingIntervalID && spellingIntervalID.current &&\r\n            sellerPhrase != lastSellerPhraseRef.current\r\n        ) {\r\n            setSellerPhraseSpelled('')\r\n            window.clearInterval(spellingIntervalID.current)\r\n        }\r\n\r\n        spellingIntervalID.current = window.setInterval(() => {            \r\n            if (sellerPhraseSpelled.length < sellerPhrase.length) {\r\n                setSellerPhraseSpelled(sellerPhraseSpelled + sellerPhrase[sellerPhraseSpelled.length])\r\n            } else {\r\n                window.clearInterval(spellingIntervalID.current)\r\n            }\r\n        }, 20)\r\n        lastSellerPhraseRef.current = sellerPhrase\r\n        \r\n        return () => {\r\n            window.clearInterval(spellingIntervalID.current)\r\n        }\r\n    }, [sellerPhrase, sellerPhraseSpelled])\r\n\r\n    const currentContentJSX = useMemo((): ReactNode => {\r\n        switch(currentContentID) {\r\n            case ContentID.ROOT:\r\n                return <div className={styles.root}>\r\n                    <ul>\r\n                        <li>\r\n                            <button onClick={() => setCurrentContentID(ContentID.BUY)} className={`btn btn-primary`}>\r\n                                I want to buy\r\n                            </button>\r\n                        </li>\r\n                        {inventoryLength > 0 && (\r\n                            <li>\r\n                                <button onClick={() => setCurrentContentID(ContentID.SELL)} className={`btn btn-primary`}>\r\n                                    I have stuff for you\r\n                                </button>\r\n                            </li>\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n                break\r\n            case ContentID.BUY:\r\n                return <Buy\r\n                    setSellerPhrase={setSellerPhrase}\r\n                    setCurrentContentID={setCurrentContentID}\r\n                 />\r\n                break\r\n            case ContentID.SELL:\r\n                return <Sell\r\n                    setSellerPhrase={setSellerPhrase}\r\n                    setCurrentContentID={setCurrentContentID}\r\n                 />\r\n                break\r\n            default: return null\r\n        }\r\n    }, [currentContentID, inventoryLength])\r\n \r\n    return <div className={styles.shop}>\r\n        <main className={styles.mainContent}>\r\n            {currentContentJSX}\r\n        </main>\r\n        <section className={styles.seller}>\r\n            <figure className={styles.sellerFigure}>\r\n                <GiPirateCaptain />\r\n                <figcaption>Captain Joe</figcaption>\r\n            </figure>\r\n            <p className={styles.sellerPhrase}>{sellerPhraseSpelledJSX}</p>\r\n        </section>\r\n    </div>\r\n}\r\n\r\nexport default Shop","C:\\www\\react-fishing-game\\src\\components\\Game\\MainMenu\\Status\\index.tsx",["373","374","375","376","377"],"import React, { ReactElement, Dispatch, SetStateAction, useMemo, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { minsToHrsMins } from '../../../../utils/time'\r\nimport allCategories from '../../../items/categories.json'\r\nimport { SectionID } from '../index'\r\nimport { GameStats } from '../../../../interfaces/evolution'\r\nimport { Item, ItemCategory } from '../../../../interfaces/items'\r\nimport styles from './index.module.sass'\r\nimport { BiStats, BiCoin, GiFishingPole, GiFishing } from 'react-icons/all'\r\n// Redux\r\nimport { gameStatsSelector } from '../../../../store/selectors/game'\r\nimport { baitFoodSelector } from '../../../../store/selectors/fishing'\r\nimport { removeBaitItemAction } from '../../../../store/actions/fishing'\r\n\r\ninterface Props {\r\n    setCurrentSection: Dispatch<SetStateAction<SectionID>>,\r\n    // Redux\r\n    gameStats?: GameStats,\r\n    baitFood?: Item,\r\n    removeBait: any\r\n}\r\n\r\nenum StatusSectionID {\r\n    GENERAL = 'GENERAL',\r\n    GEAR = 'GEAR'\r\n}\r\n\r\nconst Status: React.FC<Props> = ({\r\n    setCurrentSection,\r\n    gameStats,\r\n    baitFood,\r\n    removeBait\r\n}) => {\r\n    const { gameTimeSpent, fishrodLevel, doubloons } = gameStats\r\n    const gameTimeSpentFormatted = useMemo((): string => minsToHrsMins(gameTimeSpent), [gameTimeSpent])\r\n    const [currentStatusSectionID, setCurrentStatusSectionID] = useState<StatusSectionID>(StatusSectionID.GENERAL)\r\n\r\n    // The category of item which current bait belongs to\r\n    const baitCategory = useMemo((): ItemCategory => {\r\n        if (baitFood) return allCategories[baitFood['category']]\r\n        else return null\r\n    }, [baitFood, allCategories])\r\n\r\n    // The color used on the bait icon which depends on its item category\r\n    const baitColor = useMemo((): string => {\r\n        if (!baitCategory) return ''\r\n\r\n        return baitCategory.colors[0]\r\n    }, [baitCategory])\r\n\r\n    const currentStatusSection = useMemo((): ReactElement => {\r\n        switch (currentStatusSectionID) {\r\n            case StatusSectionID.GENERAL:\r\n                return <section className={styles.general}>\r\n                    <h3>General</h3>\r\n                    <ul className={styles.gameStats}>\r\n                        <li>\r\n                            Doubloons:&nbsp;\r\n                            <span className={styles.data}>\r\n                                <strong>{doubloons}</strong>&nbsp;\r\n                                <BiCoin color=\"var(--yellow)\" style={{ verticalAlign: 'middle' }} />\r\n                            </span>\r\n                        </li>\r\n                        <li>Game time:&nbsp;\r\n                            <span className={styles.data}>\r\n                                <strong className={styles.time}>{gameTimeSpentFormatted}</strong>\r\n                            </span>\r\n                        </li>\r\n                    </ul>\r\n                </section>\r\n                break\r\n            case StatusSectionID.GEAR:\r\n                return <section className={styles.general}>\r\n                    <h3>Gear</h3>\r\n                    <ul className={styles.gear}>\r\n                        <li>Fishrod:&nbsp;\r\n                            <span className={styles.data}>\r\n                                <strong>{fishrodLevel._id}</strong>\r\n                            </span>\r\n                        </li>\r\n                        <li>Bait:&nbsp;\r\n                            {baitFood ? (\r\n                                <span className={styles.data}>\r\n                                    <span style={{ color: baitColor }} dangerouslySetInnerHTML={{ __html: baitFood.image }}></span>&nbsp;\r\n                                    <strong>{baitFood._id}</strong>&nbsp;\r\n                                    <button\r\n                                        className={`btn btn-cancel ${styles.btn}`}\r\n                                        onClick={removeBait}\r\n                                    >Remove</button>\r\n                                </span>\r\n                            ) : (\r\n                                <span className={styles.data}>\r\n                                    <strong>None</strong>&nbsp;\r\n                                    <button\r\n                                        className={`btn btn-primary ${styles.btn}`}\r\n                                        onClick={() => setCurrentSection(SectionID.INVENTORY)}\r\n                                    >\r\n                                        Add from inventory\r\n                                    </button>\r\n                                </span>\r\n                            )}\r\n                        </li>\r\n                    </ul>\r\n                </section>\r\n                break\r\n        }\r\n    }, [\r\n        currentStatusSectionID,\r\n        fishrodLevel,\r\n        baitFood,\r\n        baitColor,\r\n        removeBait,\r\n        doubloons,\r\n        gameTimeSpentFormatted\r\n    ])\r\n\r\n    return <article className={styles.status}>\r\n        <nav className={styles.statusSectionNav}>\r\n            <ul>\r\n                <li\r\n                    className={currentStatusSectionID === StatusSectionID.GENERAL ? styles.active : ''}\r\n                    onClick={() => setCurrentStatusSectionID(StatusSectionID.GENERAL)}\r\n                >\r\n                    <BiStats />\r\n                </li>\r\n                <li\r\n                    className={currentStatusSectionID === StatusSectionID.GEAR ? styles.active : ''}\r\n                    onClick={() => setCurrentStatusSectionID(StatusSectionID.GEAR)}\r\n                >\r\n                    <GiFishingPole />\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n        {currentStatusSection}\r\n    </article>\r\n}\r\n\r\n// Connect to Redux\r\nconst mapStateToProps = state => ({\r\n    gameStats: gameStatsSelector(state),\r\n    baitFood: baitFoodSelector(state)\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n    removeBait: () => dispatch(removeBaitItemAction())\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Status)","C:\\www\\react-fishing-game\\src\\components\\Game\\MainMenu\\Credits\\index.tsx",["378","379","380"],"import React from 'react'\r\nimport styles from './index.module.sass'\r\n\r\nconst Credits = () => <div className={styles.credits}>\r\n    <main>\r\n        <h3>Credits</h3>\r\n        <div style={{ fontSize: '.75em', textAlign: 'center', margin: '2em', lineHeight: '200%' }}>\r\n            <em>\"Go fishing\"</em>,&nbsp;\r\n            fishing simulator game developed and maintained by&nbsp;\r\n            <address>\r\n                <a\r\n                    href=\"https://www.linkedin.com/in/b748b01b7/\"\r\n                    target=\"_blank\"\r\n                    title=\"See developer's profile on linkedin\"\r\n                    rel=\"author\"\r\n                >dev.js.theo@gmail.com</a>\r\n            </address>\r\n        </div>\r\n        <section className={styles.audioSection}>\r\n            <h4>Audio</h4>\r\n            <ul className={styles.creditList}>\r\n                <li>\r\n                    <h5>\r\n                        Music theme composed by &nbsp;\r\n                        <address>\r\n                            <a\r\n                                href=\"https://soundcloud.com/coma8\"\r\n                                target=\"_blank\"\r\n                                title=\"See profile on soundcloud\"\r\n                                rel=\"author\"\r\n                            >dev.js.theo@gmail.com</a>\r\n                        </address>\r\n                    </h5>\r\n                </li>\r\n                <li>\r\n                    <h5>\r\n                        \"Coins Purchase 01\"&nbsp;\r\n                        <address>\r\n                            by&nbsp;\r\n                            <a\r\n                                href=\"https://freesound.org/people/rhodesmas/sounds/321263/\"\r\n                                title=\"Rhodesmas' work\"\r\n                                target=\"_blank\"\r\n                                rel=\"author\"\r\n                            >rhodesmas</a>\r\n                        </address>\r\n                    </h5>\r\n                    <p>Modified from .wav to .mp3</p>\r\n                </li>\r\n            </ul>\r\n        </section>\r\n    </main>\r\n</div>\r\n\r\nexport default Credits","C:\\www\\react-fishing-game\\src\\components\\Game\\Barometer\\TensionGauge\\index.tsx",["381"],"import React, { CSSProperties, useMemo, useState } from 'react'\r\nimport styles from './index.module.sass'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport { lineTensionSelector } from '../../../../store/selectors/fishing'\r\n\r\ninterface Props {\r\n    // Redux\r\n    lineTension: number\r\n}\r\n\r\nconst TensionGauge: React.FC<Props> = ({ lineTension }) => {\r\n\r\n    const lowTensionStyle = useMemo((): CSSProperties => {\r\n        if (lineTension >= 0) return { visibility: 'hidden' }\r\n        return {\r\n            clipPath: `polygon(${100 + lineTension}% 0, 100% 0, 100% 100%, ${100 + lineTension}% 100%)`\r\n        }\r\n    }, [lineTension])\r\n\r\n    const highTensionStyle = useMemo((): CSSProperties => {\r\n        if (lineTension <= 0) return { visibility: 'hidden' }\r\n        return {\r\n            clipPath: `polygon(0 0, ${lineTension}% 0, ${lineTension}% 100%, 0 100%)`\r\n        }\r\n    }, [lineTension])\r\n    \r\n    return <div className={styles.resistanceGauge}>\r\n        <meter\r\n            className={styles.lineTension}\r\n            min={-100}\r\n            max={100}\r\n            value={lineTension}\r\n            high={50}\r\n            low={-50}\r\n            optimum={0}\r\n        >\r\n        </meter>\r\n        <label\r\n            className={`${styles.lowTension} ${lineTension <= -75 ? styles.danger : ''}`}\r\n            style={{\r\n                ...lowTensionStyle,\r\n                animationDuration: lineTension <= -90 ? '.3s' : '.5s'\r\n            }}\r\n        ></label>\r\n        <label\r\n            className={`${styles.highTension} ${lineTension >= 75 ? styles.danger : ''}`}\r\n            style={{\r\n                ...highTensionStyle,\r\n                animationDuration: lineTension >= 90 ? '.3s' : '.5s'\r\n            }}\r\n        ></label>\r\n    </div>\r\n}\r\n\r\n// Redux connection\r\nconst mapStateToProps = state => ({\r\n    lineTension: lineTensionSelector(state)\r\n})\r\nexport default connect(\r\n    mapStateToProps,\r\n    dispatch => ({})\r\n)(TensionGauge)","C:\\www\\react-fishing-game\\src\\components\\Game\\areas\\Beginner\\index.tsx",[],"C:\\www\\react-fishing-game\\src\\components\\Game\\areas\\Advanced\\index.tsx",[],"C:\\www\\react-fishing-game\\src\\components\\Game\\areas\\Expert\\index.tsx",[],"C:\\www\\react-fishing-game\\src\\components\\ProgressCircle\\index.tsx",[],"C:\\www\\react-fishing-game\\src\\components\\Game\\areas\\Starter\\index.tsx",[],"C:\\www\\react-fishing-game\\src\\components\\Game\\areas\\King\\index.tsx",[],"C:\\www\\react-fishing-game\\src\\components\\Game\\areas\\Intermediate\\index.tsx",[],"C:\\www\\react-fishing-game\\src\\components\\Game\\areas\\Abyss\\index.tsx",[],"C:\\www\\react-fishing-game\\src\\components\\Game\\MainMenu\\Inventory\\index.tsx",["382","383","384","385","386","387","388","389","390","391","392","393","394"],"import React, { Dispatch, SetStateAction, ReactNode, Fragment, useMemo, useState, useCallback, useRef } from 'react'\r\nimport { InventoryEntry, ItemCategory, Item } from '../../../../interfaces/items'\r\nimport Modal from '../../../misc/Modal'\r\nimport categories from '../../../items/categories.json'\r\nimport { rodLevels } from '../../evolution'\r\nimport { pxToM } from '../../../../utils/position'\r\nimport { SectionID } from '../index'\r\nimport styles from './index.module.sass'\r\n\r\n// Redux\r\nimport { connect, useDispatch, useSelector } from 'react-redux'\r\nimport { baitFoodSelector } from '../../../../store/selectors/fishing'\r\nimport { rodLevelSelector } from '../../../../store/selectors/game'\r\nimport { inventoryEntriesSelector, maxEntriesSelector, isPlayerOutOfBaitsSelector } from '../../../../store/selectors/inventory'\r\nimport { deleteItemAction, removeInventoryEntryAction, equipItemAction } from '../../../../store/actions/inventory'\r\nimport { putOnBaitItemAction, removeBaitItemAction } from '../../../../store/actions/fishing'\r\n\r\ninterface Props {\r\n    setCurrentSection: Dispatch<SetStateAction<SectionID>>,\r\n    // Redux\r\n    isPlayerOutOfBaits: boolean,\r\n    entries: InventoryEntry[],\r\n    maxEntries: number\r\n}\r\n\r\ninterface EntryProps {\r\n    entry: InventoryEntry,\r\n    handleSelect: () => void,\r\n    isSelected: boolean\r\n}\r\n\r\ninterface DetailsProps {\r\n    entry: InventoryEntry,\r\n    setCurrentEntryNum: Dispatch<SetStateAction<number|ReactNode>>\r\n}\r\n\r\nexport const Entry: React.FC<EntryProps> = ({ entry, handleSelect, isSelected }) => {\r\n    const { amount, item } = entry\r\n    const { _id, category, image } = item\r\n    const itemCategory = useMemo((): ItemCategory => categories[category], [category])\r\n    const { colors } = itemCategory\r\n\r\n    // Redux\r\n    const rodLevel = useSelector(rodLevelSelector)\r\n    const baitFood = useSelector(baitFoodSelector)\r\n\r\n    // Computed\r\n    const isEquipment = useMemo((): boolean => !!category.match(/Fishing pole/), [category])\r\n    const isEquipped = useMemo((): boolean => {\r\n        if (!isEquipment) return false\r\n        switch (category) {\r\n            case 'Fishing pole':\r\n                return rodLevel._id === _id\r\n                break\r\n            default: return false\r\n        }\r\n    }, [rodLevel, category, _id])\r\n\r\n    const isAlpha = useMemo((): boolean => _id.startsWith('Alpha '), [_id])\r\n\r\n    return <li\r\n        className={`${styles.entry} ${isSelected ? styles.selected : ''}`}\r\n        onClick={handleSelect}\r\n    >\r\n        <figure\r\n            className={styles.image}\r\n            dangerouslySetInnerHTML={{ __html: image }}\r\n            style={{ color: colors[1] }}\r\n        >\r\n        </figure>\r\n        <span className={styles.amount}>&times;<strong>{amount}</strong></span>\r\n        {(isEquipped || (baitFood && _id === baitFood._id)) && <span className={styles.equipped}>E</span>}\r\n        {isAlpha && <span className={styles.alpha}>A</span>}\r\n    </li>\r\n}\r\n\r\nexport const Details: React.FC<DetailsProps> = ({ entry, setCurrentEntryNum }) => {\r\n    const { item, amount } = entry\r\n    const { _id, plural, description, category, isDisposable } = item\r\n    const itemCategory = useMemo((): ItemCategory => categories[category], [category])\r\n\r\n    const [modal, setModal] = useState<ReactNode>(null)\r\n    const modalRef = useRef<any>(null)\r\n    const [dropAmount, setDropAmount] = useState<number>(1)\r\n\r\n    // Redux\r\n    const dispatch = useDispatch()\r\n    const removeItem = useCallback((itemID: string, amount: number): void => dispatch(removeInventoryEntryAction(itemID, amount)), [])\r\n    const deleteEntry = useCallback((itemID: string): void => dispatch(deleteItemAction(itemID)), [])\r\n    const putOnBait = useCallback((item: Item): void => dispatch(putOnBaitItemAction(item)), [])\r\n    const removeBait = useCallback((): void => dispatch(removeBaitItemAction()), [])\r\n    const equipItem = useCallback((itemID): void => dispatch(equipItemAction(itemID)), [])\r\n    const baitFood = useSelector(baitFoodSelector)\r\n    const rodLevel = useSelector(rodLevelSelector)\r\n\r\n    const isEquipment = useMemo((): boolean => !!category.match(/Fishing pole/), [category])\r\n    const isEquipped = useMemo((): boolean => {\r\n        if (!isEquipment) return false\r\n        switch (category) {\r\n            case 'Fishing pole':\r\n                return rodLevel._id === _id\r\n                break\r\n            default: return false\r\n        }\r\n    }, [rodLevel, category, _id])\r\n\r\n    const handleConfirm = useCallback(\r\n        (onConfirm, msg = 'Are you sure ?'): void => {\r\n            setModal(\r\n                <Modal\r\n                    ref={modalRef}\r\n                    onClose={setModal}\r\n                    className={styles.modal}\r\n                >\r\n                    <h3>{msg}</h3>\r\n                    <ul className={styles.actionsList}>\r\n                        <li>\r\n                            <button\r\n                                onClick={() => modalRef.current.closeModal()}\r\n                                className={`btn btn-cancel`}\r\n                            >Cancel</button>\r\n                        </li>\r\n                        <li>\r\n                            <button\r\n                                onClick={() => {\r\n                                    onConfirm()\r\n                                    modalRef.current.closeModal()\r\n                                }}\r\n                                className={`btn btn-primary`}\r\n                            >Confirm</button>\r\n                        </li>\r\n                    </ul>\r\n                </Modal>\r\n            )\r\n        }, []\r\n    )\r\n\r\n    const handleUseBait = useCallback(\r\n        (): void => {\r\n            putOnBait(item)\r\n            setCurrentEntryNum(\r\n                <p style={{ background: 'var(--black)', padding: '.25rem' }}>\r\n                    <strong style={{ color: itemCategory.colors[0] }}>\r\n                        {_id}\r\n                    </strong>&nbsp;\r\n                    is now on your fish pole\r\n                </p>\r\n            )\r\n        }, [item, putOnBait, setCurrentEntryNum, _id, itemCategory]\r\n    )\r\n\r\n    const btnUse = useMemo((): React.ReactElement => {\r\n        if (isEquipment && isEquipped) return null // Equipment is already in use\r\n        else if (isEquipment && !isEquipped) return (\r\n            <button\r\n                onClick={() => equipItem(_id)}\r\n                className={`btn btn-primary`}\r\n                title={`Equip yourself with ${_id}`}\r\n            >\r\n                Equip\r\n            </button>\r\n        )\r\n\r\n        return (\r\n            category.match(/Bait|Fish/i) && // Fishes can be used as baits\r\n            baitFood &&\r\n            baitFood._id === _id ? (\r\n                <button\r\n                    onClick={removeBait}\r\n                    className={`btn btn-primary`}\r\n                    title={`You are using some ${_id} as a bait. Remove it ?`}\r\n                >\r\n                    Remove from fish pole\r\n                </button>\r\n            ) : (\r\n                <button\r\n                    onClick={handleUseBait}\r\n                    className={`btn btn-primary`}\r\n                    title={`Try to use ${_id.toLowerCase()}`}\r\n                >Use</button>\r\n            )\r\n        )\r\n    }, [baitFood, _id, removeBait, handleUseBait, category, rodLevel])\r\n\r\n    // Display fishing pole stats\r\n    const fishingPoleStats = useMemo((): ReactNode => {\r\n        if (category !== 'Fishing pole') return null\r\n        \r\n        const lvl = rodLevels.find(level => level._id === _id)\r\n        if (!lvl) return null\r\n\r\n        return <section className={styles.fishingPoleStats}>\r\n            <br />\r\n            <p>Line length: <strong>{pxToM(lvl['maxLength'])}m</strong></p>\r\n            <p>Resistance: <strong>{lvl['resistance']*100}</strong></p>\r\n            <p>Strength: <strong>{lvl['strength']*5}</strong></p>\r\n        </section>\r\n    }, [_id, rodLevels])\r\n\r\n    return <aside className={styles.details}>\r\n        <h3\r\n            style={{\r\n                background: `-webkit-linear-gradient(${itemCategory.colors.join(', ')})`\r\n            }}\r\n        >\r\n            {_id}\r\n        </h3>\r\n        <article className={styles.description} style={{ color: itemCategory.colors[0] }}>\r\n            {description}\r\n            {fishingPoleStats}\r\n        </article>\r\n        <ul className={styles.actions}>\r\n            <li>\r\n                {btnUse}\r\n            </li>\r\n            {isDisposable && (\r\n                <li style={{ display: 'flex', alignItems: 'center', gap: '.25rem', flexWrap: 'nowrap' }}>\r\n                    <button\r\n                        className={`btn btn-cancel`}\r\n                        title={`Remove a chosen amount of ${_id.toLowerCase()} from the inventory`}\r\n                        onClick={() => handleConfirm(() => removeItem(_id, dropAmount), `Drop ${dropAmount} ${dropAmount > 1 ? plural.toLowerCase() : _id.toLowerCase()} ?`)}\r\n                    >Drop</button>\r\n                    <input\r\n                        title={`How many ${plural} should be thrown away ?`}\r\n                        className={styles.dropAmount}\r\n                        type=\"number\"\r\n                        value={dropAmount}\r\n                        min={1}\r\n                        max={amount}\r\n                        step={1}\r\n                        onChange={e => {\r\n                            const newAmount = parseInt(e.target.value)\r\n                            if (newAmount < 1) setDropAmount(1)\r\n                            else if(newAmount > amount) setDropAmount(amount)\r\n                            else setDropAmount(newAmount)\r\n                        }}\r\n                    />\r\n                </li>\r\n            )}\r\n            {isDisposable && (\r\n                <li>\r\n                    <button\r\n                        className={`btn btn-cancel`} \r\n                        title={`Remove every ${_id.toLowerCase()} from the inventory`}\r\n                        onClick={() => handleConfirm(() => deleteEntry(_id), `Drop every ${_id.toLowerCase()} ?`)}\r\n                    >\r\n                        Drop all\r\n                    </button>\r\n                </li>\r\n            )}\r\n        </ul>\r\n        {modal && modal}\r\n    </aside>\r\n}\r\n\r\nexport const Inventory: React.FC<Props> = ({\r\n    setCurrentSection,\r\n    // Redux\r\n    entries = [],\r\n    maxEntries,\r\n    isPlayerOutOfBaits\r\n}) => {\r\n    const [currentEntryNum, setCurrentEntryNum] = useState<number|ReactNode>(null)\r\n    const remainingEntries = useMemo((): number => maxEntries - entries.length, [entries, maxEntries])\r\n    const entriesJSX = useMemo((): (ReactNode[]) => {\r\n        return entries.map((entry: InventoryEntry, index: number) => {\r\n            const isSelected: boolean = currentEntryNum === index\r\n            return <Entry\r\n                key={entry.item._id}\r\n                entry={entry}\r\n                handleSelect={() => !isSelected ? setCurrentEntryNum(index) : setCurrentEntryNum(null)}\r\n                isSelected={isSelected}\r\n             />\r\n        })\r\n    }, [entries, currentEntryNum])\r\n\r\n    const remainingEntriesJSX = useMemo((): (ReactNode[] | ReactNode | null) => {\r\n        if (typeof remainingEntries !== 'number' || remainingEntries <= 0) return null\r\n        let remaining = []\r\n        for (let i = 0; i < remainingEntries; i++) {\r\n            remaining.push(\r\n                <li key={i} className={`${styles.entry} ${styles.empty}`}></li>\r\n            )\r\n        }\r\n        return remaining\r\n    }, [remainingEntries])\r\n\r\n    const detailsJSX = useMemo((): (ReactNode | null) => {\r\n        // Inventory is empty\r\n        if (!entries || entries.length <= 0) {\r\n            return <aside className={`${styles.details} ${styles.msg}`}>\r\n                <h3>Your inventory is empty ...</h3>\r\n                <p>Lost all your <em>baits</em> ?</p>\r\n                <p>\r\n                    You can buy new ones at the&nbsp;\r\n                    <span className={styles.link} onClick={() => setCurrentSection(SectionID.SHOPPING)}>fishing shop</span>\r\n                    ; otherwise, you might as well look after something edible for fish consumption somewhere on the shore.\r\n                </p>\r\n            </aside>\r\n        }\r\n\r\n        // Player does not have baits and no fishing pole is selected\r\n        if (isPlayerOutOfBaits) {\r\n            return <aside className={`${styles.details} ${styles.msg}`}>\r\n                <h3>Your inventory is empty ...</h3>\r\n                <p>Lost all your <em>baits</em> ?</p>\r\n                <p>\r\n                    You can buy new ones at the&nbsp;\r\n                    <span className={styles.link} onClick={() => setCurrentSection(SectionID.SHOPPING)}>fishing shop</span>\r\n                    ; otherwise, you might as well look after something edible for fish consumption somewhere on the shore.\r\n                </p>\r\n            </aside>\r\n        }\r\n\r\n        // No item selected\r\n        if (currentEntryNum === null) {\r\n            return <aside className={`${styles.details} ${styles.msg}`}>\r\n                <h3>Select an item</h3>\r\n            </aside>\r\n        }\r\n\r\n        // Display message\r\n        if (typeof currentEntryNum !== 'number') {\r\n            return <aside className={`${styles.details} ${styles.msg}`}>\r\n                {currentEntryNum}\r\n            </aside>\r\n        }\r\n        \r\n        // Item selected: display its details\r\n        const currentEntry = entries[currentEntryNum]\r\n        if (!currentEntry) return null\r\n        return <Details entry={currentEntry} setCurrentEntryNum={setCurrentEntryNum} />\r\n    }, [entries, currentEntryNum, isPlayerOutOfBaits])\r\n\r\n    return <div className={styles.inventory}>\r\n        <main className={styles.entries}>\r\n            <ul className={styles.entriesList}>\r\n                {entriesJSX}\r\n                {remainingEntriesJSX}\r\n            </ul>\r\n        </main>\r\n        {detailsJSX}\r\n    </div>\r\n}\r\n\r\n// Connect to Redux\r\nconst mapStateToProps = state => ({\r\n    entries: inventoryEntriesSelector(state),\r\n    maxEntries: maxEntriesSelector(state),\r\n    isPlayerOutOfBaits: isPlayerOutOfBaitsSelector(state)\r\n})\r\nconst mapDispatchToProps = dispatch => ({})\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Inventory)","C:\\www\\react-fishing-game\\src\\utils\\time.ts",[],"C:\\www\\react-fishing-game\\src\\components\\Game\\MainMenu\\Shop\\Sell\\index.tsx",["395","396","397","398","399","400"],"C:\\www\\react-fishing-game\\src\\components\\Game\\MainMenu\\Shop\\Buy\\index.tsx",["401","402","403","404","405","406","407","408"],"C:\\www\\react-fishing-game\\src\\components\\fishes\\Default\\index.tsx",["409","410","411","412","413","414","415","416","417","418"],"import React, { useCallback, ReactNode, useState, useMemo, useEffect, useLayoutEffect, useRef } from 'react'\r\nimport { GameNotif, GameNotifType } from '../../../interfaces/game'\r\nimport { Coordinates, Path, Map } from '../../../interfaces/position'\r\nimport { Item } from '../../../interfaces/items'\r\nimport { Fish, FishData } from '../../../interfaces/fishes'\r\nimport { randomIntFromInterval, probability, toDeg } from '../../../utils/math'\r\nimport { getNextCoordinatesOfPath, areCoordinatesInPath, getAngleFromVerticalAxis } from '../../../utils/position'\r\nimport { takeBaitAnim } from '../../Game/animations'\r\nimport { FaHeart, FaTimes } from 'react-icons/fa'\r\nimport styles from './index.module.sass'\r\nimport gameProcesses from '../../Game/processes/index.json'\r\nimport allCategories from '../../items/categories.json'\r\n\r\n// Redux\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { mapSelector, baitLakeCoordsSelector } from '../../../store/selectors/position'\r\nimport {\r\n    isBaitAvailableSelector,\r\n    baitFoodSelector,\r\n    hookedFishSelector,\r\n    hasBaitJustFallenSelector\r\n} from'../../../store/selectors/fishing'\r\nimport { setGameNotificationAction } from '../../../store/actions/game'\r\nimport { makeBaitAvailableAction, setHookedFishAction, loseBaitAction } from '../../../store/actions/fishing'\r\nimport { setGameProcessAction } from '../../../store/actions/game'\r\n\r\n// Notif text when player hooks too soon\r\nconst fleePhrases: string[] = [\r\n    'Fish goes away',\r\n    'Fish is afraid',\r\n    'You gotta hook the fish when it\\'s green'\r\n]\r\nconst getRandomFleePhrase = (): string => fleePhrases[randomIntFromInterval(0, fleePhrases.length - 1)]\r\n\r\ninterface Props {\r\n    fish?: Fish, // fish stats template from json file\r\n    groupID: string, // fish group uuid\r\n    fishID: string, // fish uuid\r\n    _id: string, // fish name\r\n    size: number, // Size of the fish in px; width = 1em\r\n    strength: number,\r\n    area?: Path, // Path of the area the fish belongs to\r\n    detectionScope?: number, // Number of pixels around fish where it can detect the bait,\r\n    roamingInterval?: number, // Interval in milliseconds between fish moves when it's roaming\r\n    roamingDistance?: number, // Distance in px that fish travels when it's roaming\r\n    edibleFoods?: string[], // What foods the fish likes\r\n    biteChance?: number, // Probability that the fish will take the bait if it's attracted to it (min: 0; max: 1)\r\n    pullChance?: number, // Probability that the fish will pull on the line at each time interval during battle process (min: 0; max: 1)\r\n    catchTimeLapse?: number[] // Interval of time in which player is able to hook the fish after it took the bait; first n is the delay after the bait was taken, second is the duration\r\n    isBoss?: boolean,\r\n    className?: string,\r\n    children?: ReactNode,\r\n    // Redux\r\n    map?: Map,\r\n    baitLakeCoords?: Coordinates\r\n}\r\n\r\n// Lake is the referential of fish coords\r\nconst DefaultFish: React.FC<Props> = ({\r\n    fish = null,\r\n    fishID,\r\n    groupID,\r\n    _id,\r\n    size = 20,\r\n    strength = 10,\r\n    area,\r\n    detectionScope = 75,\r\n    roamingInterval,\r\n    roamingDistance,\r\n    edibleFoods = ['Mushroom'],\r\n    biteChance = .75,\r\n    pullChance = .5,\r\n    catchTimeLapse =  [0, 2000],\r\n    isBoss = false,\r\n    className = '',\r\n    children,\r\n}) => {\r\n    // REDUX\r\n    const hookedFish = useSelector(hookedFishSelector)\r\n    const baitLakeCoords: Coordinates = useSelector(baitLakeCoordsSelector)\r\n    const map: Map = useSelector(mapSelector)\r\n    const isBaitAvailable: boolean = useSelector(isBaitAvailableSelector)\r\n    const baitFood: Item = useSelector(baitFoodSelector)\r\n    const hasBaitJustFallen = useSelector(hasBaitJustFallenSelector)\r\n    const dispatch = useDispatch()\r\n    const makeBaitAvailable = useCallback((bool: boolean): void => dispatch(makeBaitAvailableAction(bool)), [])\r\n    const setHookedFish = useCallback((fish: FishData): void => dispatch(setHookedFishAction(fish)), [])\r\n    const loseBait = useCallback((): void => dispatch(loseBaitAction()), [])\r\n    const setGameProcess = useCallback((newProcess: string): void => dispatch(setGameProcessAction(newProcess)), [])\r\n    const setGameNotification = useCallback((notif: GameNotif): void => dispatch(setGameNotificationAction(notif)), [])\r\n    \r\n    // REFS\r\n    const fishPathRef = useRef<HTMLDivElement>(null)\r\n\r\n    // STATE\r\n    const [fishDirection, setFishDirection] = useState<number>(() => randomIntFromInterval(-180, 180))\r\n    const [isRoaming, setIsRoaming] = useState<boolean>(true)\r\n    const [moveTransition, setMoveTransition] = useState<string>('none')\r\n    const [opacity, setOpacity] = useState(1)\r\n    const [wouldHookSuccessfully, setWouldHookSuccessfully] = useState<boolean>(false)\r\n    const [canTryToCatch, setCanTryToCatch] = useState<boolean>(false)\r\n\r\n    // Initialize fish position somewhere inside the area/group it belongs to\r\n    const [fishCoords, setFishCoords] = useState<Coordinates>({\r\n        x: area.from.x,\r\n        y: area.from.y\r\n    })\r\n    const fishWidth = useMemo((): number => size, [size])\r\n    const fishHeight = useMemo((): number => size*3/8, [size])\r\n    const isFishHorizontal = useMemo((): boolean => (fishDirection <= 135 && fishDirection >= 45) || (fishDirection >= -135 && fishDirection <= -45), [fishDirection])\r\n    const rectWidth = useMemo((): number => isFishHorizontal ? fishWidth : fishHeight, [isFishHorizontal, fishWidth, fishHeight])\r\n    const rectHeight = useMemo((): number => isFishHorizontal ? fishHeight : fishWidth, [isFishHorizontal, fishWidth, fishHeight])\r\n\r\n    const fishPath = useMemo((): Path => {\r\n        const halfWidth: number = rectWidth/2\r\n        const halfHeight: number = rectHeight/2\r\n        return ({\r\n            from: {\r\n                x: fishCoords.x - halfWidth,\r\n                y: fishCoords.y - halfHeight\r\n            },\r\n            to: {\r\n                x: fishCoords.x + halfWidth,\r\n                y: fishCoords.y + halfHeight\r\n            }\r\n        })\r\n    }, [fishCoords, rectWidth, rectHeight])\r\n\r\n    const detectionPath = useMemo((): Path => {\r\n        return ({\r\n            from: {\r\n                x: fishPath.from.x - detectionScope,\r\n                y: fishPath.from.y - detectionScope\r\n            },\r\n            to: {\r\n                x: fishPath.to.x + detectionScope,\r\n                y: fishPath.to.y + detectionScope\r\n            }\r\n        })\r\n    }, [fishPath, detectionScope])\r\n\r\n    // Check when bait gets within fish's detection scope\r\n    const isInScope = useMemo((): boolean => {\r\n        return isBaitAvailable && areCoordinatesInPath(baitLakeCoords, detectionPath)\r\n    }, [baitLakeCoords, detectionPath, isBaitAvailable])\r\n\r\n    // Check whether fish likes the food on the fishing hook\r\n    const likesBait = useMemo(() => {\r\n        if (!baitFood) return false\r\n        return edibleFoods.includes(baitFood._id)\r\n    }, [edibleFoods, baitFood])\r\n\r\n    // FUNCTIONS\r\n    const goAway = useCallback(\r\n        (): void => {\r\n            setFishCoords({\r\n                x: randomIntFromInterval(area.from.x, area.to.x),\r\n                y: randomIntFromInterval(area.from.y, area.to.y)\r\n            })\r\n            setFishDirection(randomIntFromInterval(-180, 180))\r\n            setOpacity(0)\r\n            window.setTimeout(() => {\r\n                if (setOpacity) {\r\n                    setOpacity(1)\r\n                }\r\n            }, 2000)\r\n        }, [setFishCoords, area, opacity]\r\n    )\r\n\r\n    const giveUpBait = useCallback(\r\n        (): void => {\r\n            window.clearTimeout(hookStartTimerIDRef.current)\r\n            window.clearTimeout(hookFailTimerIDRef.current)\r\n            window.clearTimeout(hookSucceedTimerIDRef.current)\r\n            setCanTryToCatch(false)\r\n            setWouldHookSuccessfully(false)\r\n            return setIsRoaming(true)\r\n        }, []\r\n    )\r\n\r\n    // This function gets called when a fish takes the bait and the player reacted too late\r\n    const handleHookFail = useCallback(\r\n        (): void => {\r\n            if (!inScopeRef.current || !!hookedFish) return giveUpBait()\r\n            else {\r\n                // Reinitialize fish behaviour\r\n                giveUpBait()\r\n                setWouldHookSuccessfully(false)\r\n                setCanTryToCatch(false)\r\n                setIsRoaming(true)\r\n\r\n                // Display notification\r\n                const baitColor = allCategories[baitFood.category]['colors'][1]\r\n                setGameNotification({\r\n                    type: GameNotifType.FAIL,\r\n                    html: {\r\n                        header: `<h3>Too late !</h3>`,\r\n                        body: `\r\n                            <p>A fish went away with your bait ...</p>\r\n                            <p>\r\n                                You lost \r\n                                <strong style=\"color: ${baitColor}\">\r\n                                    1 ${baitFood._id}\r\n                                </strong>\r\n                            </p>\r\n                        `\r\n                    },\r\n                    duration: 10\r\n                })\r\n\r\n                // Lose bait\r\n                loseBait()\r\n\r\n                // Go back to the shore automatically\r\n                setGameProcess(gameProcesses.INITIAL)\r\n            }\r\n        }, [isInScope, giveUpBait, hookedFish]\r\n    )\r\n\r\n    const randomMove = useCallback(\r\n        (): void => {\r\n            if (typeof document.hidden === \"undefined\" || document.hidden === false) {\r\n                const newAngle: number = randomIntFromInterval(-180, 180)\r\n                const distance: number = roamingDistance || fishWidth\r\n                const offsetCoords: Coordinates = getNextCoordinatesOfPath(newAngle, distance)\r\n                const newCoords: Coordinates = {\r\n                    x: fishCoords.x + offsetCoords.x,\r\n                    y: fishCoords.y + offsetCoords.y\r\n                }\r\n        \r\n                // Only move if newCoords are inside fish area\r\n                if (areCoordinatesInPath(newCoords, area)) {\r\n                    setFishDirection(-newAngle)\r\n                    setFishCoords(newCoords)\r\n                }\r\n            }\r\n        }, [fishCoords, fishDirection, roamingDistance, fishWidth, area, isInScope, likesBait]\r\n    )\r\n\r\n    const approachBait = useCallback(\r\n        (): void => {\r\n            // Lean towards bait from current position\r\n            const angle: number = toDeg(getAngleFromVerticalAxis({ from: baitLakeCoords, to: fishCoords }))\r\n            setMoveTransition('2s transform ease-in-out, 0s background ease, 0s border-color ease, .5s opacity ease')\r\n            setFishDirection(angle)\r\n            // Handle offset\r\n            let offsetX: number = 0\r\n            let offsetY: number = 0\r\n\r\n            offsetX = (angle > 0 && angle < 45) || (angle > 135 && angle <= 180) ? rectWidth/2 : offsetX\r\n            offsetX = angle < 0 ? -rectWidth : offsetX\r\n            offsetX = (angle < 45 && angle > -45) || angle > 135 ?  -rectHeight/2 : offsetX\r\n            offsetY = Math.abs(angle) > 90 ? rectHeight/2 : -rectHeight/2\r\n\r\n            setFishCoords({\r\n                x: baitLakeCoords.x + offsetX,\r\n                y: baitLakeCoords.y + offsetY\r\n            })\r\n        }, [baitLakeCoords, fishCoords, rectHeight, rectWidth]\r\n    )\r\n\r\n    // Handle take bait\r\n    // Timer IDs\r\n    const hookStartTimerIDRef = useRef<number>(null)\r\n    const hookSucceedTimerIDRef = useRef<number>(null)\r\n    const hookFailTimerIDRef = useRef<number>(null)\r\n    // We need to access current values of these refs during setTimeout\r\n    const inScopeRef = useRef<boolean>(null)\r\n    // Map dependencies to refs\r\n    useEffect(() => {\r\n        inScopeRef.current = isInScope\r\n    }, [isInScope])\r\n    const takeBait = useCallback(\r\n        (): void => {\r\n             // Stop roaming and approach bait\r\n            setIsRoaming(false)\r\n            const [delay, duration] = catchTimeLapse\r\n            const approachDuration = 4000\r\n            approachBait()\r\n            //console.log('approaching bait')\r\n            \r\n            hookFailTimerIDRef.current = window.setTimeout(\r\n                handleHookFail, approachDuration + delay + duration\r\n            )\r\n\r\n            hookSucceedTimerIDRef.current = window.setTimeout(() => {\r\n                if (!inScopeRef.current) return giveUpBait()\r\n                setWouldHookSuccessfully(true)\r\n                // Player would hook the fish successfully during this interval\r\n            }, approachDuration + delay)\r\n\r\n            // Fish will approach bait during x seconds before taking it\r\n            hookStartTimerIDRef.current = window.setTimeout(() => {\r\n                // If bait went out of scope or is unavailable, stop\r\n                if (!inScopeRef.current) {\r\n                    return giveUpBait()\r\n                }\r\n                \r\n                setCanTryToCatch(true)\r\n                takeBaitAnim(fishPathRef.current)\r\n                // \"takes bait\"; if tries to hook now, too soon\r\n            }, approachDuration)\r\n        }, [\r\n            catchTimeLapse,\r\n            approachBait,\r\n            handleHookFail,\r\n            giveUpBait\r\n        ]\r\n    )\r\n    // Allow player to hook the fish during the right timelapse\r\n    useEffect(() => {\r\n        function handleHook (): void {\r\n            if (isBaitAvailable) {\r\n                if (wouldHookSuccessfully) {\r\n                    // Hooked successfully\r\n                    setHookedFish({\r\n                        fishID,\r\n                        groupID,\r\n                        fish: {\r\n                            ...fish,\r\n                            strength,\r\n                            size,\r\n                            pullChance, // Use DefaultFish's default value if not set in json\r\n                            isBoss\r\n                        }\r\n                    })\r\n                    setGameProcess(gameProcesses.BATTLE)\r\n\r\n                    // Cancel failure and reinitialize state\r\n                    window.clearTimeout(hookFailTimerIDRef.current)                    \r\n                    setWouldHookSuccessfully(false)\r\n                    setCanTryToCatch(false)\r\n                    setMoveTransition('none')\r\n\r\n                    // Prevent more than one fish at a time to get hooked\r\n                    makeBaitAvailable(false)\r\n                } else {\r\n                    // Too soon\r\n                    // Fish flees\r\n                    makeBaitAvailable(true)\r\n                    goAway()\r\n                    // Notify\r\n                    setGameNotification({\r\n                    type: GameNotifType.FAIL,\r\n                    html: {\r\n                        header: `<h3>Too soon !</h3>`,\r\n                        body: `<p>${getRandomFleePhrase()}</p>`\r\n                    },\r\n                    duration: 5\r\n                })\r\n                }\r\n            } else console.log('Tried to hook but bait is not available ...')\r\n        }\r\n        function handleKeyPress (e: KeyboardEvent): void {\r\n            e.preventDefault()\r\n            e.stopPropagation()\r\n            switch(e.keyCode) {\r\n                case 32: // Space\r\n                case 13: // Enter\r\n                    handleHook()\r\n                    break\r\n            }\r\n        }\r\n        function handleClick (e: MouseEvent): void {\r\n            console.log('mouse downn')\r\n            e.preventDefault()\r\n            e.stopPropagation()\r\n            handleHook()\r\n        }\r\n        function handleTouch (e: TouchEvent): void {\r\n            e.preventDefault()\r\n            e.stopPropagation()\r\n            handleHook()\r\n        }\r\n\r\n        if (canTryToCatch) {\r\n            document.addEventListener('keypress', handleKeyPress, true)\r\n            document.body.addEventListener('mousedown', handleClick, true)\r\n            document.body.addEventListener('touchstart', handleTouch, true)\r\n        } else {\r\n            document.removeEventListener('keypress', handleKeyPress, true)\r\n            document.body.removeEventListener('mousedown', handleClick, true)\r\n            document.body.removeEventListener('touchstart', handleTouch, true)\r\n        }\r\n\r\n        return () => {\r\n            document.removeEventListener('keypress', handleKeyPress, true)\r\n            document.body.removeEventListener('mousedown', handleClick, true)\r\n            document.body.removeEventListener('touchstart', handleTouch, true)\r\n        }\r\n    }, [wouldHookSuccessfully, canTryToCatch, isBaitAvailable, fishID, groupID, strength, size, goAway])\r\n\r\n    // Default fish behaviour when it's roaming\r\n    useEffect(() => {\r\n        let intervalID = null\r\n        const handleRoaming = (): void => {\r\n            if (!isInScope || !likesBait) randomMove()\r\n            else {\r\n                // Decide whether to take the bait\r\n                if (probability(biteChance)) {\r\n                    takeBait()\r\n                } else randomMove()\r\n            }\r\n        }\r\n\r\n        if (isRoaming && !hookedFish) {\r\n            intervalID = window.setInterval(handleRoaming, roamingInterval || randomIntFromInterval(3000, 6000))\r\n            setMoveTransition('1s all ease')\r\n        } else {\r\n            window.clearInterval(intervalID)\r\n        }\r\n\r\n        return () => {\r\n            window.clearInterval(intervalID)\r\n        }\r\n    }, [\r\n        isRoaming,\r\n        randomMove,\r\n        roamingInterval,\r\n        likesBait,\r\n        isInScope,\r\n        biteChance,\r\n        takeBait,\r\n        hookedFish\r\n    ])\r\n\r\n    // Flee if bait falls on fish\r\n    useEffect(() => {\r\n        if (hasBaitJustFallen) {\r\n            if (areCoordinatesInPath(baitLakeCoords, fishPath)) {\r\n                goAway()\r\n            }\r\n        }\r\n    }, [hasBaitJustFallen, baitLakeCoords, fishPath, goAway])\r\n\r\n    // Make fish follow bait when it is hooked\r\n    useEffect(() => {\r\n        if (hookedFish && hookedFish.fishID === fishID) {\r\n            setFishCoords(baitLakeCoords)\r\n        }\r\n    }, [hookedFish, fishID, baitLakeCoords])\r\n\r\n    // Fish struggles when it gets hooked\r\n    const isStruggling = useMemo((): boolean => hookedFish && hookedFish.fishID === fishID, [hookedFish, fishID])\r\n\r\n    useLayoutEffect(() => {\r\n        // Stop roaming when fish starts struggling\r\n        if (isStruggling) setIsRoaming(false)\r\n        else {\r\n            // After fish was mounted or released from hook,\r\n            // start roaming at random position within area\r\n            setIsRoaming(true)\r\n            setFishCoords({\r\n                x: randomIntFromInterval(area.from.x, area.to.x),\r\n                y: randomIntFromInterval(area.from.y, area.to.y)\r\n            })\r\n        }\r\n    }, [isStruggling, area])\r\n\r\n    // All other fishes disappear when fish gets hooked\r\n    if (hookedFish && hookedFish.fishID !== fishID) return null\r\n\r\n    return <><div\r\n        className={`\r\n            ${className} \r\n            ${styles.defaultFish} \r\n            ${isStruggling ? styles.struggling : ''} \r\n            ${canTryToCatch ? styles.canTryToCatch : ''} \r\n            ${wouldHookSuccessfully ? styles.wouldHookSuccessfully : ''}\r\n        `}\r\n        style={{\r\n            fontSize: `${size}px`,\r\n            animationDelay: `${Math.random()}s`,\r\n            transform: `\r\n                translate(\r\n                    ${fishPath.from.x - (isFishHorizontal ? 0 : fishHeight/2)}px,\r\n                     ${fishPath.from.y + (isFishHorizontal ? 0 : fishHeight)}px\r\n                )\r\n                 rotate(${fishDirection + 90}deg)\r\n            `,\r\n            left: 0,\r\n            top: 0,\r\n            transition: moveTransition,\r\n            opacity\r\n        }}\r\n    >\r\n        {children}\r\n    </div>\r\n    <div\r\n        className={styles.fishPath}\r\n        ref={fishPathRef}\r\n        style={{\r\n            left: fishPath.from.x,\r\n            top: fishPath.from.y,\r\n            width: fishPath.to.x - fishPath.from.x,\r\n            height: fishPath.to.y - fishPath.from.y,\r\n            transition: moveTransition,\r\n            opacity\r\n        }}\r\n    >\r\n        {isInScope && isRoaming && (\r\n            /* Emoji indicating whether the fish is attracted by the bait */\r\n            <div className={styles.likeStatus} style={{ opacity }}>\r\n                {likesBait ? <FaHeart className={styles.heart} />\r\n                : <FaTimes className={styles.times} />}\r\n            </div>\r\n        )}\r\n    </div>\r\n    <div\r\n        className={`\r\n            ${styles.detectionPath}\r\n            ${isStruggling ? styles.struggling : ''} \r\n        `}\r\n        style={{\r\n            left: detectionPath.from.x,\r\n            top: detectionPath.from.y,\r\n            width: detectionPath.to.x - detectionPath.from.x,\r\n            height: detectionPath.to.y - detectionPath.from.y,\r\n            opacity\r\n        }}\r\n    ></div>\r\n    {hookedFish && <div className={styles.focusBG}></div>}\r\n    </>\r\n}\r\n\r\nexport default React.memo(DefaultFish)","C:\\www\\react-fishing-game\\src\\components\\misc\\Modal\\index.tsx",["419"],"import React, { ReactNode, useState, useCallback, useImperativeHandle, useRef, useEffect } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport styles from './index.module.sass'\r\n\r\ninterface Props {\r\n    onClose: any,\r\n    className?: string,\r\n    style?: any,\r\n    transition?: number,\r\n    children?: ReactNode\r\n}\r\n\r\nconst Modal = React.forwardRef<any, Props>(({\r\n    onClose,\r\n    transition = .3,\r\n    className = '',\r\n    style = {},\r\n    children\r\n}, ref) => {\r\n    const [isClosing, setIsClosing] = useState<boolean>(false)\r\n    const closeModal = useCallback(\r\n        (): void => {\r\n            setIsClosing(true)\r\n            timerID.current = window.setTimeout(() => {\r\n                onClose()\r\n            }, transition*1000)\r\n        }, [onClose]\r\n    )\r\n    const timerID = useRef<number>(null)\r\n    useEffect(() => () => window.clearTimeout(timerID.current), [])\r\n    useImperativeHandle(ref, () => ({ closeModal }), [closeModal])\r\n\r\n    return ReactDOM.createPortal(\r\n        (\r\n            <div\r\n                className={`${styles.modalWrapper} ${isClosing ? styles.closing : ''}`}\r\n                onClick={closeModal}\r\n                style={{ transition: `all ease ${transition}s`, animationDuration: `${transition}s` }}\r\n            >\r\n                <div className={`${styles.modalWindow} ${className}`} style={style} onClick={e => e.stopPropagation()}>\r\n                    {children}\r\n                </div>\r\n            </div>\r\n        ), document.getElementById('portal')\r\n    )\r\n})\r\n\r\nModal.defaultProps = {\r\n    children: null,\r\n    style: null,\r\n    className: '',\r\n    onClose: () => false\r\n}\r\n\r\nexport default Modal","C:\\www\\react-fishing-game\\src\\components\\Game\\areas\\FishArea\\index.tsx",["420"],"import React, { FC, useRef } from 'react'\r\nimport FishGroup from '../FishGroup'\r\nimport { randomIntFromInterval } from '../../../../utils/math'\r\nimport { Fish } from '../../../../interfaces/fishes'\r\nimport { Path } from '../../../../interfaces/position'\r\nimport { v4 as uuid } from 'uuid'\r\n\r\ninterface FishEntryProps {\r\n    size: number[],\r\n    strength: number[],\r\n    [key: string]: any\r\n}\r\n\r\ninterface FishEntry {\r\n    amount: number,\r\n    component: any,\r\n    fish: Fish,\r\n    props: any\r\n}\r\n\r\ninterface Props {\r\n    path: Path,\r\n    fishes: FishEntry[],\r\n}\r\n\r\nconst FishArea: FC<Props> = ({ path, fishes }) => {\r\n    const fishGroupID = useRef<string>(uuid())\r\n\r\n    return <FishGroup groupID={fishGroupID.current} path={path} render={groupProps => {\r\n        return (\r\n         /* Pass props to each fish */\r\n        fishes\r\n        .map((fishEntry: FishEntry) => {\r\n            const { amount, fish, props } = fishEntry\r\n            const Fish: any = fishEntry.component\r\n            // Render \"amount\" times the provided component\r\n            let result = []\r\n            for (let i = 0; i < amount; i++) {\r\n                const fishID = uuid()\r\n\r\n                result.push(\r\n                    <Fish\r\n                        key={fishID}\r\n                        fishID={fishID}\r\n                        fish={fish}\r\n                        groupID={fishGroupID.current}\r\n                        {...props}\r\n                        {...groupProps}\r\n                        area={groupProps.path}\r\n                        // Generate random props for a unique fish\r\n                        size={randomIntFromInterval(props.size[0], props.size[1])}\r\n                        strength={randomIntFromInterval(props.strength[0], props.strength[1])}\r\n                     />\r\n                )\r\n            }\r\n            return result\r\n        })\r\n        .flat()\r\n    )}} />\r\n}\r\n\r\nexport default React.memo(FishArea)","C:\\www\\react-fishing-game\\src\\components\\Game\\areas\\FishGroup\\index.tsx",["421"],"import React, { ReactNode, Fragment, useEffect, useState, useRef, useMemo } from 'react'\r\nimport { Path } from '../../../../interfaces/position'\r\nimport styles from './index.module.sass'\r\n\r\n// Redux\r\nimport { useSelector } from 'react-redux'\r\nimport { hookedFishSelector } from '../../../../store/selectors/fishing'\r\n\r\ninterface Props {\r\n    groupID: string,\r\n    path: Path,\r\n    render?: (Path) => ReactNode\r\n}\r\n\r\nconst FishGroup = ({ groupID, path, render }) => {\r\n    const [isGroupVisible, setIsGroupVisible] = useState<boolean>(false)\r\n    const groupRef = useRef<HTMLDivElement>(null)\r\n\r\n    // Redux\r\n    const hookedFish = useSelector(hookedFishSelector)\r\n\r\n    // Use intersection observer API to render fishes only if their area is in viewport\r\n    useEffect(() => {\r\n        const options: any = {\r\n            root: null,\r\n            rootMargin: '0px',\r\n            threshold: 0.1\r\n        }\r\n        const observer: IntersectionObserver = new IntersectionObserver((entries, observer) => {\r\n            const group = entries[0]\r\n            group.isIntersecting ? setIsGroupVisible(true) : setIsGroupVisible(false)\r\n        }, options)\r\n\r\n        if (groupRef.current) observer.observe(groupRef.current)\r\n\r\n        return () => observer.disconnect()\r\n    }, [])\r\n\r\n    // Decide whether to render fishes\r\n    const mustRender = useMemo((): boolean => {\r\n        if (!hookedFish) return isGroupVisible\r\n\r\n        // If fish gets hooked, render it no matter if its area is outside of viewport\r\n        return hookedFish.groupID === groupID\r\n    }, [isGroupVisible, hookedFish, groupID])\r\n\r\n    // Use a ref to prevent rerendering of fishes, generating a new uuid for hooked fish\r\n    const renderRef = useRef<any>(render({ path }))\r\n\r\n    return <>\r\n        <div\r\n            ref={groupRef}\r\n            className={styles.fishGroup}\r\n            style={{\r\n                left: path.from.x,\r\n                top: path.from.y,\r\n                width: path.to.x - path.from.x,\r\n                height: path.to.y - path.from.y\r\n            }}\r\n        ></div>\r\n    {mustRender && renderRef.current}\r\n    </>\r\n}\r\n\r\nexport default React.memo(FishGroup)","C:\\www\\react-fishing-game\\src\\interfaces\\position.ts",[],"C:\\www\\react-fishing-game\\src\\hooks\\useLazyAudio\\index.ts",["422","423","424"],"C:\\www\\react-fishing-game\\src\\utils\\tests\\time.test.ts",[],["425","426"],"C:\\www\\react-fishing-game\\src\\utils\\tests\\position.test.ts",["427"],"import {\r\n    pxToM, mToPx,\r\n    formatMeters,\r\n    getVectorLength,\r\n    getNextCoordinatesOfPath,\r\n    areCoordinatesInPath,\r\n    getAngleFromVerticalAxis\r\n} from '../position'\r\nimport { Path, Coordinates } from '../../interfaces/position'\r\n\r\ndescribe('position module', () => {\r\n    test('should convert distance symetrically', () => {\r\n        const testValue = 5\r\n        expect(typeof mToPx(testValue) === 'number').toBe(true)\r\n        expect(typeof pxToM(testValue) === 'number').toBe(true)\r\n        expect(mToPx(pxToM(testValue))).toBe(testValue)\r\n    })\r\n\r\n    test('formatMeters', () => {\r\n        expect(formatMeters(0)).toBe('0cm')\r\n        expect(formatMeters(.99)).toBe('99cm')\r\n        expect(formatMeters(1)).toBe('1m')\r\n        expect(formatMeters(1.01)).toBe('1.01m')\r\n        expect(formatMeters(-.5)).toBe('-50cm')\r\n    })\r\n\r\n    test('getVectorLength', () => {\r\n        // Distance should be 0 when from and to are the same coordinates\r\n        const fromEqualsTo: Path = {\r\n            from: { x: 322, y: 185 },\r\n            to: { x: 322, y: 185 }\r\n        }\r\n        expect(getVectorLength(fromEqualsTo)).toBe(0)\r\n\r\n        // Test typical output\r\n        const typicalPath: Path = {from: {x: 100, y: 100}, to: {x: 200, y: 200}}\r\n        const typicalOutput: number = getVectorLength(typicalPath)\r\n        expect(typeof typicalOutput === 'number').toBe(true)\r\n        expect(typicalOutput).toBe(141.4213562373095)\r\n\r\n        // Value should be absolute\r\n        const upVector: Path = {\r\n            from: {x: 0, y: 0},\r\n            to: {x: 0, y: -100}\r\n        }\r\n        const downVector: Path = {\r\n            from: {x: 0, y: 0},\r\n            to: {x: 0, y: 100}\r\n        }\r\n        expect(getVectorLength(upVector)).toBe(getVectorLength(downVector))\r\n    })\r\n\r\n    test('getNextCoordinatesOfPath', () => {\r\n        // If hypotenuse length is 0, next coordinates are current\r\n        expect(getNextCoordinatesOfPath(90, 0)).toStrictEqual({ x: 0, y: 0 })\r\n\r\n        // Test typical output\r\n        expect(getNextCoordinatesOfPath(15, 100000000000000000))\r\n        .toStrictEqual({x: 25881904510252070, y: 96592582628906830})\r\n    })\r\n\r\n    test('areCoordinatesInPath', () => {\r\n        // Coordinates are outside\r\n        expect(\r\n            areCoordinatesInPath(\r\n                { x: 0, y: 0 },\r\n                {\r\n                    from: { x: 10, y: 10 },\r\n                    to: { x: 20, y: 20 }\r\n                }\r\n            )\r\n        ).toBe(false)\r\n\r\n        // Coordinates are inside\r\n        expect(\r\n            areCoordinatesInPath(\r\n                { x: 0, y: 0 },\r\n                {\r\n                    from: { x: -10, y: -10 },\r\n                    to: { x: 10, y: 10 }\r\n                }\r\n            )\r\n        ).toBe(true)\r\n    })\r\n\r\n    test('getAngleFromVerticalAxis', () => {\r\n        // Angle should be 0 if vector is vertical\r\n        expect(getAngleFromVerticalAxis({\r\n            from: { x: 0, y: 0 },\r\n            to: { x: 0, y: 100 }\r\n        })).toBe(0)\r\n        expect(getAngleFromVerticalAxis({\r\n            from: { x: 0, y: 0 },\r\n            to: { x: 0, y: -100 }\r\n        })).toBe(0)\r\n        expect(getAngleFromVerticalAxis({\r\n            from: { x: 100, y: 0 },\r\n            to: { x: 100, y: 100 }\r\n        })).toBe(0)\r\n\r\n        // Test typical positive vector\r\n        const typicalPosVector = {\r\n            from: { x: 40, y: 20 },\r\n            to: { x: 120, y: 50 }\r\n        }\r\n        expect(\r\n            getAngleFromVerticalAxis(typicalPosVector)\r\n            .toPrecision(4)\r\n        ).toBe('1.212')\r\n\r\n        // Test typical negative vector\r\n        const typicalNegVector = {\r\n            from: { x: 120, y: 20 },\r\n            to: { x: 40, y: 50 }\r\n        }\r\n        expect(\r\n            getAngleFromVerticalAxis(typicalNegVector)\r\n            .toPrecision(4)\r\n        ).toBe('-1.212')\r\n    })\r\n})","C:\\www\\react-fishing-game\\src\\utils\\tests\\math.test.ts",[],"C:\\www\\react-fishing-game\\src\\setupTests.ts",[],"C:\\www\\react-fishing-game\\src\\react-app-env.d.ts",[],"C:\\www\\react-fishing-game\\src\\interfaces\\items.ts",[],"C:\\www\\react-fishing-game\\src\\interfaces\\fishes.ts",["428"],"C:\\www\\react-fishing-game\\src\\interfaces\\evolution.ts",[],{"ruleId":"429","severity":1,"message":"430","line":1,"column":43,"nodeType":"431","messageId":"432","endLine":1,"endColumn":52},{"ruleId":"433","severity":1,"message":"434","line":87,"column":8,"nodeType":"435","endLine":87,"endColumn":22,"suggestions":"436"},{"ruleId":"433","severity":1,"message":"437","line":138,"column":8,"nodeType":"435","endLine":138,"endColumn":36,"suggestions":"438"},{"ruleId":"433","severity":1,"message":"439","line":144,"column":8,"nodeType":"435","endLine":144,"endColumn":10,"suggestions":"440"},{"ruleId":"429","severity":1,"message":"441","line":154,"column":17,"nodeType":"431","messageId":"432","endLine":154,"endColumn":23},{"ruleId":"433","severity":1,"message":"442","line":176,"column":9,"nodeType":"435","endLine":176,"endColumn":28,"suggestions":"443"},{"ruleId":"433","severity":1,"message":"444","line":198,"column":8,"nodeType":"435","endLine":198,"endColumn":64,"suggestions":"445"},{"ruleId":"433","severity":1,"message":"446","line":207,"column":12,"nodeType":"435","endLine":207,"endColumn":41,"suggestions":"447"},{"ruleId":"433","severity":1,"message":"448","line":218,"column":9,"nodeType":"435","endLine":218,"endColumn":44,"suggestions":"449"},{"ruleId":"433","severity":1,"message":"450","line":286,"column":8,"nodeType":"435","endLine":286,"endColumn":24,"suggestions":"451"},{"ruleId":"452","severity":1,"message":"453","line":305,"column":17,"nodeType":"454","messageId":"455","endLine":305,"endColumn":22},{"ruleId":"452","severity":1,"message":"453","line":328,"column":17,"nodeType":"454","messageId":"455","endLine":328,"endColumn":22},{"ruleId":"452","severity":1,"message":"453","line":343,"column":17,"nodeType":"454","messageId":"455","endLine":343,"endColumn":22},{"ruleId":"433","severity":1,"message":"456","line":361,"column":8,"nodeType":"435","endLine":375,"endColumn":6,"suggestions":"457"},{"ruleId":"433","severity":1,"message":"458","line":396,"column":8,"nodeType":"435","endLine":396,"endColumn":28,"suggestions":"459"},{"ruleId":"452","severity":1,"message":"453","line":509,"column":17,"nodeType":"454","messageId":"455","endLine":509,"endColumn":22},{"ruleId":"460","replacedBy":"461"},{"ruleId":"462","replacedBy":"463"},{"ruleId":"433","severity":1,"message":"464","line":42,"column":8,"nodeType":"435","endLine":42,"endColumn":10,"suggestions":"465"},{"ruleId":"452","severity":1,"message":"453","line":48,"column":17,"nodeType":"454","messageId":"455","endLine":48,"endColumn":22},{"ruleId":"452","severity":1,"message":"453","line":51,"column":17,"nodeType":"454","messageId":"455","endLine":51,"endColumn":22},{"ruleId":"433","severity":1,"message":"466","line":63,"column":8,"nodeType":"435","endLine":63,"endColumn":49,"suggestions":"467"},{"ruleId":"433","severity":1,"message":"468","line":49,"column":53,"nodeType":"435","endLine":49,"endColumn":55,"suggestions":"469"},{"ruleId":"433","severity":1,"message":"468","line":52,"column":54,"nodeType":"435","endLine":52,"endColumn":56,"suggestions":"470"},{"ruleId":"433","severity":1,"message":"471","line":81,"column":12,"nodeType":"435","endLine":81,"endColumn":31,"suggestions":"472"},{"ruleId":"433","severity":1,"message":"473","line":90,"column":8,"nodeType":"435","endLine":90,"endColumn":10,"suggestions":"474"},{"ruleId":"433","severity":1,"message":"475","line":97,"column":8,"nodeType":"435","endLine":97,"endColumn":10,"suggestions":"476"},{"ruleId":"433","severity":1,"message":"477","line":104,"column":12,"nodeType":"435","endLine":104,"endColumn":54,"suggestions":"478"},{"ruleId":"433","severity":1,"message":"479","line":188,"column":26,"nodeType":"431","endLine":188,"endColumn":33},{"ruleId":"433","severity":1,"message":"480","line":193,"column":8,"nodeType":"435","endLine":193,"endColumn":43,"suggestions":"481"},{"ruleId":"429","severity":1,"message":"482","line":68,"column":23,"nodeType":"431","messageId":"432","endLine":68,"endColumn":35},{"ruleId":"433","severity":1,"message":"468","line":72,"column":86,"nodeType":"435","endLine":72,"endColumn":88,"suggestions":"483"},{"ruleId":"433","severity":1,"message":"484","line":96,"column":12,"nodeType":"435","endLine":96,"endColumn":14,"suggestions":"485"},{"ruleId":"433","severity":1,"message":"486","line":104,"column":8,"nodeType":"435","endLine":104,"endColumn":10,"suggestions":"487"},{"ruleId":"433","severity":1,"message":"475","line":107,"column":73,"nodeType":"435","endLine":107,"endColumn":75,"suggestions":"488"},{"ruleId":"433","severity":1,"message":"489","line":117,"column":12,"nodeType":"435","endLine":117,"endColumn":24,"suggestions":"490"},{"ruleId":"433","severity":1,"message":"491","line":198,"column":8,"nodeType":"435","endLine":198,"endColumn":86,"suggestions":"492"},{"ruleId":"433","severity":1,"message":"493","line":212,"column":12,"nodeType":"435","endLine":212,"endColumn":32,"suggestions":"494"},{"ruleId":"433","severity":1,"message":"495","line":354,"column":26,"nodeType":"431","endLine":354,"endColumn":33},{"ruleId":"433","severity":1,"message":"496","line":357,"column":8,"nodeType":"435","endLine":364,"endColumn":6,"suggestions":"497"},{"ruleId":"433","severity":1,"message":"498","line":432,"column":8,"nodeType":"435","endLine":432,"endColumn":31,"suggestions":"499"},{"ruleId":"433","severity":1,"message":"500","line":138,"column":44,"nodeType":"431","endLine":138,"endColumn":57},{"ruleId":"433","severity":1,"message":"501","line":195,"column":12,"nodeType":"435","endLine":195,"endColumn":51,"suggestions":"502"},{"ruleId":"433","severity":1,"message":"503","line":253,"column":8,"nodeType":"435","endLine":253,"endColumn":75,"suggestions":"504"},{"ruleId":"433","severity":1,"message":"505","line":262,"column":8,"nodeType":"435","endLine":262,"endColumn":25,"suggestions":"506"},{"ruleId":"433","severity":1,"message":"507","line":271,"column":8,"nodeType":"435","endLine":271,"endColumn":22,"suggestions":"508"},{"ruleId":"433","severity":1,"message":"509","line":280,"column":12,"nodeType":"435","endLine":280,"endColumn":14,"suggestions":"510"},{"ruleId":"433","severity":1,"message":"511","line":292,"column":8,"nodeType":"435","endLine":292,"endColumn":10,"suggestions":"512"},{"ruleId":"452","severity":1,"message":"453","line":38,"column":17,"nodeType":"454","messageId":"455","endLine":38,"endColumn":22},{"ruleId":"452","severity":1,"message":"453","line":41,"column":17,"nodeType":"454","messageId":"455","endLine":41,"endColumn":22},{"ruleId":"452","severity":1,"message":"453","line":44,"column":17,"nodeType":"454","messageId":"455","endLine":44,"endColumn":22},{"ruleId":"452","severity":1,"message":"453","line":47,"column":17,"nodeType":"454","messageId":"455","endLine":47,"endColumn":22},{"ruleId":"452","severity":1,"message":"453","line":50,"column":17,"nodeType":"454","messageId":"455","endLine":50,"endColumn":22},{"ruleId":"433","severity":1,"message":"513","line":66,"column":8,"nodeType":"435","endLine":66,"endColumn":21,"suggestions":"514"},{"ruleId":"433","severity":1,"message":"515","line":76,"column":8,"nodeType":"435","endLine":76,"endColumn":18,"suggestions":"516"},{"ruleId":"452","severity":1,"message":"453","line":83,"column":17,"nodeType":"454","messageId":"455","endLine":83,"endColumn":22},{"ruleId":"452","severity":1,"message":"453","line":86,"column":17,"nodeType":"454","messageId":"455","endLine":86,"endColumn":22},{"ruleId":"452","severity":1,"message":"453","line":89,"column":17,"nodeType":"454","messageId":"455","endLine":89,"endColumn":22},{"ruleId":"452","severity":1,"message":"453","line":92,"column":17,"nodeType":"454","messageId":"455","endLine":92,"endColumn":22},{"ruleId":"452","severity":1,"message":"453","line":95,"column":17,"nodeType":"454","messageId":"455","endLine":95,"endColumn":22},{"ruleId":"452","severity":1,"message":"453","line":105,"column":17,"nodeType":"454","messageId":"455","endLine":105,"endColumn":22},{"ruleId":"452","severity":1,"message":"453","line":108,"column":17,"nodeType":"454","messageId":"455","endLine":108,"endColumn":22},{"ruleId":"452","severity":1,"message":"453","line":111,"column":17,"nodeType":"454","messageId":"455","endLine":111,"endColumn":22},{"ruleId":"452","severity":1,"message":"453","line":114,"column":17,"nodeType":"454","messageId":"455","endLine":114,"endColumn":22},{"ruleId":"452","severity":1,"message":"453","line":117,"column":17,"nodeType":"454","messageId":"455","endLine":117,"endColumn":22},{"ruleId":"429","severity":1,"message":"517","line":1,"column":42,"nodeType":"431","messageId":"432","endLine":1,"endColumn":49},{"ruleId":"433","severity":1,"message":"518","line":51,"column":8,"nodeType":"435","endLine":51,"endColumn":10,"suggestions":"519"},{"ruleId":"433","severity":1,"message":"520","line":90,"column":12,"nodeType":"435","endLine":90,"endColumn":57,"suggestions":"521"},{"ruleId":"433","severity":1,"message":"475","line":98,"column":8,"nodeType":"435","endLine":98,"endColumn":10,"suggestions":"522"},{"ruleId":"433","severity":1,"message":"505","line":121,"column":8,"nodeType":"435","endLine":121,"endColumn":19,"suggestions":"523"},{"ruleId":"524","severity":1,"message":"525","line":22,"column":1,"nodeType":"526","endLine":32,"endColumn":2},{"ruleId":"452","severity":1,"message":"453","line":29,"column":13,"nodeType":"454","messageId":"455","endLine":29,"endColumn":18},{"ruleId":"524","severity":1,"message":"525","line":41,"column":1,"nodeType":"526","endLine":118,"endColumn":2},{"ruleId":"452","severity":1,"message":"453","line":45,"column":13,"nodeType":"454","messageId":"455","endLine":45,"endColumn":18},{"ruleId":"452","severity":1,"message":"453","line":52,"column":13,"nodeType":"454","messageId":"455","endLine":52,"endColumn":18},{"ruleId":"452","severity":1,"message":"453","line":55,"column":13,"nodeType":"454","messageId":"455","endLine":55,"endColumn":18},{"ruleId":"452","severity":1,"message":"453","line":58,"column":13,"nodeType":"454","messageId":"455","endLine":58,"endColumn":18},{"ruleId":"452","severity":1,"message":"453","line":86,"column":13,"nodeType":"454","messageId":"455","endLine":86,"endColumn":18},{"ruleId":"452","severity":1,"message":"453","line":104,"column":13,"nodeType":"454","messageId":"455","endLine":104,"endColumn":18},{"ruleId":"452","severity":1,"message":"453","line":112,"column":13,"nodeType":"454","messageId":"455","endLine":112,"endColumn":18},{"ruleId":"452","severity":1,"message":"453","line":115,"column":13,"nodeType":"454","messageId":"455","endLine":115,"endColumn":18},{"ruleId":"429","severity":1,"message":"527","line":5,"column":10,"nodeType":"431","messageId":"432","endLine":5,"endColumn":14},{"ruleId":"524","severity":1,"message":"525","line":67,"column":1,"nodeType":"526","endLine":145,"endColumn":2},{"ruleId":"528","severity":1,"message":"529","line":82,"column":41,"nodeType":"530","messageId":"531","endLine":82,"endColumn":42,"fix":"532"},{"ruleId":"452","severity":1,"message":"453","line":109,"column":13,"nodeType":"454","messageId":"455","endLine":109,"endColumn":18},{"ruleId":"452","severity":1,"message":"453","line":141,"column":13,"nodeType":"454","messageId":"455","endLine":141,"endColumn":18},{"ruleId":"524","severity":1,"message":"525","line":33,"column":1,"nodeType":"526","endLine":61,"endColumn":2},{"ruleId":"452","severity":1,"message":"453","line":37,"column":13,"nodeType":"454","messageId":"455","endLine":37,"endColumn":18},{"ruleId":"452","severity":1,"message":"453","line":41,"column":13,"nodeType":"454","messageId":"455","endLine":41,"endColumn":18},{"ruleId":"452","severity":1,"message":"453","line":44,"column":13,"nodeType":"454","messageId":"455","endLine":44,"endColumn":18},{"ruleId":"452","severity":1,"message":"453","line":47,"column":13,"nodeType":"454","messageId":"455","endLine":47,"endColumn":18},{"ruleId":"452","severity":1,"message":"453","line":50,"column":13,"nodeType":"454","messageId":"455","endLine":50,"endColumn":18},{"ruleId":"452","severity":1,"message":"453","line":53,"column":13,"nodeType":"454","messageId":"455","endLine":53,"endColumn":18},{"ruleId":"452","severity":1,"message":"453","line":58,"column":13,"nodeType":"454","messageId":"455","endLine":58,"endColumn":18},{"ruleId":"433","severity":1,"message":"533","line":51,"column":8,"nodeType":"435","endLine":51,"endColumn":29,"suggestions":"534"},{"ruleId":"535","severity":1,"message":"536","line":60,"column":26,"nodeType":"537","messageId":"538","endLine":60,"endColumn":28},{"ruleId":"452","severity":1,"message":"453","line":99,"column":17,"nodeType":"454","messageId":"455","endLine":99,"endColumn":22},{"ruleId":"452","severity":1,"message":"453","line":105,"column":17,"nodeType":"454","messageId":"455","endLine":105,"endColumn":22},{"ruleId":"452","severity":1,"message":"453","line":111,"column":17,"nodeType":"454","messageId":"455","endLine":111,"endColumn":22},{"ruleId":"429","severity":1,"message":"539","line":9,"column":42,"nodeType":"431","messageId":"432","endLine":9,"endColumn":51},{"ruleId":"433","severity":1,"message":"540","line":42,"column":8,"nodeType":"435","endLine":42,"endColumn":33,"suggestions":"541"},{"ruleId":"452","severity":1,"message":"453","line":71,"column":17,"nodeType":"454","messageId":"455","endLine":71,"endColumn":22},{"ruleId":"452","severity":1,"message":"453","line":105,"column":17,"nodeType":"454","messageId":"455","endLine":105,"endColumn":22},{"ruleId":"433","severity":1,"message":"542","line":107,"column":8,"nodeType":"435","endLine":115,"endColumn":6,"suggestions":"543"},{"ruleId":"544","severity":1,"message":"545","line":13,"column":21,"nodeType":"546","endLine":13,"endColumn":36},{"ruleId":"544","severity":1,"message":"545","line":28,"column":33,"nodeType":"546","endLine":28,"endColumn":48},{"ruleId":"544","severity":1,"message":"545","line":43,"column":33,"nodeType":"546","endLine":43,"endColumn":48},{"ruleId":"429","severity":1,"message":"547","line":1,"column":41,"nodeType":"431","messageId":"432","endLine":1,"endColumn":49},{"ruleId":"429","severity":1,"message":"548","line":1,"column":54,"nodeType":"431","messageId":"432","endLine":1,"endColumn":62},{"ruleId":"452","severity":1,"message":"453","line":54,"column":17,"nodeType":"454","messageId":"455","endLine":54,"endColumn":22},{"ruleId":"433","severity":1,"message":"549","line":57,"column":8,"nodeType":"435","endLine":57,"endColumn":33,"suggestions":"550"},{"ruleId":"433","severity":1,"message":"468","line":88,"column":132,"nodeType":"435","endLine":88,"endColumn":134,"suggestions":"551"},{"ruleId":"433","severity":1,"message":"468","line":89,"column":99,"nodeType":"435","endLine":89,"endColumn":101,"suggestions":"552"},{"ruleId":"433","severity":1,"message":"468","line":90,"column":94,"nodeType":"435","endLine":90,"endColumn":96,"suggestions":"553"},{"ruleId":"433","severity":1,"message":"468","line":91,"column":82,"nodeType":"435","endLine":91,"endColumn":84,"suggestions":"554"},{"ruleId":"433","severity":1,"message":"468","line":92,"column":88,"nodeType":"435","endLine":92,"endColumn":90,"suggestions":"555"},{"ruleId":"452","severity":1,"message":"453","line":102,"column":17,"nodeType":"454","messageId":"455","endLine":102,"endColumn":22},{"ruleId":"433","severity":1,"message":"549","line":105,"column":8,"nodeType":"435","endLine":105,"endColumn":33,"suggestions":"556"},{"ruleId":"433","severity":1,"message":"557","line":183,"column":8,"nodeType":"435","endLine":183,"endColumn":70,"suggestions":"558"},{"ruleId":"433","severity":1,"message":"559","line":198,"column":8,"nodeType":"435","endLine":198,"endColumn":24,"suggestions":"560"},{"ruleId":"433","severity":1,"message":"542","line":333,"column":8,"nodeType":"435","endLine":333,"endColumn":54,"suggestions":"561"},{"ruleId":"433","severity":1,"message":"562","line":65,"column":8,"nodeType":"435","endLine":65,"endColumn":21,"suggestions":"563"},{"ruleId":"433","severity":1,"message":"564","line":89,"column":8,"nodeType":"435","endLine":89,"endColumn":61,"suggestions":"565"},{"ruleId":"433","severity":1,"message":"566","line":166,"column":8,"nodeType":"435","endLine":166,"endColumn":60,"suggestions":"567"},{"ruleId":"433","severity":1,"message":"568","line":188,"column":12,"nodeType":"435","endLine":198,"endColumn":10,"suggestions":"569"},{"ruleId":"433","severity":1,"message":"562","line":206,"column":8,"nodeType":"435","endLine":206,"endColumn":10,"suggestions":"570"},{"ruleId":"429","severity":1,"message":"571","line":244,"column":11,"nodeType":"431","messageId":"432","endLine":244,"endColumn":27},{"ruleId":"572","severity":1,"message":"573","line":59,"column":61,"nodeType":"574","messageId":"575","endLine":59,"endColumn":63},{"ruleId":"433","severity":1,"message":"562","line":83,"column":8,"nodeType":"435","endLine":83,"endColumn":21,"suggestions":"576"},{"ruleId":"433","severity":1,"message":"577","line":108,"column":8,"nodeType":"435","endLine":108,"endColumn":48,"suggestions":"578"},{"ruleId":"433","severity":1,"message":"566","line":187,"column":8,"nodeType":"435","endLine":187,"endColumn":59,"suggestions":"579"},{"ruleId":"433","severity":1,"message":"580","line":210,"column":12,"nodeType":"435","endLine":219,"endColumn":10,"suggestions":"581"},{"ruleId":"433","severity":1,"message":"562","line":227,"column":8,"nodeType":"435","endLine":227,"endColumn":10,"suggestions":"582"},{"ruleId":"433","severity":1,"message":"559","line":242,"column":8,"nodeType":"435","endLine":242,"endColumn":24,"suggestions":"583"},{"ruleId":"429","severity":1,"message":"571","line":290,"column":11,"nodeType":"431","messageId":"432","endLine":290,"endColumn":27},{"ruleId":"429","severity":1,"message":"584","line":81,"column":11,"nodeType":"431","messageId":"432","endLine":81,"endColumn":19},{"ruleId":"433","severity":1,"message":"468","line":86,"column":109,"nodeType":"435","endLine":86,"endColumn":111,"suggestions":"585"},{"ruleId":"433","severity":1,"message":"468","line":87,"column":102,"nodeType":"435","endLine":87,"endColumn":104,"suggestions":"586"},{"ruleId":"433","severity":1,"message":"468","line":88,"column":74,"nodeType":"435","endLine":88,"endColumn":76,"suggestions":"587"},{"ruleId":"433","severity":1,"message":"468","line":89,"column":114,"nodeType":"435","endLine":89,"endColumn":116,"suggestions":"588"},{"ruleId":"433","severity":1,"message":"468","line":90,"column":117,"nodeType":"435","endLine":90,"endColumn":119,"suggestions":"589"},{"ruleId":"433","severity":1,"message":"590","line":167,"column":12,"nodeType":"435","endLine":167,"endColumn":42,"suggestions":"591"},{"ruleId":"433","severity":1,"message":"592","line":217,"column":12,"nodeType":"435","endLine":217,"endColumn":47,"suggestions":"593"},{"ruleId":"433","severity":1,"message":"594","line":237,"column":12,"nodeType":"435","endLine":237,"endColumn":95,"suggestions":"595"},{"ruleId":"433","severity":1,"message":"596","line":391,"column":8,"nodeType":"435","endLine":391,"endColumn":104,"suggestions":"597"},{"ruleId":"433","severity":1,"message":"598","line":27,"column":12,"nodeType":"435","endLine":27,"endColumn":21,"suggestions":"599"},{"ruleId":"429","severity":1,"message":"600","line":8,"column":11,"nodeType":"431","messageId":"432","endLine":8,"endColumn":25},{"ruleId":"429","severity":1,"message":"601","line":9,"column":11,"nodeType":"431","messageId":"432","endLine":9,"endColumn":16},{"ruleId":"524","severity":1,"message":"602","line":9,"column":1,"nodeType":"526","endLine":29,"endColumn":2},{"ruleId":"433","severity":1,"message":"603","line":28,"column":8,"nodeType":"431","endLine":28,"endColumn":12},{"ruleId":"433","severity":1,"message":"604","line":28,"column":8,"nodeType":"431","endLine":28,"endColumn":12,"suggestions":"605"},{"ruleId":"460","replacedBy":"461"},{"ruleId":"462","replacedBy":"463"},{"ruleId":"429","severity":1,"message":"606","line":9,"column":16,"nodeType":"431","messageId":"432","endLine":9,"endColumn":27},{"ruleId":"429","severity":1,"message":"527","line":1,"column":10,"nodeType":"431","messageId":"432","endLine":1,"endColumn":14},"@typescript-eslint/no-unused-vars","'ReactNode' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'creekBE'. Either include it or remove the dependency array.","ArrayExpression",["607"],"React Hook useEffect has a missing dependency: 'backgroundMusic'. Either include it or remove the dependency array.",["608"],"React Hook useEffect has a missing dependency: 'spendOneMinute'. Either include it or remove the dependency array.",["609"],"'setMap' is assigned a value but never used.","React Hook useMemo has a missing dependency: 'rodDimensions.height'. Either include it or remove the dependency array.",["610"],"React Hook useMemo has an unnecessary dependency: 'playerCoordinates'. Either exclude it or remove the dependency array.",["611"],"React Hook useMemo has a missing dependency: 'map.shorePath.to.y'. Either include it or remove the dependency array.",["612"],"React Hook useMemo has missing dependencies: 'rodAngle' and 'rodDimensions.height'. Either include them or remove the dependency array.",["613"],"React Hook useEffect has a missing dependency: 'updateGlobalPositionState'. Either include it or remove the dependency array. If 'updateGlobalPositionState' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["614"],"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","React Hook useMemo has missing dependencies: 'isBarometerVisible', 'scrollToBait', and 'scrollToPlayer'. Either include them or remove the dependency array.",["615"],"React Hook useEffect has missing dependencies: 'map.shorePath.from.x', 'map.shorePath.from.y', 'map.shorePath.to.x', and 'map.shorePath.to.y'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setMushroom' needs the current value of 'map.shorePath.from.x'.",["616"],"no-native-reassign",["617"],"no-negated-in-lhs",["618"],"React Hook useEffect has a missing dependency: 'closeMenu'. Either include it or remove the dependency array. If 'closeMenu' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["619"],"React Hook useMemo has missing dependencies: 'lineStepMatches.steps', 'lineStepMatches.subSteps', and 'nextStep'. Either include them or remove the dependency array.",["620"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["621"],["622"],"React Hook useCallback has missing dependencies: 'isPlayerMoving', 'map.width', 'scrollToPlayer', and 'setPlayerCoordinates'. Either include them or remove the dependency array. If 'scrollToPlayer' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["623"],"React Hook useLayoutEffect has missing dependencies: 'scrollToPlayer', 'setBaitOffset', 'setBaitType', and 'setRodAngle'. Either include them or remove the dependency array. If 'scrollToPlayer' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["624"],"React Hook useEffect has missing dependencies: 'isBarometerVisible' and 'setIsBarometerVisible'. Either include them or remove the dependency array. If 'setIsBarometerVisible' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["625"],"React Hook useCallback has a missing dependency: 'setProcess'. Either include it or remove the dependency array. If 'setProcess' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["626"],"The ref value 'shoreRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'shoreRef.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has missing dependencies: 'movePlayer', 'shoreRef', and 'throwLine'. Either include them or remove the dependency array.",["627"],"'setHasThrown' is assigned a value but never used.",["628"],"React Hook useCallback has missing dependencies: 'setBaitOffset', 'setBaitType', 'setProcess', 'setRodAngle', and 'setRodOffset'. Either include them or remove the dependency array. If 'setRodAngle' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["629"],"React Hook useEffect has missing dependencies: 'scrollToPlayer', 'setBaitOffset', and 'setRodOffset'. Either include them or remove the dependency array. If 'setRodOffset' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["630"],["631"],"React Hook useCallback has missing dependencies: 'setBaitOffset', 'setRodAngle', and 'setRodOffset'. Either include them or remove the dependency array. If 'setRodAngle' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["632"],"React Hook useEffect has missing dependencies: 'badassSE', 'baitDropSE', 'baitRef', 'emitBaitFallEvent', 'lakeRef', 'scrollToBait', 'setBaitOffset', 'setBaitType', 'setIsBarometerVisible', and 'setProcess'. Either include them or remove the dependency array. If 'setIsBarometerVisible' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["633"],"React Hook useCallback has a missing dependency: 'setBaitOffset'. Either include it or remove the dependency array. If 'setBaitOffset' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["634"],"The ref value 'gaugeRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'gaugeRef.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has missing dependencies: 'changeRodDirection' and 'goBack'. Either include them or remove the dependency array.",["635"],"React Hook useMemo has an unnecessary dependency: 'gaugeValueRef.current'. Either exclude it or remove the dependency array. Mutable values like 'gaugeValueRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["636"],"Assignments to the 'recoverTensionValue' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useCallback has missing dependencies: 'scrollToBait' and 'setRodAngle'. Either include them or remove the dependency array. If 'setRodAngle' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["637"],"React Hook useEffect has a missing dependency: 'incrementLineTension'. Either include it or remove the dependency array. If 'incrementLineTension' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["638"],"React Hook useEffect has a missing dependency: 'reelingSE'. Either include it or remove the dependency array.",["639"],"React Hook useEffect has missing dependencies: 'catchNewFish', 'goBack', 'hookedFish.fish', and 'setGameProcess'. Either include them or remove the dependency array. If 'catchNewFish' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["640"],"React Hook useCallback has missing dependencies: 'reelingSE', 'setGameProcess', 'setHookedFish', and 'setLineTension'. Either include them or remove the dependency array. If 'setLineTension' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["641"],"React Hook useEffect has missing dependencies: 'hookedFish.fish.pullChance', 'hookedFish.fish.roamingInterval', and 'setIsFishPulling'. Either include them or remove the dependency array. If 'setIsFishPulling' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["642"],"React Hook useEffect has a missing dependency: 'SEPath'. Either include it or remove the dependency array.",["643"],"React Hook useEffect has missing dependencies: 'destroyNotification' and 'transition'. Either include them or remove the dependency array.",["644"],"'useMemo' is defined but never used.","React Hook useEffect has a missing dependency: 'makeBaitAvailable'. Either include it or remove the dependency array.",["645"],"React Hook useCallback has missing dependencies: 'baitOffset.x', 'baitOffset.y', 'scrollToBait', 'setBaitOffset', and 'setRodAngle'. Either include them or remove the dependency array. If 'setBaitOffset' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["646"],["647"],["648"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'Item' is defined but never used.","rest-spread-spacing","Unexpected whitespace after spread property operator.","SpreadElement","unexpectedWhitespace",{"range":"649","text":"650"},"React Hook useMemo has a missing dependency: 'sellerPhrase.length'. Either include it or remove the dependency array.",["651"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'GiFishing' is defined but never used.","React Hook useMemo has an unnecessary dependency: 'allCategories'. Either exclude it or remove the dependency array. Outer scope values like 'allCategories' aren't valid dependencies because mutating them doesn't re-render the component.",["652"],"React Hook useMemo has a missing dependency: 'setCurrentSection'. Either include it or remove the dependency array. If 'setCurrentSection' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["653"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'useState' is defined but never used.","'Fragment' is defined but never used.","React Hook useMemo has a missing dependency: 'isEquipment'. Either include it or remove the dependency array.",["654"],["655"],["656"],["657"],["658"],["659"],["660"],"React Hook useMemo has missing dependencies: 'equipItem', 'isEquipment', and 'isEquipped'. Either include them or remove the dependency array.",["661"],"React Hook useMemo has a missing dependency: 'category'. Either include it or remove the dependency array. Outer scope values like 'rodLevels' aren't valid dependencies because mutating them doesn't re-render the component.",["662"],["663"],"React Hook useEffect has a missing dependency: 'setSellerPhrase'. Either include it or remove the dependency array. If 'setSellerPhrase' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["664"],"React Hook useMemo has missing dependencies: 'saleSE' and 'setSellerPhrase'. Either include them or remove the dependency array.",["665"],"React Hook useMemo has a missing dependency: 'setSellerPhrase'. Either include it or remove the dependency array. If 'setSellerPhrase' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["666"],"React Hook useCallback has missing dependencies: 'setFocusedItem' and 'setSellerPhrase'. Either include them or remove the dependency array. If 'setSellerPhrase' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["667"],["668"],"'ForSaleItemProps' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["669"],"React Hook useMemo has missing dependencies: 'inventoryEntries', 'purchaseSE', 'setSellerPhrase', and 'thankYouSE'. Either include them or remove the dependency array.",["670"],["671"],"React Hook useCallback has missing dependencies: 'setSellerPhrase' and 'thankYouSE'. Either include them or remove the dependency array. If 'setSellerPhrase' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["672"],["673"],["674"],"'map' is assigned a value but never used.",["675"],["676"],["677"],["678"],["679"],"React Hook useCallback has an unnecessary dependency: 'opacity'. Either exclude it or remove the dependency array.",["680"],"React Hook useCallback has missing dependencies: 'baitFood._id', 'baitFood.category', 'loseBait', 'setGameNotification', and 'setGameProcess'. Either include them or remove the dependency array.",["681"],"React Hook useCallback has unnecessary dependencies: 'fishDirection', 'isInScope', and 'likesBait'. Either exclude them or remove the dependency array.",["682"],"React Hook useEffect has missing dependencies: 'fish', 'isBoss', 'makeBaitAvailable', 'pullChance', 'setGameNotification', 'setGameProcess', and 'setHookedFish'. Either include them or remove the dependency array.",["683"],"React Hook useCallback has a missing dependency: 'transition'. Either include it or remove the dependency array.",["684"],"'FishEntryProps' is defined but never used.","'Props' is defined but never used.","Assign arrow function to a variable before exporting as module default","React Hook useMemo was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useMemo has missing dependencies: 'rest' and 'src'. Either include them or remove the dependency array.",["685"],"'Coordinates' is defined but never used.",{"desc":"686","fix":"687"},{"desc":"688","fix":"689"},{"desc":"690","fix":"691"},{"desc":"692","fix":"693"},{"desc":"694","fix":"695"},{"desc":"696","fix":"697"},{"desc":"698","fix":"699"},{"desc":"700","fix":"701"},{"desc":"702","fix":"703"},{"desc":"704","fix":"705"},"no-global-assign","no-unsafe-negation",{"desc":"706","fix":"707"},{"desc":"708","fix":"709"},{"desc":"710","fix":"711"},{"desc":"710","fix":"712"},{"desc":"713","fix":"714"},{"desc":"715","fix":"716"},{"desc":"717","fix":"718"},{"desc":"719","fix":"720"},{"desc":"721","fix":"722"},{"desc":"710","fix":"723"},{"desc":"724","fix":"725"},{"desc":"726","fix":"727"},{"desc":"717","fix":"728"},{"desc":"729","fix":"730"},{"desc":"731","fix":"732"},{"desc":"733","fix":"734"},{"desc":"735","fix":"736"},{"desc":"737","fix":"738"},{"desc":"739","fix":"740"},{"desc":"741","fix":"742"},{"desc":"743","fix":"744"},{"desc":"745","fix":"746"},{"desc":"747","fix":"748"},{"desc":"749","fix":"750"},{"desc":"751","fix":"752"},{"desc":"753","fix":"754"},{"desc":"755","fix":"756"},{"desc":"757","fix":"758"},{"desc":"717","fix":"759"},{"desc":"760","fix":"761"},[2082,2083],"",{"desc":"762","fix":"763"},{"desc":"764","fix":"765"},{"desc":"766","fix":"767"},{"desc":"768","fix":"769"},{"desc":"710","fix":"770"},{"desc":"710","fix":"771"},{"desc":"710","fix":"772"},{"desc":"710","fix":"773"},{"desc":"710","fix":"774"},{"desc":"768","fix":"775"},{"desc":"776","fix":"777"},{"desc":"778","fix":"779"},{"desc":"780","fix":"781"},{"desc":"782","fix":"783"},{"desc":"784","fix":"785"},{"desc":"786","fix":"787"},{"desc":"788","fix":"789"},{"desc":"790","fix":"791"},{"desc":"782","fix":"792"},{"desc":"793","fix":"794"},{"desc":"795","fix":"796"},{"desc":"797","fix":"798"},{"desc":"790","fix":"799"},{"desc":"778","fix":"800"},{"desc":"710","fix":"801"},{"desc":"710","fix":"802"},{"desc":"710","fix":"803"},{"desc":"710","fix":"804"},{"desc":"710","fix":"805"},{"desc":"806","fix":"807"},{"desc":"808","fix":"809"},{"desc":"810","fix":"811"},{"desc":"812","fix":"813"},{"desc":"814","fix":"815"},{"desc":"816","fix":"817"},"Update the dependencies array to be: [audioEnabled, creekBE]",{"range":"818","text":"819"},"Update the dependencies array to be: [audioEnabled, backgroundMusic, isBGMEnabled]",{"range":"820","text":"821"},"Update the dependencies array to be: [spendOneMinute]",{"range":"822","text":"823"},"Update the dependencies array to be: [playerCoordinates.width, playerCoordinates.x, playerCoordinates.y, rodDimensions.height]",{"range":"824","text":"825"},"Update the dependencies array to be: [map, baitCoordinates, rodDimensions]",{"range":"826","text":"827"},"Update the dependencies array to be: [baitCoordinates.x, baitCoordinates.y, baitOffset.x, baitOffset.y, map.shorePath.to.y]",{"range":"828","text":"829"},"Update the dependencies array to be: [lineOrigin.x, lineOrigin.y, baitOffset.x, baitOffset.y, rodOffset.x, rodOffset.y, rodAngle, rodDimensions.height]",{"range":"830","text":"831"},"Update the dependencies array to be: [baitLakeCoords, updateGlobalPositionState]",{"range":"832","text":"833"},"Update the dependencies array to be: [process, setProcess, playerCoordinates, scrollToPlayer, map, isBarometerVisible, scrollToBait, rodAngle, rodOffset, baitOffset, baitOffsetLimit, baitLakeCoords, baitDistance, rodLevel, lineLength]",{"range":"834","text":"835"},"Update the dependencies array to be: [isPlayerOutOfBaits, map.shorePath.from.x, map.shorePath.from.y, map.shorePath.to.x, map.shorePath.to.y]",{"range":"836","text":"837"},"Update the dependencies array to be: [closeMenu]",{"range":"838","text":"839"},"Update the dependencies array to be: [nextStep, baitDistance, lineStepMatches.steps, lineStepMatches.subSteps]",{"range":"840","text":"841"},"Update the dependencies array to be: [dispatch]",{"range":"842","text":"843"},{"range":"844","text":"843"},"Update the dependencies array to be: [isPlayerMoving, map.width, playerCoordinates, scrollToPlayer, setPlayerCoordinates]",{"range":"845","text":"846"},"Update the dependencies array to be: [scrollToPlayer, setBaitOffset, setBaitType, setRodAngle]",{"range":"847","text":"848"},"Update the dependencies array to be: [isBarometerVisible, setIsBarometerVisible]",{"range":"849","text":"850"},"Update the dependencies array to be: [isPlayerMoving, isMainMenuOpen, baitFood, setProcess]",{"range":"851","text":"852"},"Update the dependencies array to be: [playerCoordinates, isMainMenuOpen, movePlayer, throwLine, shoreRef]",{"range":"853","text":"854"},{"range":"855","text":"843"},"Update the dependencies array to be: [setBaitOffset, setBaitType, setProcess, setRodAngle, setRodOffset]",{"range":"856","text":"857"},"Update the dependencies array to be: [scrollToPlayer, setBaitOffset, setRodOffset]",{"range":"858","text":"859"},{"range":"860","text":"850"},"Update the dependencies array to be: [isThrowing, setBaitOffset, setRodAngle, setRodOffset]",{"range":"861","text":"862"},"Update the dependencies array to be: [isThrowing, hasThrown, rodLevel, baitOffset, baitOffsetLimit, baitLakeCoords, setIsBarometerVisible, setBaitOffset, scrollToBait, emitBaitFallEvent, setBaitType, baitRef, lakeRef, setProcess, baitDropSE, badassSE]",{"range":"863","text":"864"},"Update the dependencies array to be: [rodLevel.maxLength, setBaitOffset, rodAngle]",{"range":"865","text":"866"},"Update the dependencies array to be: [isPreparingThrow, spaceFired, rodAngle, rodOffset, confirmThrow, isThrowing, goBack, changeRodDirection]",{"range":"867","text":"868"},"Update the dependencies array to be: []",{"range":"869","text":"870"},"Update the dependencies array to be: [baitOffset.x, baitOffset.y, lineLength, setBaitOffset, setRodAngle, scrollToBait]",{"range":"871","text":"872"},"Update the dependencies array to be: [isFishPulling, isPlayerReeling, strengthRatio, fishRodLevel, move, incrementLineTension]",{"range":"873","text":"874"},"Update the dependencies array to be: [isPlayerReeling, reelingSE]",{"range":"875","text":"876"},"Update the dependencies array to be: [baitDistance, catchNewFish, goBack, hookedFish.fish, setGameProcess]",{"range":"877","text":"878"},"Update the dependencies array to be: [reelingSE, setGameProcess, setHookedFish, setLineTension]",{"range":"879","text":"880"},"Update the dependencies array to be: [hookedFish.fish.pullChance, hookedFish.fish.roamingInterval, setIsFishPulling]",{"range":"881","text":"882"},"Update the dependencies array to be: [SEPath, soundEffect]",{"range":"883","text":"884"},"Update the dependencies array to be: [destroyNotification, duration, transition]",{"range":"885","text":"886"},"Update the dependencies array to be: [makeBaitAvailable]",{"range":"887","text":"888"},"Update the dependencies array to be: [baitDistance, isReeling, baitOffset.x, baitOffset.y, lineLength, setBaitOffset, setRodAngle, scrollToBait, goBack]",{"range":"889","text":"890"},{"range":"891","text":"850"},"Update the dependencies array to be: [isReeling, reelingSE]",{"range":"892","text":"893"},"Update the dependencies array to be: [sellerPhrase.length, sellerPhraseSpelled]",{"range":"894","text":"895"},"Update the dependencies array to be: [baitFood]",{"range":"896","text":"897"},"Update the dependencies array to be: [currentStatusSectionID, doubloons, gameTimeSpentFormatted, fishrodLevel._id, baitFood, baitColor, removeBait, setCurrentSection]",{"range":"898","text":"899"},"Update the dependencies array to be: [isEquipment, category, rodLevel._id, _id]",{"range":"900","text":"901"},{"range":"902","text":"843"},{"range":"903","text":"843"},{"range":"904","text":"843"},{"range":"905","text":"843"},{"range":"906","text":"843"},{"range":"907","text":"901"},"Update the dependencies array to be: [isEquipment, isEquipped, _id, category, baitFood, removeBait, handleUseBait, equipItem]",{"range":"908","text":"909"},"Update the dependencies array to be: [_id, category]",{"range":"910","text":"911"},"Update the dependencies array to be: [entries, isPlayerOutOfBaits, currentEntryNum, setCurrentSection]",{"range":"912","text":"913"},"Update the dependencies array to be: [focusedItem, setSellerPhrase]",{"range":"914","text":"915"},"Update the dependencies array to be: [myDoubloons, sellableEntries, focusedItem, setSellerPhrase, sellItem, saleSE]",{"range":"916","text":"917"},"Update the dependencies array to be: [canSell, isConfirmingSale, saleAmount, _id, plural, setSellerPhrase]",{"range":"918","text":"919"},"Update the dependencies array to be: [canSell, isConfirmingSale, setSellerPhrase, saleAmount, plural, _id, sellItem, totalPrice, saleSE, amount, setFocusedItem]",{"range":"920","text":"921"},"Update the dependencies array to be: [setSellerPhrase]",{"range":"922","text":"923"},{"range":"924","text":"915"},"Update the dependencies array to be: [focusedItem, setSellerPhrase, myDoubloons, purchaseItem, purchaseSE, thankYouSE, inventoryEntries]",{"range":"925","text":"926"},"Update the dependencies array to be: [canBuy, isConfirmingPurchase, amount, _id, plural, setSellerPhrase]",{"range":"927","text":"928"},"Update the dependencies array to be: [canBuy, isConfirmingPurchase, setSellerPhrase, amount, plural, _id, purchaseItem, totalPrice, purchaseSE, thankYouSE]",{"range":"929","text":"930"},{"range":"931","text":"923"},{"range":"932","text":"911"},{"range":"933","text":"843"},{"range":"934","text":"843"},{"range":"935","text":"843"},{"range":"936","text":"843"},{"range":"937","text":"843"},"Update the dependencies array to be: [setFishCoords, area]",{"range":"938","text":"939"},"Update the dependencies array to be: [hookedFish, giveUpBait, baitFood.category, baitFood._id, setGameNotification, loseBait, setGameProcess]",{"range":"940","text":"941"},"Update the dependencies array to be: [fishCoords, roamingDistance, fishWidth, area]",{"range":"942","text":"943"},"Update the dependencies array to be: [wouldHookSuccessfully, canTryToCatch, isBaitAvailable, fishID, groupID, strength, size, goAway, setHookedFish, fish, pullChance, isBoss, setGameProcess, makeBaitAvailable, setGameNotification]",{"range":"944","text":"945"},"Update the dependencies array to be: [onClose, transition]",{"range":"946","text":"947"},"Update the dependencies array to be: [rest, src]",{"range":"948","text":"949"},[3141,3155],"[audioEnabled, creekBE]",[4971,4999],"[audioEnabled, backgroundMusic, isBGMEnabled]",[5177,5179],"[spendOneMinute]",[6440,6459],"[playerCoordinates.width, playerCoordinates.x, playerCoordinates.y, rodDimensions.height]",[7387,7443],"[map, baitCoordinates, rodDimensions]",[7738,7767],"[baitCoordinates.x, baitCoordinates.y, baitOffset.x, baitOffset.y, map.shorePath.to.y]",[8492,8527],"[lineOrigin.x, lineOrigin.y, baitOffset.x, baitOffset.y, rodOffset.x, rodOffset.y, rodAngle, rodDimensions.height]",[10984,11000],"[baitLakeCoords, updateGlobalPositionState]",[14286,14580],"[process, setProcess, playerCoordinates, scrollToPlayer, map, isBarometerVisible, scrollToBait, rodAngle, rodOffset, baitOffset, baitOffsetLimit, baitLakeCoords, baitDistance, rodLevel, lineLength]",[15316,15336],"[isPlayerOutOfBaits, map.shorePath.from.x, map.shorePath.from.y, map.shorePath.to.x, map.shorePath.to.y]",[1360,1362],"[closeMenu]",[2273,2314],"[nextStep, baitDistance, lineStepMatches.steps, lineStepMatches.subSteps]",[1723,1725],"[dispatch]",[1827,1829],[3237,3256],"[isPlayerMoving, map.width, playerCoordinates, scrollToPlayer, setPlayerCoordinates]",[3531,3533],"[scrollToPlayer, setBaitOffset, setBaitType, setRodAngle]",[3679,3681],"[isBarometerVisible, setIsBarometerVisible]",[3892,3934],"[isPlayerMoving, isMainMenuOpen, baitFood, setProcess]",[7551,7586],"[playerCoordinates, isMainMenuOpen, movePlayer, throwLine, shoreRef]",[2584,2586],[3465,3467],"[setBaitOffset, setBaitType, setProcess, setRodAngle, setRodOffset]",[3661,3663],"[scrollToPlayer, setBaitOffset, setRodOffset]",[3763,3765],[4112,4124],"[isThrowing, setBaitOffset, setRodAngle, setRodOffset]",[8110,8188],"[isThrowing, hasThrown, rodLevel, baitOffset, baitOffsetLimit, baitLakeCoords, setIsBarometerVisible, setBaitOffset, scrollToBait, emitBaitFallEvent, setBaitType, baitRef, lakeRef, setProcess, baitDropSE, badassSE]",[8713,8733],"[rodLevel.maxLength, setBaitOffset, rodAngle]",[15138,15276],"[isPreparingThrow, spaceFired, rodAngle, rodOffset, confirmThrow, isThrowing, goBack, changeRodDirection]",[18650,18673],"[]",[7206,7245],"[baitOffset.x, baitOffset.y, lineLength, setBaitOffset, setRodAngle, scrollToBait]",[9527,9594],"[isFishPulling, isPlayerReeling, strengthRatio, fishRodLevel, move, incrementLineTension]",[9816,9833],"[isPlayerReeling, reelingSE]",[10108,10122],"[baitDistance, catchNewFish, goBack, hookedFish.fish, setGameProcess]",[10386,10388],"[reelingSE, setGameProcess, setHookedFish, setLineTension]",[10795,10797],"[hookedFish.fish.pullChance, hookedFish.fish.roamingInterval, setIsFishPulling]",[2214,2227],"[SEPath, soundEffect]",[2632,2642],"[destroyNotification, duration, transition]",[1809,1811],"[makeBaitAvailable]",[3455,3500],"[baitDistance, isReeling, baitOffset.x, baitOffset.y, lineLength, setBaitOffset, setRodAngle, scrollToBait, goBack]",[3672,3674],[4365,4376],"[isReeling, reelingSE]",[1946,1967],"[sellerPhrase.length, sellerPhraseSpelled]",[1622,1647],"[baitFood]",[4719,4895],"[currentStatusSectionID, doubloons, gameTimeSpentFormatted, fishrodLevel._id, baitFood, baitColor, removeBait, setCurrentSection]",[2264,2289],"[isEquipment, category, rodLevel._id, _id]",[3578,3580],[3681,3683],[3779,3781],[3865,3867],[3957,3959],[4435,4460],[7283,7345],"[isEquipment, isEquipped, _id, category, baitFood, removeBait, handleUseBait, equipItem]",[7929,7945],"[_id, category]",[13634,13680],"[entries, isPlayerOutOfBaits, currentEntryNum, setCurrentSection]",[2648,2661],"[focusedItem, setSellerPhrase]",[3556,3609],"[myDoubloons, sellableEntries, focusedItem, setSellerPhrase, sellItem, saleSE]",[6495,6547],"[canSell, isConfirmingSale, saleAmount, _id, plural, setSellerPhrase]",[7473,7691],"[canSell, isConfirmingSale, setSellerPhrase, saleAmount, plural, _id, sellItem, totalPrice, saleSE, amount, setFocusedItem]",[7850,7852],"[setSellerPhrase]",[3521,3534],[4417,4457],"[focusedItem, setSellerPhrase, myDoubloons, purchaseItem, purchaseSE, thankYouSE, inventoryEntries]",[7423,7474],"[canBuy, isConfirmingPurchase, amount, _id, plural, setSellerPhrase]",[8392,8596],"[canBuy, isConfirmingPurchase, setSellerPhrase, amount, plural, _id, purchaseItem, totalPrice, purchaseSE, thankYouSE]",[8759,8761],[9345,9361],[3883,3885],[3989,3991],[4067,4069],[4185,4187],[4306,4308],[7461,7491],"[setFishCoords, area]",[9330,9365],"[hookedFish, giveUpBait, baitFood.category, baitFood._id, setGameNotification, loseBait, setGameProcess]",[10220,10303],"[fishCoords, roamingDistance, fishWidth, area]",[16492,16588],"[wouldHookSuccessfully, canTryToCatch, isBaitAvailable, fishID, groupID, strength, size, goAway, setHookedFish, fish, pullChance, isBoss, setGameProcess, makeBaitAvailable, setGameNotification]",[754,763],"[onClose, transition]",[704,708],"[rest, src]"]